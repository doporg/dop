logging:
  level:
    com.clsaa.dop.server.application: debug
server:
  port: 13800
spring:
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  application:
    name: application-server
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://172.29.7.157:3306/db_dop_application?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
    username: dop
    password: Dop_mysql_12345
    driver-class-name: com.mysql.cj.jdbc.Driver
    max-active: 10
    max-idle: 5
    min-idle: 5
    initial-size: 5
    max-wait: 10000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  zipkin:
    base-url: http://zipkin-server:9000
  sleuth:
    sampler:
      percentage: 1.0

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS: true
spring.jackson.serialization.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: false

project:
  host: gateway-server:14258/@project.name@
  groupId: @project.groupId@
  artifactId: @project.artifactId@
  version: @project.version@
  name: @project.name@
  description: @project.description@
  url: @project.url@
swagger.enable: true
eureka:
  instance:
    appname: ${spring.application.name}
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
    prefer-ip-address: true
    #续约更新时间间隔
    lease-renewal-interval-in-seconds: 5
    #续约到期时间
    lease-expiration-duration-in-seconds: 10
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka
    registry-fetch-interval-seconds: 5 #定时刷新本地缓存
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
  ServerListRefreshInterval: 2000
logging.path: ./logs/${spring.application.name}

k8s:
  deploymentApiVersion: "apps/v1"
  deploymentKind: "Deployment"
  deploymentLabelPrefix: "app"
  deploymentContainerPortProtocol: "TCP"
#  deploymentImagePullPolicy: "Always"
  deploymentLocalTimeMountPath: "/etc/localtime"
  deploymentLocalTimeMountName: "host-time"
  deploymentTimeZoneMountPath: "/etc/timezone"
  deploymentTimeZoneMountName: "host-timezone"
  deploymentDnsPolicy: "ClusterFirst"
  serviceApiVersion: "v1"
  serviceKind: "Service"
  ingressApiVersion: "extensions/v1"
  ingressKind: "Ingress"
  virtualServiceVersionLabel: "version"
  serviceTypeNodeport: "NodePort"
  serviceNodeportHttpName: "http"
permission:
  createProject: "创建项目"
  viewProject: "查看项目"
  createApp: "创建应用"
  viewApp: "查看应用"
  editApp: "编辑应用"
  deleteApp: "删除应用"
  viewAppUrl: "查看应用url"
  editAppUrl: "编辑应用url"
  createAppEnv: "创建应用环境"
  viewAppEnv: "查看应用环境"
  viewAppEnvDetail: "查看应用环境详情"
  viewPipeline: "查看pipeline"
  deleteAppEnv: "删除应用环境"
  createVar: "创建环境变量"
  viewVar: "查看环境变量"
  editVar: "编辑环境变量"
  deleteVar: "删除环境变量"
  viewCluster: "查看集群信息"
  editCluster: "编辑集群信息"
  createYamlData: "创建yaml信息"
  editYamlData: "编辑yaml信息"
  viewYamlData: "查看yaml信息"
  editDeploymentYaml: "编辑yaml文件"
  viewNameSpace: "查看命名空间"
  viewService: "查看服务"
  createService: "创建服务"
  viewDeployment: "查看部署"
  projectRuleId: 11
  projectRuleFieldName: "projectId"
  appRuleId: 12
  appRuleFieldName: "appId"
