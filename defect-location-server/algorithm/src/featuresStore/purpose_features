[{"project": "Feeder", "commit_id": "47681655fb946a59d23858c6a5cbe2b686641de8", "time_stamp": 1408119892, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": ".gitignore"}, {"type": "add", "modified_path": ".gitmodules"}, {"type": "add", "modified_path": "app/.gitignore"}, {"type": "add", "modified_path": "app/build.gradle"}, {"type": "add", "modified_path": "app/proguard-rules.pro"}, {"type": "add", "modified_path": "app/src/androidTest/java/com/nononsenseapps/feeder/ApplicationTest.java"}, {"type": "add", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/ui/DividerItemDecoration.java"}, {"type": "add", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/util/LPreviewUtils.java"}, {"type": "add", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/util/LPreviewUtilsImpl.java"}, {"type": "add", "modified_path": "app/src/lpreview/res/anim-v21/floating_add_button_state_list_anim.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/drawable-v21/floating_add_button_ripple_background_off.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/drawable-v21/floating_add_button_ripple_background_on.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar_with_headerbar.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar_with_translucent_background.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/transition-v21/shared_element.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/transition-v21/window_enter_exit.xml"}, {"type": "add", "modified_path": "app/src/lpreview/res/values-v21/styles.xml"}, {"type": "add", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/NavigationDrawerFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/SimpleSinglePaneActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/LPreviewUtils.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/LPreviewUtilsBase.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/DrawShadowFrameLayout.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/ObservableScrollView.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/drawer_shadow.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/drawer_shadow.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_pressed.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/actionbar_background.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/drawer_shadow.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_pressed.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/bacon.jpg"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/bottom_shadow.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/drawer_shadow.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/faktura513132500622.pdf"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_overflow.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_drawer.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_up.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/plus_fab_icon.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/textfield_activated.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/textfield_default.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/textfield_focused.9.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable/add_schedule_fab_background.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/edit_text.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/photo_banner_scrim.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_floating_add_button.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/navdrawer_content.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/padding_header_item.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/toolbar_actionbar.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "add", "modified_path": "app/src/main/res/menu/feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/menu/global.xml"}, {"type": "add", "modified_path": "app/src/main/res/menu/story.xml"}, {"type": "add", "modified_path": "app/src/main/res/values-sw600dp/dimens.xml"}, {"type": "add", "modified_path": "app/src/main/res/values-w820dp/dimens.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/refs.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/styles.xml"}, {"type": "add", "modified_path": "build.gradle"}, {"type": "add", "modified_path": "deps/Simplistic-RSS"}, {"type": "add", "modified_path": "gradle.properties"}, {"type": "add", "modified_path": "gradle/wrapper/gradle-wrapper.jar"}, {"type": "add", "modified_path": "gradle/wrapper/gradle-wrapper.properties"}, {"type": "add", "modified_path": "gradlew"}, {"type": "add", "modified_path": "gradlew.bat"}, {"type": "add", "modified_path": "settings.gradle"}], "find_interval": null, "la": 2577, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "ce493ee09c01696ad9249f998374ffc5018ff2c9", "time_stamp": 1408123307, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"b8e51073b31aeb8e19a835f61e753d4a8a139f1d\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"107\", \"109\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}, {"type": "rename", "modified_path": "app/src/main/res/menu/story.xml", "current_path": "app/src/main/res/menu/edit_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": 52699, "la": 129, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "50ec7b962a66dcb823252393b84ac7b4bb0192b8", "time_stamp": 1408124538, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 3, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (item.getPlainTitle() == null) {\", \"holder.titleTextView.setText(item.getPlainTitle());\", \"if (item.getSnippet() == null) {\"]"}, {"project": "Feeder", "commit_id": "b8e51073b31aeb8e19a835f61e753d4a8a139f1d", "time_stamp": 1408176006, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"ce493ee09c01696ad9249f998374ffc5018ff2c9\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 15, "ld": 14, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"107\", \"109\", \"189\"]}", "rules": null, "clean_lines": "[\"FeedAdapter.ViewHolder viewHolder =\", \"(FeedAdapter.ViewHolder) view.getTag();\", \"i.setData(Uri.parse(viewHolder.link));\", \"private List<RssItem> items = null;\", \"final RssItem item = items.get(position);\", \"@Override\", \"public int getCount() {\", \"if (items == null) {\", \"return 0;\", \"} else {\", \"return 1 + items.size();\", \"}\", \"}\", \"this.items = feed;\"]"}, {"project": "Feeder", "commit_id": "9d0a9c8e7c78f44ff23d7665a0b0cd1de00d4dac", "time_stamp": 1408293720, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/ObservableScrollView.java"}, {"type": "add", "modified_path": "app/src/main/res/layout/activity_reader.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 316, "ld": 33, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String SHOULD_FINISH_BACK = \\\"SHOULD_FINISH_BACK\\\";\", \"private boolean mShouldFinishBack = false;\", \"Intent i = getIntent();\", \"if (i != null) {\", \"mShouldFinishBack = i.getBooleanExtra(SHOULD_FINISH_BACK, false);\", \"}\", \"if (mDrawerToggle != null &&\", \"mDrawerToggle.onOptionsItemSelected(item)) {\", \"if (id == android.R.id.home && mShouldFinishBack) {\", \"finish();\", \"protected void enableActionBarAutoHide(\", \"final ObservableScrollView scrollView) {\", \"initActionBarAutoHide();\", \"mActionBarAutoHideSignal = 0;\", \"scrollView.addOnScrollChangedListener(\", \"new ObservableScrollView.OnScrollChangedListener() {\", \"@Override\", \"public void onScrollChanged(final int deltaX,\", \"final int deltaY) {\", \"onMainContentScrolled(scrollView.getScrollY(), deltaY);\", \"}\", \"});\", \"}\", \"ActivityOptions options = ActivityOptions\", \".makeScaleUpAnimation(view, 0, 0, view.getWidth(),\", \"view.getHeight());\", \"startActivity(i, options.toBundle());\", \"((FeedAdapter.ViewHolder) view.getTag()).onClick(view);\", \"holder.rssItem = item;\", \"public RssItem rssItem;\", \"public void onClick(final View view) {\", \"Intent i = new Intent(getActivity(),\", \"ReaderActivity.class);\", \"i.putExtra(BaseActivity.SHOULD_FINISH_BACK, true);\", \"ReaderActivity.setRssExtras(i, -1, rssItem);\", \"Log.d(\\\"JONAS\\\", \\\"View size: w: \\\" + view.getWidth() \", \"\\\", h: \\\" + view.getHeight());\", \"Log.d(\\\"JONAS\\\", \\\"View pos: l: \\\" + view.getLeft() \", \"\\\", t: \\\" + view.getTop());\", \"ActivityOptions options = ActivityOptions\", \".makeScaleUpAnimation(view, 0, 0,\", \"view.getWidth(), view.getHeight());\", \"startActivity(i, options.toBundle());\", \"}\", \"public class ReaderActivity extends BaseActivity {\", \"public static void setRssExtras(Intent intent, long id, RssItem rssItem) {\", \"intent.putExtra(ReaderFragment.ARG_ID, id);\", \"intent.putExtra(ReaderFragment.ARG_TITLE, rssItem.getTitle());\", \"intent.putExtra(ReaderFragment.ARG_DESCRIPTION,\", \"rssItem.getDescription());\", \"intent.putExtra(ReaderFragment.ARG_LINK, rssItem.getLink());\", \"intent.putExtra(ReaderFragment.ARG_IMAGEURL, rssItem.getImageUrl());\", \"}\", \"private CharSequence mTitle;\", \"private Fragment mFragment;\", \"private DrawShadowFrameLayout mDrawShadowFrameLayout;\", \"private View mCheckButton;\", \"@Override\", \"public void onCreate(Bundle savedInstanceState) {\", \"super.onCreate(savedInstanceState);\", \"setContentView(R.layout.activity_reader);\", \"mTitle = getTitle();\", \"if (savedInstanceState == null) {\", \"mFragment = getFragment();\", \"getFragmentManager().beginTransaction()\", \".add(R.id.container, mFragment, \\\"single_pane\\\").commit();\", \"} else {\", \"mFragment = getFragmentManager().findFragmentByTag(\\\"single_pane\\\");\", \"}\", \"getLPreviewUtils().trySetActionBar();\", \"mDrawShadowFrameLayout =\", \"(DrawShadowFrameLayout) findViewById(R.id.main_content);\", \"mCheckButton = findViewById(R.id.add_button);\", \"mCheckButton.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View view) {\", \"finish();\", \"}\", \"});\", \"}\", \"private Fragment getFragment() {\", \"Intent i = getIntent();\", \"Fragment fragment = new ReaderFragment();\", \"fragment.setArguments(i.getExtras());\", \"return fragment;\", \"}\", \"@Override\", \"protected void onPostCreate(Bundle savedInstanceState) {\", \"super.onPostCreate(savedInstanceState);\", \"registerHideableHeaderView(findViewById(R.id.headerbar));\", \"registerHideableFooterView(mCheckButton);\", \"}\", \"@Override\", \"protected void onActionBarAutoShowOrHide(boolean shown) {\", \"super.onActionBarAutoShowOrHide(shown);\", \"mDrawShadowFrameLayout.setShadowVisible(shown, shown);\", \"}\", \"}\", \"public class ReaderFragment extends Fragment {\", \"public static final String ARG_TITLE = \\\"title\\\";\", \"public static final String ARG_DESCRIPTION = \\\"body\\\";\", \"public static final String ARG_LINK = \\\"link\\\";\", \"public static final String ARG_IMAGEURL = \\\"imageurl\\\";\", \"public static final String ARG_ID = \\\"dbid\\\";\", \"private long _id = -1;\", \"private RssItem mRssItem;\", \"private TextView mTitleTextView;\", \"private TextView mBodyTextView;\", \"private ObservableScrollView mScrollView;\", \"public static ReaderFragment newInstance(long id, RssItem rssItem) {\", \"ReaderFragment fragment = new ReaderFragment();\", \"fragment.mRssItem = rssItem;\", \"fragment._id = id;\", \"fragment.setArguments(RssItemToBundle(id, rssItem, null));\", \"return fragment;\", \"}\", \"public static Bundle RssItemToBundle(long id, RssItem rssItem,\", \"Bundle bundle) {\", \"if (bundle == null) {\", \"bundle = new Bundle();\", \"}\", \"bundle.putLong(ARG_ID, id);\", \"bundle.putString(ARG_TITLE, rssItem.getTitle());\", \"bundle.putString(ARG_DESCRIPTION, rssItem.getDescription());\", \"bundle.putString(ARG_LINK, rssItem.getLink());\", \"bundle.putString(ARG_IMAGEURL, rssItem.getImageUrl());\", \"return bundle;\", \"}\", \"public static RssItem RssItemFromBundle(Bundle bundle) {\", \"RssItem rssItem = new RssItem();\", \"rssItem.setTitle(bundle.getString(ARG_TITLE));\", \"rssItem.setDescription(bundle.getString(ARG_DESCRIPTION));\", \"rssItem.setLink(bundle.getString(ARG_LINK));\", \"rssItem.setImageUrl(bundle.getString(ARG_IMAGEURL));\", \"return rssItem;\", \"}\", \"public ReaderFragment() {\", \"}\", \"@Override\", \"public void onCreate(Bundle savedInstanceState) {\", \"super.onCreate(savedInstanceState);\", \"if (savedInstanceState != null) {\", \"_id = savedInstanceState.getLong(ARG_ID);\", \"mRssItem = RssItemFromBundle(savedInstanceState);\", \"} else if (mRssItem == null) {\", \"_id = getArguments().getLong(ARG_ID, -1);\", \"mRssItem = RssItemFromBundle(getArguments());\", \"}\", \"}\", \"@Override\", \"public View onCreateView(LayoutInflater inflater, ViewGroup container,\", \"Bundle savedInstanceState) {\", \"View rootView = inflater.inflate(R.layout.fragment_reader, container,\", \"false);\", \"mScrollView = (ObservableScrollView) rootView.findViewById(R.id.scroll_view);\", \"mTitleTextView = (TextView) rootView.findViewById(R.id.story_title);\", \"mBodyTextView = (TextView) rootView.findViewById(R.id.story_body);\", \"if (mRssItem.getTitle() == null) {\", \"} else {\", \"mTitleTextView\", \".setText(android.text.Html.fromHtml(mRssItem.getTitle()));\", \"}\", \"if (mRssItem.getDescription() == null) {\", \"} else {\", \"mBodyTextView.setText(\", \"android.text.Html.fromHtml(mRssItem.getDescription()));\", \"}\", \"return rootView;\", \"}\", \"@Override\", \"public void onActivityCreated(Bundle bundle) {\", \"super.onActivityCreated(bundle);\", \"((BaseActivity) getActivity()).enableActionBarAutoHide(mScrollView);\", \"}\", \"@Override\", \"public void onSaveInstanceState(Bundle outState) {\", \"RssItemToBundle(_id, mRssItem, outState);\", \"super.onSaveInstanceState(outState);\", \"}\", \"}\", \"private ArrayList<OnScrollChangedListener> mCallbacks = new ArrayList<OnScrollChangedListener>();\", \"for (OnScrollChangedListener c : mCallbacks) {\", \"public void addOnScrollChangedListener(OnScrollChangedListener listener) {\", \"public static interface OnScrollChangedListener {\"]"}, {"project": "Feeder", "commit_id": "4a8a679bedfcbc6530104f90280068b5f6468eac", "time_stamp": 1408298018, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "add", "modified_path": "app/src/main/res/anim/to_bottom_right.xml"}], "find_interval": null, "la": 16, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (mShouldFinishBack) {\", \"overridePendingTransition(R.anim.to_bottom_right, R.anim.to_bottom_right);\", \"}\", \"@Override\", \"public void onBackPressed()\", \"{\", \"super.onBackPressed();\", \"if (mShouldFinishBack) {\", \"overridePendingTransition(R.anim.to_bottom_right, R.anim.to_bottom_right);\", \"}\", \"}\", \"overridePendingTransition(R.anim.to_bottom_right, R.anim.to_bottom_right);\"]"}, {"project": "Feeder", "commit_id": "74413486499b592a36df0b4638dd4f91bce734af", "time_stamp": 1408299110, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "add", "modified_path": "app/src/main/res/anim/contract_to_center.xml"}, {"type": "modify", "modified_path": "app/src/main/res/anim/to_bottom_right.xml"}], "find_interval": null, "la": 33, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"protected boolean mShouldFinishBack = false;\", \"overridePendingTransition(0, R.anim.to_bottom_right);\", \"if (mShouldFinishBack) {\", \"overridePendingTransition(0, R.anim.contract_to_center);\", \"}\", \"@Override\", \"public void onBackPressed()\", \"{\", \"super.onBackPressed();\", \"if (mShouldFinishBack) {\", \"overridePendingTransition(0, R.anim.contract_to_center);\", \"}\", \"}\", \"@Override\", \"public boolean onOptionsItemSelected(MenuItem item) {\", \"int id = item.getItemId();\", \"if (id == android.R.id.home && mShouldFinishBack) {\", \"boolean val = super.onOptionsItemSelected(item);\", \"overridePendingTransition(0, R.anim.contract_to_center);\", \"return val;\", \"}\", \"return super.onOptionsItemSelected(item);\", \"}\"]"}, {"project": "Feeder", "commit_id": "44e19801bf4af0d78c6304371868a8ee84017b36", "time_stamp": 1408395444, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "modify", "modified_path": "gradle/wrapper/gradle-wrapper.jar"}, {"type": "modify", "modified_path": "gradle/wrapper/gradle-wrapper.properties"}], "find_interval": null, "la": 106, "ld": 5, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class FeedItemSQL {\", \"public static final String TABLE_NAME = \\\"FeedItem\\\";\", \"public static final String COL_ID = \\\"_id\\\";\", \"public static final String COL_TITLE = \\\"title\\\";\", \"public static final String COL_DESCRIPTION = \\\"description\\\";\", \"public static final String COL_PLAINTITLE = \\\"plaintitle\\\";\", \"public static final String COL_PLAINSNIPPET = \\\"plainsnippet\\\";\", \"public static final String COL_IMAGEURL = \\\"imageurl\\\";\", \"public static final String COL_LINK = \\\"link\\\";\", \"public static final String COL_AUTHOR = \\\"author\\\";\", \"public static final String COL_DATE = \\\"date\\\";\", \"public static final String COL_FEED = \\\"feed\\\";\", \"public static final String COL_TAG = \\\"tag\\\";\", \"public static final String[] FIELDS =\", \"{COL_ID, COL_TITLE, COL_DESCRIPTION, COL_PLAINTITLE, COL_PLAINSNIPPET, COL_IMAGEURL,\", \"COL_LINK, COL_AUTHOR, COL_DATE, COL_FEED, COL_TAG};\", \"public static final String CREATE_TABLE =\", \"\\\"CREATE TABLE \\\" + TABLE_NAME + \\\"(\\\"\", \"+ COL_ID + \\\" INTEGER PRIMARY KEY,\\\"\", \"+ COL_TITLE + \\\" TEXT NOT NULL,\\\"\", \"+ COL_DESCRIPTION + \\\" TEXT NOT NULL,\\\"\", \"+ COL_PLAINTITLE + \\\" TEXT NOT NULL,\\\"\", \"+ COL_PLAINSNIPPET + \\\" TEXT NOT NULL,\\\" \", \"COL_IMAGEURL + \\\" TEXT,\\\" \", \"COL_LINK + \\\" TEXT NOT NULL,\\\" \", \"COL_AUTHOR + \\\" TEXT NOT NULL,\\\" \", \"COL_DATE + \\\" TEXT NOT NULL,\\\" \", \"COL_FEED + \\\" INTEGER NOT NULL,\\\" \", \"COL_TAG + \\\" TEXT,\\\" \", \"\\\" FOREIGN KEY(\\\" + COL_FEED + \\\") REFERENCES \\\" + FeedSQL.TABLE_NAME + \\\"(\\\" \", \"FeedSQL.COL_ID + \\\") ON DELETE CASCADE\\\"\", \"+ \\\")\\\";\", \"public long id = -1;\", \"public String title = null;\", \"public String link = null;\", \"public FeedItemSQL() {\", \"}\", \"public FeedItemSQL(final Cursor cursor) {\", \"this.id = cursor.getLong(0);\", \"this.title = cursor.getString(1);\", \"this.link = cursor.getString(2);\", \"}\", \"public ContentValues getContent() {\", \"final ContentValues values = new ContentValues();\", \"values.put(COL_TITLE, title);\", \"values.put(COL_LINK, link);\", \"return values;\", \"}\", \"}\", \"public static final String COL_TAG = \\\"tag\\\";\", \"public static final String[] FIELDS = {COL_ID, COL_TITLE, COL_URL, COL_TAG};\", \"+ COL_ID + \\\" INTEGER PRIMARY KEY,\\\"\", \"+ COL_TITLE + \\\" TEXT NOT NULL,\\\"\", \"+ COL_URL + \\\" TEXT NOT NULL,\\\"\", \"+ COL_TAG + \\\" TEXT\\\"\", \"+ \\\")\\\";\", \"public String tag = null;\", \"this.tag = cursor.getString(3);\", \"if (tag == null)\", \"values.putNull(COL_TAG);\", \"else\", \"values.put(COL_TAG, tag);\"]"}, {"project": "Feeder", "commit_id": "7bfc76225daaf055e83eb01ebd6b765e38f33511", "time_stamp": 1408398598, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/NavigationDrawerFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_location_web_site.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_location_web_site.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_location_web_site.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_location_web_site.png"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}, {"type": "add", "modified_path": "app/src/main/res/menu/reader.xml"}], "find_interval": null, "la": 137, "ld": 52, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"onNavigationDrawerItemSelected(c.getLong(0), c.getString(1),\", \"protected void onNavigationDrawerItemSelected(long id, String title, String url) {\", \"public static final String _ID = \\\"_id\\\";\", \"private long id = -1;\", \"if (id < 1) {\", \"getContentResolver()\", \".insert(RssContentProvider.URI_FEEDS, values);\", \"} else {\", \"getContentResolver().update(Uri\", \".withAppendedPath(RssContentProvider.URI_FEED_BASE, Long.toString(id)),\", \"values, null, null);\", \"}\", \"id = i.getLongExtra(_ID, -1);\", \"private boolean shouldBeFloatingWindow() {\", \"Resources.Theme theme = getTheme();\", \"TypedValue floatingWindowFlag = new TypedValue();\", \"if (theme == null ||\", \"!theme.resolveAttribute(R.attr.isFloatingWindow, floatingWindowFlag, true)) {\", \"return false;\", \"return (floatingWindowFlag.data != 0);\", \"params.height =\", \"getResources().getDimensionPixelSize(R.dimen.session_details_floating_height);\", \"@Override\", \"public void onBackPressed() {\", \"super.onBackPressed();\", \"if (mShouldFinishBack) {\", \"overridePendingTransition(0, R.anim.to_bottom_right);\", \"return FeedFragment.newInstance(-1, \\\"Android Police\\\",\", \"protected void onNavigationDrawerItemSelected(long id, String title, String url) {\", \"mFragment = FeedFragment.newInstance(id, title, url);\", \"private static final int FEED_LOADER = 1;\", \"private static final String ARG_FEED_ID = \\\"feed_id\\\";\", \"private long id = -1;\", \"public static FeedFragment newInstance(long id, String title, String url) {\", \"args.putLong(ARG_FEED_ID, id);\", \"id = getArguments().getLong(ARG_FEED_ID, -1);\", \"setHasOptionsMenu(true);\", \"@Override\", \"public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\", \"inflater.inflate(R.menu.feed_fragment, menu);\", \"if (id < 1) {\", \"menu.findItem(R.id.action_edit_feed).setVisible(false);\", \"}\", \"super.onCreateOptionsMenu(menu, inflater);\", \"}\", \"@Override\", \"public boolean onOptionsItemSelected(MenuItem menuItem) {\", \"final long id = menuItem.getItemId();\", \"if (id == R.id.action_edit_feed && id > 0) {\", \"Intent i = new Intent(getActivity(),\", \"EditFeedActivity.class);\", \"i.putExtra(EditFeedActivity.SHOULD_FINISH_BACK, true);\", \"i.putExtra(EditFeedActivity._ID, id);\", \"startActivity(i);\", \"return true;\", \"} else {\", \"return super.onOptionsItemSelected(menuItem);\", \"}\", \"}\", \"public ReaderFragment() {\", \"}\", \"Bundle bundle) {\", \"setHasOptionsMenu(true);\", \"}\", \"public static RssItem RssItemFromBundle(Bundle bundle) {\", \"RssItem rssItem = new RssItem();\", \"rssItem.setTitle(bundle.getString(ARG_TITLE));\", \"rssItem.setDescription(bundle.getString(ARG_DESCRIPTION));\", \"rssItem.setLink(bundle.getString(ARG_LINK));\", \"rssItem.setImageUrl(bundle.getString(ARG_IMAGEURL));\", \"return rssItem;\", \"@Override\", \"public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\", \"inflater.inflate(R.menu.reader, menu);\", \"MenuItem shareItem = menu.findItem(R.id.action_share);\", \"ShareActionProvider shareActionProvider =\", \"(ShareActionProvider) shareItem.getActionProvider();\", \"Intent shareIntent = new Intent(Intent.ACTION_SEND);\", \"shareIntent.putExtra(Intent.EXTRA_TEXT, mRssItem.getLink());\", \"shareActionProvider.setShareIntent(shareIntent);\", \"super.onCreateOptionsMenu(menu, inflater);\", \"}\", \"@Override\", \"public boolean onOptionsItemSelected(MenuItem menuItem) {\", \"final long id = menuItem.getItemId();\", \"if (id == R.id.action_open_in_browser) {\", \"startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(mRssItem.getLink())));\", \"return true;\", \"} else {\", \"return super.onOptionsItemSelected(menuItem);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "09579fc2d07a2ce017393356973c7cbba09ba415", "time_stamp": 1408465417, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"e53be29f9630e12f7d66e150d016129d67a17c22\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java\": [\"28\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": 153604, "la": 3, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "798b6227cd1d36d8c835970503ae09ab85a0868c", "time_stamp": 1408574860, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "99c289bb30ebf9a29571388cedccef5158acd55a", "time_stamp": 1408574877, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": null, "la": 13, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"StringWriter writer = new StringWriter();\", \"PrintWriter printWriter = new PrintWriter(writer);\", \"e.printStackTrace(printWriter);\", \"printWriter.flush();\", \"Log.e(TAG, \\\"\\\" + writer.toString());\", \"values.put(FeedSQL.COL_TITLE, \\\"XKCD\\\");\", \"values.put(FeedSQL.COL_URL, \\\"http://xkcd.com/rss.xml\\\");\", \"getContentResolver()\", \".insert(RssContentProvider.URI_FEEDS, values);\"]"}, {"project": "Feeder", "commit_id": "a98d6ab88360b356281373bb25ce503d5f96e0b0", "time_stamp": 1408612386, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java\": [\"381\"]}", "rules": null, "clean_lines": "[\"final static int ITEMS_THRESHOLD = 1;\"]"}, {"project": "Feeder", "commit_id": "849f695c9f056d4b29caebcee46c9326b5a7c3aa", "time_stamp": 1408614873, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 14, "ld": 5, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"values.put(FeedSQL.COL_TITLE, \\\"CowboyProgrammer\\\");\", \"values.put(FeedSQL.COL_URL, \\\"http://feeds.feedburner.com/CowboyProgrammer\\\");\", \"public static final String TITLE = \\\"title\\\";\", \"values.put(FeedSQL.COL_TITLE, mTextTitle.getText().toString()\", \".trim());\", \"values.put(FeedSQL.COL_URL, mTextUrl.getText().toString()\", \".trim());\", \"if (i.hasExtra(TITLE)) {\", \"mTextTitle.setText(i.getStringExtra(TITLE));\", \"}\", \"i.putExtra(EditFeedActivity.TITLE, title);\", \"i.setData(Uri.parse(url));\"]"}, {"project": "Feeder", "commit_id": "bb8485d8046c7c76cbc7b90954c0f781935b605f", "time_stamp": 1408614884, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "927c330c4e7fcbbe8b5cc279883be00ac53c8c6b", "time_stamp": 1408619000, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "e53be29f9630e12f7d66e150d016129d67a17c22", "time_stamp": 1408619021, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"09579fc2d07a2ce017393356973c7cbba09ba415\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java\": [\"35\"]}", "rules": null, "clean_lines": "[\"Log.e(TAG, \\\"\\\" + e.getLocalizedMessage());\"]"}, {"project": "Feeder", "commit_id": "1fd24c5a79b3cd4bab6efd9577e33e3066880efa", "time_stamp": 1408909966, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "3acca9ad33dc1bb00f4f40a90ed3c74d980e6913", "time_stamp": 1408910000, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "build.gradle"}], "find_interval": null, "la": 98, "ld": 64, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String WHEREIDIS = COL_ID + \\\" IS ?\\\";\", \"public static String[] LongsToStringArray(long... vals) {\", \"String[] arr = new String[vals.length];\", \"for (int i = 0; i < vals.length; i++) {\", \"arr[i] = Long.toString(vals[i]);\", \"}\", \"return arr;\", \"}\", \"int result = 0;\", \"if (uri.toString().startsWith(FEED_BASE)) {\", \"String id = uri.getLastPathSegment();\", \"result =  DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".update(FeedSQL.TABLE_NAME, values, FeedSQL.WHEREIDIS,\", \"new String[] {id});\", \"if (result > 0) {\", \"getContext().getContentResolver().notifyChange(URI_FEEDS,\", \"null, false);\", \"}\", \"} else {\", \"throw new UnsupportedOperationException(\\\"Not yet implemented\\\");\", \"}\", \"return result;\", \"public class RssLoader extends AsyncTaskLoader<RssFeed> {\", \"public RssFeed loadInBackground() {\", \"return new RssReader(url).getFeed();\", \"implements LoaderManager.LoaderCallbacks<RssFeed> {\", \"mRecyclerView\", \".setOnItemClickListener(new AdapterView.OnItemClickListener() {\", \"@Override\", \"public void onItemClick(final AdapterView<?> parent,\", \"final View view, final int position,\", \"final long id) {\", \"((FeedAdapter.ViewHolder) view.getTag()).onClick(view);\", \"}\", \"});\", \"@Override\", \"public void onResume() {\", \"super.onResume();\", \"}\", \"@Override\", \"public void onDetach() {\", \"super.onDetach();\", \"}\", \"Intent i = new Intent(getActivity(), EditFeedActivity.class);\", \"public Loader<RssFeed> onCreateLoader(final int ID, final Bundle bundle) {\", \"public void onLoadFinished(final Loader<RssFeed> rssFeedLoader,\", \"final RssFeed rssFeed) {\", \"if (rssFeed != null) {\", \"mAdapter.setData(rssFeed.getRssItems());\", \"} else {\", \"mAdapter.setData(null);\", \"}\", \"public void onLoaderReset(final Loader<RssFeed> rssFeedLoader) {\", \"@Override\", \"public int getCount() {\", \"if (items == null) {\", \"return 0;\", \"} else {\", \"return 1 + items.size();\", \"}\", \"}\", \"if (feed != null) {\", \"}\", \"public void onClick(final View view) {\", \"Intent i = new Intent(getActivity(), ReaderActivity.class);\", \"i.putExtra(BaseActivity.SHOULD_FINISH_BACK, true);\", \"ReaderActivity.setRssExtras(i, -1, rssItem);\", \"Log.d(\\\"JONAS\\\", \\\"View size: w: \\\" + view.getWidth() \", \"\\\", h: \\\" + view.getHeight());\", \"Log.d(\\\"JONAS\\\", \\\"View pos: l: \\\" + view.getLeft() \", \"\\\", t: \\\" + view.getTop());\", \"ActivityOptions options = ActivityOptions\", \".makeScaleUpAnimation(view, 0, 0, view.getWidth(),\", \"view.getHeight());\", \"startActivity(i, options.toBundle());\", \"}\"]"}, {"project": "Feeder", "commit_id": "073303c282c05d573757adb4f8e03935f0ce8b99", "time_stamp": 1408911084, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": null, "la": 45, "ld": 17, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"static final DateTimeFormatter shortDateTimeFormat = DateTimeFormat\", \".shortDateTime().withLocale(Locale.getDefault());\", \"if (item.getPubDate() == null) {\", \"holder.dateTextView.setVisibility(View.GONE);\", \"} else {\", \"holder.dateTextView.setVisibility(View.VISIBLE);\", \"holder.dateTextView.setText(\", \"item.getPubDate().toString(shortDateTimeFormat));\", \"}\", \"public final TextView dateTextView;\", \"dateTextView = (TextView) v.findViewById(R.id.story_date);\", \"if (rssItem.getDescription() != null && !rssItem\", \".getDescription().isEmpty()) {\", \"Intent i = new Intent(getActivity(), ReaderActivity.class);\", \"i.putExtra(BaseActivity.SHOULD_FINISH_BACK, true);\", \"ReaderActivity.setRssExtras(i, -1, rssItem);\", \"Log.d(\\\"JONAS\\\", \\\"View size: w: \\\" + view.getWidth() \", \"\\\", h: \\\" + view.getHeight());\", \"Log.d(\\\"JONAS\\\", \\\"View pos: l: \\\" + view.getLeft() \", \"\\\", t: \\\" + view.getTop());\", \"ActivityOptions options = ActivityOptions\", \".makeScaleUpAnimation(view, 0, 0, view.getWidth(),\", \"view.getHeight());\", \"startActivity(i, options.toBundle());\", \"} else {\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(rssItem.getLink())));\", \"}\"]"}, {"project": "Feeder", "commit_id": "2eb316adf3a284e52f874e788289818bc8dcbfa7", "time_stamp": 1408914194, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 155, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class ImageTextLoader extends AsyncTaskLoader<Spanned> {\", \"final Html.ImageGetter imgThing;\", \"final String text;\", \"final Point size;\", \"public ImageTextLoader(Context context, String text, Point windowSize) {\", \"super(context);\", \"this.text = text;\", \"this.size = windowSize;\", \"final Context appContext = context.getApplicationContext();\", \"imgThing = new Html.ImageGetter() {\", \"@Override\", \"public Drawable getDrawable(final String source) {\", \"Drawable d = null;\", \"try {\", \"Log.d(\\\"JONAS\\\", \\\"Trying to get: \\\" + source);\", \"final Bitmap b = Picasso.with(appContext).load(source)\", \".resize(size.x, size.y).centerInside()\", \".get();\", \"Log.d(\\\"JONAS\\\", \\\"Got it!\\\");\", \"d = new BitmapDrawable(appContext.getResources(), b);\", \"Log.d(\\\"JONAS\\\", \\\"Bounds: \\\" + d.getIntrinsicWidth() + \\\", \\\" \", \"\\\"\\\" + d\", \".getIntrinsicHeight());\", \"d.setBounds(0, 0, d.getIntrinsicWidth(), d.getIntrinsicHeight());\", \"} catch (IOException e) {\", \"Log.e(\\\"JONAS\\\", \\\"\\\" + e.getMessage());\", \"}\", \"return d;\", \"}\", \"};\", \"}\", \"@Override\", \"public Spanned loadInBackground() {\", \"return android.text.Html.fromHtml(text,\", \"imgThing, null);\", \"}\", \"@Override\", \"protected void onStartLoading() {\", \"forceLoad();\", \"}\", \"@Override\", \"protected void onStopLoading() {\", \"cancelLoad();\", \"}\", \"@Override\", \"protected void onReset() {\", \"super.onReset();\", \"onStopLoading();\", \"}\", \"}\", \"public class ReaderFragment extends Fragment\", \"implements LoaderManager.LoaderCallbacks<Spanned> {\", \"private static final int TEXT_LOADER = 1;\", \"private Spanned mBodyText = null;\", \"mBodyTextView.setText(\\\"Loading...\\\");\", \"getLoaderManager().restartLoader(TEXT_LOADER, new Bundle(), this);\", \"@Override\", \"public Loader<Spanned> onCreateLoader(final int id, final Bundle args) {\", \"Point size = new Point();\", \"getActivity().getWindowManager().getDefaultDisplay().getSize(size);\", \"return new ImageTextLoader(getActivity(), mRssItem.getDescription(),\", \"new Point((4 * size.x) / 5, (4 * size.y) / 5));\", \"}\", \"@Override\", \"public void onLoadFinished(final Loader<Spanned> loader,\", \"final Spanned data) {\", \"mBodyText = data;\", \"mBodyTextView.setText(data);\", \"}\", \"@Override\", \"public void onLoaderReset(final Loader<Spanned> loader) {\", \"}\"]"}, {"project": "Feeder", "commit_id": "5809ebee83a82d7545f87d930c8ddb7a40fa1ca3", "time_stamp": 1408960512, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"10d43c7d3b46dedee82bd576feb5adbf74df54b5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"87\", \"89\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": 7125256, "la": 45, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "9ec0cee5a88c3f880d60b77f333f398fda0a581b", "time_stamp": 1408966795, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "16a02c950f67ab139023fe4d9bb276f782cf0c9d", "time_stamp": 1408966805, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}], "find_interval": null, "la": 158, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private static class Monospace { }\", \"private static class RelativeSize { }\", \"private static class Bold { }\", \"return android.text.Html.fromHtml(text, imgThing, new Html.TagHandler() {\", \"private boolean ordered = false;\", \"private int orderCount = 1;\", \"@Override\", \"public void handleTag(final boolean opening, final String tag,\", \"final Editable output, final XMLReader xmlReader) {\", \"Log.d(\\\"JONAS\\\", \\\"Got tag: \\\" + tag + \\\" opening: \\\" + opening);\", \"if (tag.equalsIgnoreCase(\\\"ul\\\")) {\", \"handleUl(output, opening);\", \"} else if (tag.equalsIgnoreCase(\\\"ol\\\")) {\", \"handleOl(output, opening);\", \"} else if (tag.equalsIgnoreCase(\\\"li\\\")) {\", \"handleLi(output, opening);\", \"} else if (tag.equalsIgnoreCase(\\\"img\\\")) {\", \"handleImgEnd(output);\", \"} else if (tag.equalsIgnoreCase(\\\"code\\\")) {\", \"handleCode(output, opening);\", \"} else if (tag.equalsIgnoreCase(\\\"pre\\\")) {\", \"handlePre(output, opening);\", \"}\", \"}\", \"private void handleImgEnd(final Editable text) {\", \"int len = text.length();\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"return;\", \"}\", \"text.append(\\\"\\\\n\\\");\", \"}\", \"private void handleOl(final Editable text, final boolean start) {\", \"ordered = start;\", \"int len = text.length();\", \"if (start) {\", \"orderCount = 1;\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"return;\", \"}\", \"text.append(\\\"\\\\n\\\");\", \"}\", \"}\", \"private void handleUl(final Editable text, final boolean start) {\", \"int len = text.length();\", \"if (start) {\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"return;\", \"}\", \"text.append(\\\"\\\\n\\\");\", \"}\", \"}\", \"private void handleLi(final Editable text,\", \"final boolean start) {\", \"int len = text.length();\", \"if (start) {\", \"if (ordered) {\", \"start(text, new Bold());\", \"text.append(\\\"\\\" + orderCount + \\\". \\\");\", \"end(text, Bold.class, new StyleSpan(Typeface.BOLD));\", \"} else {\", \"text.append(\\\"\\\\u2022 \\\");\", \"}\", \"} else {\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"return;\", \"}\", \"text.append(\\\"\\\\n\\\");\", \"orderCount += 1;\", \"}\", \"}\", \"private void handlePre(final Editable text,\", \"final boolean start) {\", \"int len = text.length();\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"if (len >= 2 && text.charAt(len - 2) != '\\\\n') {\", \"text.append(\\\"\\\\n\\\");\", \"}\", \"} else if (len != 0) {\", \"text.append(\\\"\\\\n\\\\n\\\");\", \"}\", \"}\", \"private void handleCode(final Editable text,\", \"final boolean start) {\", \"if (start) {\", \"start(text, new Monospace());\", \"start(text, new RelativeSize());\", \"} else {\", \"end(text, Monospace.class,\", \"new TypefaceSpan(\\\"monospace\\\"));\", \"end(text, RelativeSize.class,\", \"new RelativeSizeSpan(0.8f));\", \"}\", \"}\", \"private void start(Editable text, Object mark) {\", \"int len = text.length();\", \"text.setSpan(mark, len, len, Spannable.SPAN_MARK_MARK);\", \"}\", \"private void end(Editable text, Class kind,\", \"Object repl) {\", \"int len = text.length();\", \"Object obj = getLast(text, kind);\", \"int where = text.getSpanStart(obj);\", \"text.removeSpan(obj);\", \"if (where != len) {\", \"text.setSpan(repl, where, len, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"}\", \"}\", \"private Object getLast(Spanned text, Class kind) {\", \"Object[] objs = text.getSpans(0, text.length(), kind);\", \"if (objs.length == 0) {\", \"return null;\", \"} else {\", \"return objs[objs.length - 1];\", \"}\", \"}\", \"});\"]"}, {"project": "Feeder", "commit_id": "5b44e77fd2952dcb51334864f0283c4e12dba8ae", "time_stamp": 1408994268, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}], "find_interval": null, "la": 32, "ld": 13, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class Util {\", \"public static final String WHEREIDIS = \\\"_ID IS ?\\\";\", \"public static String[] LongsToStringArray(long... vals) {\", \"String[] arr = new String[vals.length];\", \"for (int i = 0; i < vals.length; i++) {\", \"arr[i] = Long.toString(vals[i]);\", \"}\", \"return arr;\", \"}\", \"public static String[] ToStringArray(String... strings) {\", \"return strings;\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "c7a49d299b680f1c47ac0eaec5929d5e510b0cf4", "time_stamp": 1408999923, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}, {"type": "modify", "modified_path": "gradle/wrapper/gradle-wrapper.properties"}], "find_interval": null, "la": 419, "ld": 29, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"sqLiteDatabase.execSQL(FeedItemSQL.CREATE_TABLE);\", \"public static final String COL_PUBDATE = \\\"pubdate\\\";\", \"private static final String COL_UNREAD = \\\"unread\\\";\", \"COL_LINK, COL_AUTHOR,\", \"COL_PUBDATE, COL_UNREAD, COL_FEED, COL_TAG};\", \"COL_LINK + \\\" TEXT,\\\" \", \"COL_AUTHOR + \\\" TEXT,\\\" \", \"COL_PUBDATE + \\\" TEXT,\\\" \", \"COL_UNREAD + \\\" INTEGER NOT NULL DEFAULT 1,\\\" \", \"FeedSQL.COL_ID + \\\") ON DELETE CASCADE,\\\" \", \"\\\" UNIQUE(\\\" + COL_LINK + \\\",\\\" + COL_FEED + \\\") ON CONFLICT \\\" \", \"\\\"REPLACE\\\"\", \"public String description = null;\", \"public String plaintitle = null;\", \"public String plainsnippet = null;\", \"public String imageurl = null;\", \"public String author = null;\", \"private DateTime pubDate = null;\", \"public String tag = null;\", \"public boolean isUnread() {\", \"return unread == 1;\", \"}\", \"public void setUnread(boolean unread) {\", \"this.unread = unread ? 1 : 0;\", \"}\", \"private int unread = 1;\", \"public long feed_id = -1;\", \"this.description = cursor.getString(2);\", \"this.plaintitle = cursor.getString(3);\", \"this.plainsnippet = cursor.getString(4);\", \"this.imageurl = cursor.getString(5);\", \"this.link = cursor.getString(6);\", \"this.author = cursor.getString(7);\", \"setPubDate(cursor.getString(8));\", \"this.unread = cursor.getInt(9);\", \"this.feed_id = cursor.getLong(10);\", \"this.tag = cursor.getString(11);\", \"}\", \"public DateTime getPubDate() {\", \"return pubDate;\", \"}\", \"public void setPubDate(DateTime datetime) {\", \"pubDate = datetime;\", \"}\", \"public String getPubDateString() {\", \"if (pubDate == null)\", \"return null;\", \"return pubDate.toString();\", \"}\", \"public void setPubDate(String datetime) {\", \"if (datetime == null)\", \"pubDate = null;\", \"else\", \"pubDate = DateTime.parse(datetime);\", \"values.put(COL_DESCRIPTION, description);\", \"values.put(COL_PLAINTITLE, plaintitle);\", \"values.put(COL_PLAINSNIPPET, plainsnippet);\", \"values.put(COL_FEED, feed_id);\", \"values.put(COL_UNREAD, unread);\", \"Util.PutNullable(values, COL_IMAGEURL, imageurl);\", \"Util.PutNullable(values, COL_LINK, link);\", \"Util.PutNullable(values, COL_AUTHOR, author);\", \"Util.PutNullable(values, COL_PUBDATE, getPubDateString());\", \"Util.PutNullable(values, COL_TAG, tag);\", \"public static final String FEED_ITEMS = SCHEME + AUTHORITY + \\\"/items\\\";\", \"public static final Uri URI_FEED_ITEMS = Uri.parse(FEED_ITEMS);\", \"public static final String FEED_ITEM_BASE = FEED_ITEMS + \\\"/\\\";\", \"public static final Uri URI_FEED_ITEM_BASE = Uri.parse(FEED_ITEM_BASE);\", \"return delete(URI_FEEDS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"} else if (uri.toString().startsWith(FEED_ITEM_BASE)) {\", \"return delete(URI_FEED_ITEMS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"} else if (URI_FEED_ITEMS.equals(uri)) {\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase().delete(FeedItemSQL.TABLE_NAME,\", \"selection, selectionArgs);\", \"}\", \"else {\", \"} else if (URI_FEED_ITEMS.equals(uri)) {\", \"long id = DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".insert(FeedItemSQL.TABLE_NAME, null, values);\", \"if (id > -1) {\", \"result = Uri.withAppendedPath(URI_FEED_ITEM_BASE,\", \"Long.toString(id));\", \"getContext().getContentResolver().notifyChange(URI_FEED_ITEMS,\", \"null, false);\", \"}\", \"}\", \"else {\", \"Util.WHEREIDIS,\", \"Util.LongsToStringArray(id), null, null, null,\", \"} else if (URI_FEED_ITEMS.equals(uri)) {\", \"result = DatabaseHandler.getInstance(getContext())\", \".getReadableDatabase()\", \".query(FeedItemSQL.TABLE_NAME, projection, selection,\", \"selectionArgs, null, null, sortOrder, null);\", \"} else if (uri.toString().startsWith(FEED_ITEM_BASE)) {\", \"final long id = Long.parseLong(uri.getLastPathSegment());\", \"result = DatabaseHandler.getInstance(getContext())\", \".getReadableDatabase()\", \".query(FeedItemSQL.TABLE_NAME, projection,\", \"Util.WHEREIDIS, Util.LongsToStringArray(id),\", \"null, null, null, null);\", \"}\", \"else {\", \".update(FeedSQL.TABLE_NAME, values, Util.WHEREIDIS,\", \"Util.ToStringArray(id));\", \"} else if (uri.toString().startsWith(FEED_ITEM_BASE)) {\", \"String id = uri.getLastPathSegment();\", \"result =  DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".update(FeedItemSQL.TABLE_NAME, values, Util.WHEREIDIS,\", \"Util.ToStringArray(id));\", \"if (result > 0) {\", \"getContext().getContentResolver().notifyChange(URI_FEED_ITEMS,\", \"null, false);\", \"}\", \"}\", \"else {\", \"public static String[] LongsToStringArray(Long... vals) {\", \"if (vals[i] == null) {\", \"arr[i] = \\\"null\\\";\", \"} else {\", \"arr[i] = Long.toString(vals[i]);\", \"}\", \"String[] arr = new String[strings.length];\", \"for (int i = 0; i < strings.length; i++) {\", \"if (strings[i] == null) {\", \"arr[i] = \\\"null\\\";\", \"} else {\", \"arr[i] = strings[i];\", \"}\", \"}\", \"return arr;\", \"}\", \"public static void PutNullable(ContentValues values, String key,\", \"String value) {\", \"if (value == null) {\", \"values.putNull(key);\", \"} else {\", \"values.put(key, value);\", \"}\", \"}\", \"public static void PutNullable(ContentValues values, String key,\", \"Long value) {\", \"if (value == null) {\", \"values.putNull(key);\", \"} else {\", \"values.put(key, value);\", \"}\", \"}\", \"public static void SaveOrUpdate(final SQLiteDatabase db,\", \"final FeedItemSQL itemSQL) {\", \"if (itemSQL.id > 0) {\", \"db.update(FeedItemSQL.TABLE_NAME, itemSQL.getContent(),\", \"WHEREIDIS, LongsToStringArray(itemSQL.id));\", \"} else {\", \"db.insert(FeedItemSQL.TABLE_NAME, null, itemSQL.getContent());\", \"}\", \"public class RssSyncService extends IntentService {\", \"private static final String TAG = \\\"RssSyncService\\\";\", \"public RssSyncService() {\", \"super(\\\"RssSyncService\\\");\", \"}\", \"public static void syncFeeds(Context context) {\", \"Intent intent = new Intent(context, RssSyncService.class);\", \"context.startService(intent);\", \"}\", \"@Override\", \"protected void onHandleIntent(Intent intent) {\", \"syncAll();\", \"}\", \"protected void syncAll() {\", \"Cursor cursor = getContentResolver()\", \".query(RssContentProvider.URI_FEEDS, FeedSQL.FIELDS, null, null,\", \"null);\", \"try {\", \"while (cursor.moveToNext()) {\", \"syncFeed(new FeedSQL(cursor));\", \"}\", \"} finally {\", \"if (cursor != null) {\", \"cursor.close();\", \"}\", \"}\", \"}\", \"protected void syncFeed(final FeedSQL feedSQL) {\", \"final DateTime latestPubDate = getLatestPubDate(feedSQL);\", \"Log.d(\\\"JONAS\\\", \\\"Syncing feed \\\" + feedSQL.title + \\\" with \\\" \", \"latestPubDate);\", \"SQLiteDatabase db =\", \"DatabaseHandler.getInstance(this).getWritableDatabase();\", \"db.beginTransactionNonExclusive();\", \"try {\", \"RssFeed feed = new RssReader(feedSQL.url).getFeed();\", \"for (RssItem item : feed.getRssItems()) {\", \"Log.d(\\\"JONAS\\\", \\\"Looping item \\\" + item.getTitle());\", \"if (latestPubDate != null && item.getPubDate() != null &&\", \"item.getPubDate().isBefore(latestPubDate)) {\", \"Log.d(\\\"JONAS\\\", \\\"Was too old, \\\" \", \"\\\"moving on: \\\" \", \"item.getPubDate().toString());\", \"continue;\", \"}\", \"FeedItemSQL itemSQL = getUniqueSQLItem(item, feedSQL);\", \"itemSQL.title = item.getTitle();\", \"if (itemSQL.title == null) {\", \"itemSQL.title = \\\"\\\";\", \"}\", \"itemSQL.description = item.getDescription();\", \"if (itemSQL.description == null) {\", \"itemSQL.description = \\\"\\\";\", \"}\", \"itemSQL.plaintitle = item.getPlainTitle();\", \"if (itemSQL.plaintitle == null) {\", \"itemSQL.plaintitle = \\\"\\\";\", \"}\", \"itemSQL.plainsnippet = item.getSnippet();\", \"if (itemSQL.plainsnippet == null) {\", \"itemSQL.plainsnippet = \\\"\\\";\", \"}\", \"itemSQL.imageurl = item.getImageUrl();\", \"itemSQL.link = item.getLink();\", \"itemSQL.setPubDate(item.getPubDate());\", \"itemSQL.feed_id = feedSQL.id;\", \"itemSQL.tag = feedSQL.tag;\", \"Log.d(\\\"JONAS\\\", \\\"Saving the item: \\\" + itemSQL.title);\", \"Util.SaveOrUpdate(db, itemSQL);\", \"}\", \"db.setTransactionSuccessful();\", \"} catch (Exception e) {\", \"Log.e(TAG, \\\"\\\" + e.getMessage());\", \"} finally {\", \"db.endTransaction();\", \"}\", \"}\", \"protected DateTime getLatestPubDate(final FeedSQL feedSQL) {\", \"DateTime latest = null;\", \"Cursor c = getContentResolver().query(RssContentProvider.URI_FEED_ITEMS,\", \"Util.ToStringArray(FeedItemSQL.COL_PUBDATE),\", \"FeedItemSQL.COL_FEED + \\\" \\\" \", \"\\\"IS ?\\\", Util.LongsToStringArray(feedSQL.id), null);\", \"try {\", \"while (c.moveToNext()) {\", \"if (!c.isNull(0)) {\", \"DateTime date = DateTime.parse(c.getString(0));\", \"if (latest == null) {\", \"latest = date;\", \"} else if (date.isAfter(latest)) {\", \"latest = date;\", \"}\", \"}\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return latest;\", \"}\", \"private FeedItemSQL getUniqueSQLItem(final RssItem item,\", \"final FeedSQL feedSQL) {\", \"FeedItemSQL result = null;\", \"Cursor c = getContentResolver()\", \".query(RssContentProvider.URI_FEED_ITEMS, FeedItemSQL.FIELDS,\", \"FeedItemSQL.COL_LINK + \\\" IS ? AND \\\" \", \"FeedItemSQL.COL_FEED + \\\" IS ?\\\",\", \"Util.ToStringArray(item.getLink(),\", \"Long.toString(feedSQL.id)), null);\", \"try {\", \"if (c.moveToNext()) {\", \"Log.d(\\\"JONAS\\\", \\\"Found existing item\\\");\", \"result = new FeedItemSQL(c);\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"if (result == null) {\", \"Log.d(\\\"JONAS\\\", \\\"Creating new item\\\");\", \"result = new FeedItemSQL();\", \"}\", \"return result;\", \"}\", \"}\", \"getMenuInflater().inflate(R.menu.feed, menu);\", \"return true;\", \"} else if (id == R.id.action_sync) {\", \"RssSyncService.syncFeeds(this);\", \"return true;\"]"}, {"project": "Feeder", "commit_id": "871a39acb8a504236c94660db9d784b0e33753fd", "time_stamp": 1409009836, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"cf711fe0d9a390ce5aec8cded16610b3f4b8159c\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"361\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/NavigationDrawerFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": 3798734, "la": 178, "ld": 183, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "07c464248aebc6c06b6ea455994d4ab46a21c5cb", "time_stamp": 1409010354, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 3, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"getContentResolver()\", \".notifyChange(RssContentProvider.URI_FEED_ITEMS, null,\", \"false);\"]"}, {"project": "Feeder", "commit_id": "ea95b6cdc7e2ccd7702ed3542ddaedcc25652c44", "time_stamp": 1409096044, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 51, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String COL_UNREAD = \\\"unread\\\";\", \"} else if (uri.equals(URI_FEED_ITEMS)) {\", \"result = DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase().update(FeedItemSQL.TABLE_NAME,\", \"values, selection, selectionArgs);\", \"if (result > 0) {\", \"getContext().getContentResolver().notifyChange(URI_FEED_ITEMS,\", \"null, false);\", \"}\", \"} else if (uri.equals(URI_FEEDS)) {\", \"result = DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".update(FeedSQL.TABLE_NAME, values, selection,\", \"selectionArgs);\", \"if (result > 0) {\", \"getContext().getContentResolver()\", \".notifyChange(URI_FEEDS, null, false);\", \"}\", \"} else {\", \"public static void MarkAsRead(final Context context, final long itemId) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver().update(URI_FEED_ITEMS, values,\", \"Util.WHEREIDIS, Util.LongsToStringArray(itemId));\", \"}\", \"private final int unreadTextColor;\", \"private final int readTextColor;\", \"unreadTextColor = context.getResources()\", \".getColor(R.color.primary_text_default_material_dark);\", \"readTextColor = context.getResources()\", \".getColor(R.color.secondary_text_material_dark);\", \"holder.titleTextView.setTextColor(holder.rssItem.isUnread() ?\", \"unreadTextColor\", \"readTextColor);\", \"ReaderActivity.setRssExtras(i, rssItem.id, rssItem);\", \"if (_id > 0) {\", \"RssContentProvider.MarkAsRead(getActivity(), _id);\", \"}\"]"}, {"project": "Feeder", "commit_id": "445e0f5f5bb142f67d958fe34b4f16d84971e597", "time_stamp": 1409097030, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}], "find_interval": null, "la": 55, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mBodyTextView.setOnTouchListener(new View.OnTouchListener() {\", \"@Override\", \"public boolean onTouch(final View v, final MotionEvent event) {\", \"TextView widget = (TextView) v;\", \"Object text = widget.getText();\", \"if (text instanceof Spanned) {\", \"Spanned buffer = (Spanned) text;\", \"int action = event.getAction();\", \"if (action == MotionEvent.ACTION_UP ||\", \"action == MotionEvent.ACTION_DOWN) {\", \"int x = (int) event.getX();\", \"int y = (int) event.getY();\", \"x -= widget.getTotalPaddingLeft();\", \"y -= widget.getTotalPaddingTop();\", \"x += widget.getScrollX();\", \"y += widget.getScrollY();\", \"Layout layout = widget.getLayout();\", \"int line = layout.getLineForVertical(y);\", \"int off = layout.getOffsetForHorizontal(line, x);\", \"ClickableSpan[] link =\", \"buffer.getSpans(off, off, ClickableSpan.class);\", \"if (x > layout.getLineRight(line)) {\", \"} else if (link.length != 0) {\", \"link[0].onClick(widget);\", \"return true;\", \"}\", \"}\", \"}\", \"return false;\", \"}\", \"});\"]"}, {"project": "Feeder", "commit_id": "e9ef3056236149c1fe77984e65235d91a602d20a", "time_stamp": 1409136300, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "95458db5fc8dbfcde0894c26a4c3fbb3e831446a", "time_stamp": 1409141629, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/NavigationDrawerFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/layout/view_feed.xml"}], "find_interval": null, "la": 275, "ld": 145, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final Uri URI_FEED_ITEMS = Uri.withAppendedPath(\", \"Uri.parse(RssContentProvider.SCHEME + RssContentProvider.AUTHORITY),\", \"TABLE_NAME);\", \"public static final int URICODE = 201;\", \"public static final int ITEMCODE = 202;\", \"public static void addMatcherUris(UriMatcher sURIMatcher) {\", \"sURIMatcher\", \".addURI(RssContentProvider.AUTHORITY, URI_FEED_ITEMS.getPath(),\", \"URICODE);\", \"sURIMatcher.addURI(RssContentProvider.AUTHORITY,\", \"URI_FEED_ITEMS.getPath() + \\\"/#\\\", ITEMCODE);\", \"}\", \"public static final String VIEWCOUNT_NAME = \\\"WithUnreadCount\\\";\", \"public static final Uri URI_FEEDS = Uri.withAppendedPath(\", \"Uri.parse(RssContentProvider.SCHEME + RssContentProvider.AUTHORITY),\", \"TABLE_NAME);\", \"public static final Uri URI_FEEDSWITHCOUNTS =\", \"Uri.withAppendedPath(URI_FEEDS, VIEWCOUNT_NAME);\", \"public static final int URICODE = 101;\", \"public static final int ITEMCODE = 102;\", \"public static final int VIEWCOUNTCODE = 103;\", \"public static final String COL_UNREADCOUNT = \\\"unreadcount\\\";\", \"public static final String[] FIELDS_VIEWCOUNT = {COL_ID, COL_TITLE,\", \"COL_URL, COL_TAG, COL_UNREADCOUNT};\", \"public static final String CREATE_COUNT_VIEW =\", \"\\\"CREATE TEMP VIEW IF NOT EXISTS \\\" + VIEWCOUNT_NAM\", \"+ \\\" AS SELECT \\\" + Util.arrayToCommaString(FIELDS)\", \"+ \\\",\\\" + COL_UNREADCOUNT + \\\" FROM \\\" + TABLE_NAM\", \"+ \\\" LEFT JOIN \\\" + \\\" (SELECT COUNT(1) AS \\\" + COL_UNREADCOU\", \"+ \\\",\\\" + FeedItemSQL.COL_FEED + \\\" FROM \\\" + FeedItemSQL.TABLE_NAM\", \"+ \\\" WHERE \\\" + FeedItemSQL.COL_UNREAD + \\\" IS 1 \\\" + \\\" GROUP BY \\\"\", \"+ FeedItemSQL.COL_FEED + \\\") ON \\\" + TABLE_NAME + \\\".\\\" + COL_ID\", \"+ \\\" = \\\" + FeedItemSQL.COL_FEED;\", \"public static void addMatcherUris(UriMatcher sURIMatcher) {\", \"sURIMatcher.addURI(RssContentProvider.AUTHORITY, URI_FEEDS.getPath(),\", \"URICODE);\", \"sURIMatcher.addURI(RssContentProvider.AUTHORITY,\", \"URI_FEEDS.getPath() + \\\"/#\\\", ITEMCODE);\", \"sURIMatcher.addURI(RssContentProvider.AUTHORITY,\", \"URI_FEEDSWITHCOUNTS.getPath(), VIEWCOUNTCODE);\", \"}\", \"private static final UriMatcher sURIMatcher = new UriMatcher(\", \"UriMatcher.NO_MATCH);\", \"static {\", \"FeedSQL.addMatcherUris(sURIMatcher);\", \"FeedItemSQL.addMatcherUris(sURIMatcher);\", \"}\", \"Uri[] notifyUris = null;\", \"switch (sURIMatcher.match(uri)) {\", \"case FeedSQL.ITEMCOD\", \"return delete(FeedSQL.URI_FEEDS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"case FeedSQL.URICOD\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase().delete(FeedSQL.TABLE_NAME,\", \"selection, selectionArgs);\", \"notifyUris = new Uri[] {FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS};\", \"break;\", \"case FeedItemSQL.ITEMCOD\", \"return delete(FeedItemSQL.URI_FEED_ITEMS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"case FeedItemSQL.URICOD\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase().delete(FeedItemSQL.TABLE_NAME,\", \"selection, selectionArgs);\", \"notifyUris = new Uri[] {FeedItemSQL.URI_FEED_ITEMS};\", \"break;\", \"default\", \"throw new UnsupportedOperationException(\\\"Not yet implemented\\\");\", \"if (notifyUris != null) {\", \"notifyChange(notifyUris);\", \"private void notifyChange(Uri... uris) {\", \"for (Uri uri: uris) {\", \"getContext().getContentResolver().notifyChange(uri, null, false);\", \"}\", \"}\", \"Uri result;\", \"Uri[] notifyUris;\", \"final String table;\", \"switch (sURIMatcher.match(uri)) {\", \"case FeedSQL.URICOD\", \"table = FeedSQL.TABLE_NAME;\", \"result = FeedSQL.URI_FEEDS;\", \"notifyUris = new Uri[] {FeedSQL.URI_FEEDS};\", \"break;\", \"case FeedItemSQL.URICOD\", \"table = FeedItemSQL.TABLE_NAME;\", \"result = FeedItemSQL.URI_FEED_ITEMS;\", \"notifyUris = new Uri[] {FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS};\", \"break;\", \"default\", \"throw new UnsupportedOperationException(\\\"Not yet implemented\\\");\", \"long id = DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".insert(table, null, values);\", \"if (id > -1) {\", \"result = Uri.withAppendedPath(result, Long.toString(id));\", \"if (result != null && notifyUris != null) {\", \"notifyChange(notifyUris);\", \"}\", \"final String table;\", \"switch (sURIMatcher.match(uri)) {\", \"case FeedSQL.ITEMCOD\", \"table = FeedSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"break;\", \"case FeedSQL.URICOD\", \"table = FeedSQL.TABLE_NAME;\", \"break;\", \"case FeedSQL.VIEWCOUNTCOD\", \"table = FeedSQL.VIEWCOUNT_NAME;\", \"DatabaseHandler.getInstance(getContext()).getWritableDatabase()\", \".execSQL(FeedSQL.CREATE_COUNT_VIEW);\", \"break;\", \"case FeedItemSQL.ITEMCOD\", \"table = FeedItemSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"break;\", \"case FeedItemSQL.URICOD\", \"table = FeedItemSQL.TABLE_NAME;\", \"break;\", \"default\", \"throw new UnsupportedOperationException(\\\"Not yet implemented\\\");\", \"result = DatabaseHandler.getInstance(getContext())\", \".getReadableDatabase()\", \".query(table, projection, selection,\", \"selectionArgs, null, null, sortOrder, null);\", \"final String table;\", \"Uri[] notifyUris = null;\", \"switch (sURIMatcher.match(uri)) {\", \"case FeedSQL.ITEMCOD\", \"table = FeedSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"notifyUris = new Uri[] {FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS};\", \"break;\", \"case FeedSQL.URICOD\", \"table = FeedSQL.TABLE_NAME;\", \"notifyUris = new Uri[] {FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS};\", \"break;\", \"case FeedItemSQL.ITEMCOD\", \"table = FeedItemSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"notifyUris = new Uri[] {FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS};\", \"break;\", \"case FeedItemSQL.URICOD\", \"table = FeedItemSQL.TABLE_NAME;\", \"notifyUris = new Uri[] {FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS};\", \"break;\", \"default\", \"throw new UnsupportedOperationException(\\\"Not yet implemented\\\");\", \"}\", \"result = DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase().update(table,\", \"values, selection, selectionArgs);\", \"if (result > 0 && notifyUris != null) {\", \"notifyChange(notifyUris);\", \"context.getContentResolver().update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"public static String arrayToCommaString(final long... array) {\", \"StringBuilder result = new StringBuilder();\", \"for (final long val : array) {\", \"final String txt = Long.toString(val);\", \"if (result.length() > 0) result.append(\\\",\\\");\", \"result.append(txt);\", \"}\", \"return result.toString();\", \"}\", \"public static String arrayToCommaString(final String... array) {\", \"return arrayToCommaString(\\\"\\\", array);\", \"}\", \"public static String arrayToCommaString(final String prefix,\", \"final String[] array) {\", \"return arrayToCommaString(prefix, array, \\\"\\\");\", \"}\", \"protected static String arrayToCommaString(final String pfx,\", \"final String[] array, final String sfx) {\", \"StringBuilder result = new StringBuilder();\", \"for (final String txt : array) {\", \"if (result.length() > 0) result.append(\\\",\\\");\", \"result.append(String.format(pfx, txt, sfx));\", \"result.append(txt);\", \"result.append(String.format(sfx, txt, pfx));\", \"}\", \"return result.toString();\", \"}\", \".query(FeedSQL.URI_FEEDS, FeedSQL.FIELDS, null, null,\", \".notifyChange(FeedItemSQL.URI_FEED_ITEMS, null,\", \"Cursor c = getContentResolver().query(FeedItemSQL.URI_FEED_ITEMS,\", \".query(FeedItemSQL.URI_FEED_ITEMS, FeedItemSQL.FIELDS,\", \"R.layout.view_feed, null,\", \"new String[]{FeedSQL.COL_TITLE, FeedSQL.COL_UNREADCOUNT},\", \"new int[]{R.id.feed_name,\", \"R.id.feed_unreadcount},\", \"return new CursorLoader(this, FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.FIELDS_VIEWCOUNT, null, null, FeedSQL.COL_TITLE);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS,\", \"FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS, FeedItemSQL.FIELDS,\", \"return new CursorLoader(getActivity(), FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.FIELDS_VIEWCOUNT, null, null, FeedSQL.COL_TITLE);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS, values);\", \".insert(FeedSQL.URI_FEEDS, values);\"]"}, {"project": "Feeder", "commit_id": "d91fe3ffa3593cc2965ddf9717f7da4717052359", "time_stamp": 1409143350, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 55, "ld": 9, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"@Override\", \"public void onOpen(SQLiteDatabase db) {\", \"super.onOpen(db);\", \"if (!db.isReadOnly()) {\", \"db.setForeignKeyConstraintsEnabled(true);\", \"}\", \"}\", \"public static void MarkItemAsRead(final Context context, final long itemId) {\", \"public static void MarkFeedAsRead(final Context context,\", \"final long feedId) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver().update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_FEED + \\\" IS ?\\\", Util.LongsToStringArray\", \"(feedId));\", \"}\", \"public static String SortAlphabeticNoCase(final String col) {\", \"return col + \\\" COLLATE NOCASE\\\";\", \"}\", \"getContentResolver()\", \".notifyChange(FeedSQL.URI_FEEDSWITHCOUNTS, null,\", \"false);\", \"FeedItemSQL.COL_TITLE + \\\" IS ? AND \\\" \", \"Util.ToStringArray(item.getTitle(),\", \"FeedSQL.FIELDS_VIEWCOUNT, null, null,\", \"Util.SortAlphabeticNoCase(FeedSQL.COL_TITLE));\", \"menu.findItem(R.id.action_delete_feed).setVisible(false);\", \"menu.findItem(R.id.action_mark_as_read).setVisible(false);\", \"if (id == R.id.action_edit_feed && this.id > 0) {\", \"} else if (id == R.id.action_delete_feed && this.id > 0) {\", \"getActivity().getContentResolver()\", \".delete(FeedSQL.URI_FEEDS, Util.WHEREIDIS,\", \"Util.LongsToStringArray(this.id));\", \"return true;\", \"} else if (id == R.id.action_mark_as_read && this.id > 0) {\", \"RssContentProvider.MarkFeedAsRead(getActivity(), this.id);\", \"return true;\", \"RssContentProvider.MarkItemAsRead(getActivity(), _id);\"]"}, {"project": "Feeder", "commit_id": "887e292638181cff780fc35635fe07c93cc4ae63", "time_stamp": 1409145672, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}], "find_interval": null, "la": 24, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private boolean onlyUnread = true;\", \"private static final String AND_UNREAD = \\\" AND \\\" + FeedItemSQL.COL_UNREAD\", \"+ \\\" IS 1 \\\";\", \"menu.findItem(R.id.action_only_unread).setVisible(false);\", \"MenuItem menuItem = menu.findItem(R.id.action_only_unread);\", \"menuItem.setChecked(onlyUnread);\", \"menuItem.setTitle(onlyUnread ? \\\"Show all\\\" : \\\"Only unread\\\");\", \"} else if (id == R.id.action_only_unread && this.id > 0) {\", \"onlyUnread = !menuItem.isChecked();\", \"menuItem.setChecked(onlyUnread);\", \"menuItem.setTitle(onlyUnread ? \\\"Show all\\\" : \\\"Only unread\\\");\", \"getLoaderManager().restartLoader(FEED_LOADER, new Bundle(), this);\", \"return true;\", \"return new CursorLoader(getActivity(), FeedItemSQL.URI_FEED_ITEMS,\", \"FeedItemSQL.FIELDS, FeedItemSQL.COL_FEED \", \"\\\" IS ? \\\" \", \"(onlyUnread ? AND_UNREAD : \\\"\\\"),\"]"}, {"project": "Feeder", "commit_id": "3cc1328b51ba959b237c8238c68c34203a109c13", "time_stamp": 1409145685, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 4, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (item.getPubDate() == null) {\", \"item.setPubDate(DateTime.now());\", \"}\"]"}, {"project": "Feeder", "commit_id": "63db915d3d3bd34f20e125ac0ad83a1d0501e492", "time_stamp": 1409145976, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 3, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"item.getPubDate().withZone(DateTimeZone.getDefault())\", \".toString(shortDateTimeFormat));\"]"}, {"project": "Feeder", "commit_id": "fa4d27eee1737e80e6c7c2d9b4e15d3d5e28063b", "time_stamp": 1409155196, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 1, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"shareIntent.setType(\\\"text/plain\\\");\"]"}, {"project": "Feeder", "commit_id": "1fd1d772027a74204d931a6c1aa0baf63d2d141f", "time_stamp": 1409155211, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "delete", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/NavigationDrawerFragment.java"}], "find_interval": null, "la": 0, "ld": 356, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "a8496f96ea1ae59a72a0bea0d0f44a39680dfd6e", "time_stamp": 1409155222, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 5, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (itemSQL.imageurl != null && !itemSQL.imageurl.isEmpty()) {\", \"Log.d(\\\"JONAS\\\", \\\"Pre-fetching \\\" + itemSQL.imageurl);\", \"Picasso.with(this).load(itemSQL.imageurl).fetch();\", \"}\"]"}, {"project": "Feeder", "commit_id": "e206c6622a17e66d74276c9a1c850b5f09ee14f8", "time_stamp": 1409187692, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/view_feed_tag.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 448, "ld": 64, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"db.execSQL(FeedItemSQL.CREATE_TAG_TRIGGER);\", \"db.execSQL(FeedSQL.CREATE_COUNT_VIEW);\", \"db.execSQL(FeedSQL.CREATE_TAGS_VIEW);\", \"COL_TAG + \\\" TEXT NOT NULL,\\\" \", \"public static final String CREATE_TAG_TRIGGER =\", \"\\\"CREATE TEMP TRIGGER IF NOT EXISTS trigger_tag_updater \\\"\", \"+ \\\" AFTER UPDATE OF \\\" + FeedSQL.COL_TAG + \\\" ON \\\" + FeedSQL.TABLE_NAM\", \"+ \\\" WHEN new.\\\" + FeedSQL.COL_TAG + \\\" IS NOT old.\\\" + FeedSQL.COL_TAG\", \"+ \\\" BEGIN \\\"\", \"+ \\\" UPDATE \\\" + FeedItemSQL.TABLE_NAME + \\\" SET \\\" + COL_TAG + \\\" = \\\"\", \"+ \\\" new.\\\" + FeedSQL.COL_TAG + \\\" WHERE \\\" + COL_FEED + \\\" IS old.\\\" \", \"FeedSQL.COL_ID\", \"+ \\\"; END\\\";\", \"public static final String VIEWTAGS_NAME = \\\"TagsWithUnreadCount\\\";\", \"public static final Uri URI_TAGSWITHCOUNTS =\", \"Uri.withAppendedPath(URI_FEEDS, VIEWTAGS_NAME);\", \"public static final int VIEWTAGSCODE = 104;\", \"public static final String[] FIELDS_TAGSWITHCOUNT = {COL_ID, COL_TAG,\", \"COL_UNREADCOUNT};\", \"+ COL_TAG + \\\" TEXT NOT NULL DEFAULT ''\\\"\", \"+ \\\" AS SELECT \\\" + Util.arrayToCommaString(FIELDS_VIEWCOUNT)\", \"+ \\\" FROM \\\" + TABLE_NAM\", \"public static final String CREATE_TAGS_VIEW =\", \"\\\"CREATE TEMP VIEW IF NOT EXISTS \\\" + VIEWTAGS_NAM\", \"+ \\\" AS SELECT \\\" + Util.arrayToCommaString(COL_ID, COL_TAG)\", \"+ \\\",\\\" + COL_UNREADCOU\", \"+ \\\" FROM \\\" + TABLE_NAM\", \"+ \\\" LEFT JOIN \\\" + \\\" (SELECT COUNT(1) AS \\\" + COL_UNREADCOU\", \"+ \\\",\\\" + FeedItemSQL.COL_TAG + \\\" AS itemtag \\\"\", \"+ \\\" FROM \\\" + FeedItemSQL.TABLE_NAM\", \"+ \\\" WHERE \\\" + FeedItemSQL.COL_UNREAD + \\\" IS 1 \\\"\", \"+ \\\" GROUP BY \\\" + \\\"itemtag\\\"\", \"+ \\\") ON \\\" + TABLE_NAME + \\\".\\\" + COL_TAG\", \"+ \\\" IS \\\" + \\\"itemtag\\\"\", \"+ \\\" GROUP BY \\\" + COL_TAG;\", \"sURIMatcher.addURI(RssContentProvider.AUTHORITY,\", \"URI_TAGSWITHCOUNTS.getPath(), VIEWTAGSCODE);\", \"notifyUris = new Uri[] {FeedSQL.URI_FEEDS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"break;\", \"case FeedSQL.VIEWTAGSCOD\", \"table = FeedSQL.VIEWTAGS_NAME;\", \"FeedItemSQL.URI_FEED_ITEMS, FeedSQL.URI_TAGSWITHCOUNTS};\", \"FeedItemSQL.URI_FEED_ITEMS, FeedSQL.URI_TAGSWITHCOUNTS};\", \"FeedSQL.URI_FEEDSWITHCOUNTS, FeedSQL.URI_TAGSWITHCOUNTS};\", \"FeedSQL.URI_FEEDSWITHCOUNTS, FeedSQL.URI_TAGSWITHCOUNTS};\", \"public static String SelectionCouldBeNull(final String col,\", \"final Object val) {\", \"return val == null ? col + \\\" IS NULL\\\" : col + \\\" IS ?\\\";\", \"}\", \"public static String[] SelectionValCouldBeNull(final String val) {\", \"if (val == null) {\", \"return null;\", \"} else {\", \"return ToStringArray(val);\", \"}\", \"}\", \"throw new NullPointerException(\\\"Can't have null arguments \\\" \", \"\\\"here, \\\" \", \"\\\"since they can't be combined \\\" \", \"\\\"with '?' in SQL.\\\");\", \"throw new NullPointerException(\\\"Can't have null arguments \\\" \", \"\\\"here, \\\" \", \"\\\"since they can't be combined \\\" \", \"\\\"with '?' in SQL.\\\");\", \"public static void SaveOrUpdate(final ContentResolver resolver,\", \"final FeedItemSQL itemSQL) {\", \"if (itemSQL.id > 0) {\", \"resolver.update(FeedItemSQL.URI_FEED_ITEMS, itemSQL.getContent(),\", \"WHEREIDIS, LongsToStringArray(itemSQL.id));\", \"} else {\", \"resolver.insert(FeedItemSQL.URI_FEED_ITEMS, itemSQL.getContent());\", \"}\", \"}\", \"ContentResolver resolver = getContentResolver();\", \"Util.SaveOrUpdate(resolver, itemSQL);\", \"public class TaggedFeedsAdapter extends SimpleCursorTreeAdapter {\", \"private final Context mContext;\", \"public TaggedFeedsAdapter(final Context context, final Cursor cursor) {\", \"super(context, cursor, -1, new String[]{}, new int[]{},\", \"-1, new String[]{}, new int[]{});\", \"mContext = context;\", \"}\", \"public CursorLoader getGroupCursorLoader() {\", \"return new CursorLoader(mContext, FeedSQL.URI_TAGSWITHCOUNTS,\", \"FeedSQL.FIELDS_TAGSWITHCOUNT, null, null,\", \"Util.SortAlphabeticNoCase(FeedSQL.COL_TAG));\", \"}\", \"public CursorLoader getChildCursorLoader(final String tag) {\", \"return new CursorLoader(mContext, FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.FIELDS_VIEWCOUNT,\", \"Util.SelectionCouldBeNull(FeedSQL.COL_TAG, tag),\", \"Util.SelectionValCouldBeNull(tag),\", \"Util.SortAlphabeticNoCase(FeedSQL.COL_TITLE));\", \"}\", \"@Override\", \"protected Cursor getChildrenCursor(final Cursor groupCursor) {\", \"return null;\", \"}\", \"@Override\", \"public void onGroupCollapsed(int groupPosition) {\", \"}\", \"@Override\", \"public View getGroupView(final int groupPosition, final boolean isExpanded,\", \"View convertView, final ViewGroup parent) {\", \"Log.d(\\\"JONAS\\\", \\\"Children: \\\" + getChildrenCount(groupPosition));\", \"if (convertView == null) {\", \"convertView = LayoutInflater.from(mContext).inflate(R.layout\", \".view_feed_tag, parent, false);\", \"convertView.setTag(new GroupViewHolder(convertView));\", \"}\", \"final Cursor c = getGroup(groupPosition);\", \"final GroupViewHolder holder = (GroupViewHolder) convertView.getTag();\", \"if (c.getString(1).isEmpty()) {\", \"holder.titleTextView.setText(\\\"No tag\\\");\", \"} else {\", \"holder.titleTextView.setText(c.getString(1));\", \"}\", \"if (c.isNull(2) || c.getString(2).isEmpty()) {\", \"holder.unreadCountTextView.setVisibility(View.GONE);\", \"} else {\", \"holder.unreadCountTextView.setVisibility(View.VISIBLE);\", \"holder.unreadCountTextView.setText(c.getString(2));\", \"}\", \"return convertView;\", \"}\", \"@Override\", \"public View getChildView(final int groupPosition, final int childPosition,\", \"final boolean isLastChild, View convertView,\", \"final ViewGroup parent) {\", \"Log.d(\\\"JONAS\\\", \\\"Getting childView \\\" + groupPosition + \\\", \\\" + childPosition);\", \"if (convertView == null) {\", \"convertView = LayoutInflater.from(mContext).inflate(R.layout\", \".view_feed, parent, false);\", \"convertView.setTag(new FeedViewHolder(convertView));\", \"}\", \"final FeedViewHolder holder = (FeedViewHolder) convertView.getTag();\", \"final Cursor c = getChild(groupPosition, childPosition);\", \"holder.titleTextView.setText(c.getString(1));\", \"holder.id = c.getLong(0);\", \"holder.link = c.getString(2);\", \"if (c.isNull(4) || c.getString(4).isEmpty()) {\", \"holder.unreadCountTextView.setVisibility(View.GONE);\", \"} else {\", \"holder.unreadCountTextView.setVisibility(View.VISIBLE);\", \"holder.unreadCountTextView.setText(c.getString(4));\", \"}\", \"return convertView;\", \"}\", \"private class GroupViewHolder {\", \"public final View parent;\", \"public final TextView titleTextView;\", \"public final TextView unreadCountTextView;\", \"public GroupViewHolder(final View v) {\", \"parent = v;\", \"titleTextView = (TextView) v.findViewById(R.id.tag_name);\", \"unreadCountTextView =\", \"(TextView) v.findViewById(R.id.tag_unreadcount);\", \"}\", \"}\", \"private class FeedViewHolder {\", \"public final View parent;\", \"public final TextView titleTextView;\", \"public final TextView unreadCountTextView;\", \"public long id = -1;\", \"public String link = null;\", \"public FeedViewHolder(final View v) {\", \"parent = v;\", \"titleTextView = (TextView) v.findViewById(R.id.feed_name);\", \"unreadCountTextView = (TextView) v.findViewById(R.id.feed_unreadcount);\", \"}\", \"public void onClick(final View v) {\", \"}\", \"}\", \"}\", \"private static final int NAV_TAGS_LOADER = -2;\", \"private TaggedFeedsAdapter mNavAdapter;\", \"private ExpandableListView mDrawerListView;\", \"private boolean firstload = true;\", \"mNavAdapter = new TaggedFeedsAdapter(this, null);\", \"(ExpandableListView) mDrawerLayout.findViewById(R.id\", \".navdrawer_list);\", \"mDrawerListView.setOnChildClickListener(\", \"new ExpandableListView.OnChildClickListener() {\", \"public boolean onChildClick(final ExpandableListView parent,\", \"final View v, final int groupPosition,\", \"final int childPosition, final long id) {\", \"Cursor c = mNavAdapter\", \".getChild(groupPosition, childPosition);\", \"c.getString(1), c.getString(2),\", \"c.getString(3));\", \"return true;\", \"String url, String tag) {\", \"getLoaderManager().restartLoader(NAV_TAGS_LOADER, new Bundle(), this);\", \"if (id == NAV_TAGS_LOADER) {\", \"return mNavAdapter.getGroupCursorLoader();\", \"return mNavAdapter.getChildCursorLoader(bundle.getString(\\\"tag\\\"));\", \"if (cursorLoader.getId() == NAV_TAGS_LOADER) {\", \"mNavAdapter.setGroupCursor(cursor);\", \"for (int i = 0; i < cursor.getCount(); i++) {\", \"if (firstload) {\", \"mDrawerListView.expandGroup(i);\", \"}\", \"Cursor group = mNavAdapter.getGroup(i);\", \"Bundle b = new Bundle();\", \"b.putString(\\\"tag\\\", group.getString(1));\", \"Log.d(\\\"JONAS\\\", \\\"Restarting loader \\\" + i);\", \"getLoaderManager().restartLoader(i, b, this);\", \"}\", \"values.put(FeedSQL.COL_TAG, \\\"Comics\\\");\", \"values.put(FeedSQL.COL_TAG, \\\"Android\\\");\", \"values.put(FeedSQL.COL_TAG, \\\"Android\\\");\", \"} else {\", \"Log.d(\\\"JONAS\\\", \\\"Loader finished \\\" + cursorLoader.getId());\", \"mNavAdapter.setChildrenCursor(cursorLoader.getId(), cursor);\", \"firstload = false;\", \"if (cursorLoader.getId() == NAV_TAGS_LOADER) {\", \"mNavAdapter.setGroupCursor(null);\", \"} else {\", \"mNavAdapter.setChildrenCursor(cursorLoader.getId(), null);\", \"public static final String TAG = \\\"tag\\\";\", \"private EditText mTextTag;\", \"mTextTag = (EditText) findViewById(R.id.feed_tag);\", \"values.put(FeedSQL.COL_TAG,\", \"mTextTag.getText().toString().trim());\", \"if (i.hasExtra(TAG)) {\", \"mTextTag.setText(i.getStringExtra(TAG));\", \"}\", \"\\\"http://feeds.feedburner.com/AndroidPolice\\\", \\\"Android\\\");\", \"String url, String tag) {\", \"mFragment = FeedFragment.newInstance(id, title, url, tag);\", \"private static final String ARG_FEED_TAG = \\\"feed_tag\\\";\", \"private String tag = \\\"\\\";\", \"public static FeedFragment newInstance(long id, String title, String url,\", \"String tag) {\", \"args.putString(ARG_FEED_TAG, tag);\", \"tag = getArguments().getString(ARG_FEED_TAG);\", \"i.putExtra(EditFeedActivity.TAG, tag);\"]"}, {"project": "Feeder", "commit_id": "28176d011853bc24228805b109b9cb32aff84ba5", "time_stamp": 1409230217, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "LICENSE"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "a4d560b58e33374aef98c19aae1e7044447fef09", "time_stamp": 1409230529, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "a6c266b44ac50eefd7efe1e582284cdf103cae8c", "time_stamp": 1409230685, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "112124d0961302b51b446a22fae18ffd5414c19f", "time_stamp": 1409255542, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 236, "ld": 112, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class TaggedFeedsAdapter extends BaseExpandableListAdapter {\", \"private final LongSparseArray<Cursor> childCursors =\", \"new LongSparseArray<Cursor>();\", \"private Cursor groupCursor = null;\", \"public TaggedFeedsAdapter(final Context context) {\", \"public void setGroupCursor(final Cursor c) {\", \"groupCursor = c;\", \"if (c == null) {\", \"childCursors.clear();\", \"}\", \"notifyDataSetChanged();\", \"}\", \"public void setChildrenCursor(final int groupPosition, final Cursor c) {\", \"if (getGroupCount() <= groupPosition) {\", \"return;\", \"}\", \"final long groupId = getGroupId(groupPosition);\", \"childCursors.put(groupId, c);\", \"notifyDataSetChanged();\", \"}\", \"public int getGroupCount() {\", \"if (groupCursor == null) {\", \"return 0;\", \"} else {\", \"return groupCursor.getCount();\", \"}\", \"public int getChildrenCount(final int groupPosition) {\", \"Cursor c = childCursors.get(getGroupId(groupPosition));\", \"if (c == null) {\", \"return 0;\", \"} else {\", \"return c.getCount();\", \"}\", \"}\", \"@Override\", \"public Cursor getGroup(final int groupPosition) {\", \"if (groupCursor != null) {\", \"groupCursor.moveToPosition(groupPosition);\", \"}\", \"return groupCursor;\", \"}\", \"@Override\", \"public Cursor getChild(final int groupPosition, final int childPosition) {\", \"if (groupCursor == null) {\", \"return null;\", \"}\", \"Cursor childCursor = childCursors.get(getGroupId(groupPosition));\", \"if (childCursor != null) {\", \"childCursor.moveToPosition(childPosition);\", \"}\", \"return childCursor;\", \"}\", \"@Override\", \"public long getGroupId(final int groupPosition) {\", \"return getGroup(groupPosition).getLong(0);\", \"}\", \"@Override\", \"public long getChildId(final int groupPosition, final int childPosition) {\", \"return getChild(groupPosition, childPosition).getLong(0);\", \"}\", \"@Override\", \"public boolean hasStableIds() {\", \"return true;\", \"convertView = LayoutInflater.from(mContext)\", \".inflate(R.layout.view_feed_tag, parent, false);\", \"convertView = LayoutInflater.from(mContext)\", \".inflate(R.layout.view_feed, parent, false);\", \"@Override\", \"public boolean isChildSelectable(final int groupPosition,\", \"final int childPosition) {\", \"return true;\", \"}\", \"@Override\", \"public void onGroupCollapsed(int groupPosition) {\", \"}\", \"@Override\", \"public void onGroupExpanded(int groupPosition) {\", \"}\", \"unreadCountTextView =\", \"(TextView) v.findViewById(R.id.feed_unreadcount);\", \"mNavAdapter = new TaggedFeedsAdapter(this);\", \"mDrawerListView = (ExpandableListView) mDrawerLayout\", \".findViewById(R.id.navdrawer_list);\", \"getContentResolver().insert(FeedSQL.URI_FEEDS, values);\", \"getContentResolver().insert(FeedSQL.URI_FEEDS, values);\", \"getContentResolver().insert(FeedSQL.URI_FEEDS, values);\", \"getContentResolver().insert(FeedSQL.URI_FEEDS, values);\"]"}, {"project": "Feeder", "commit_id": "20c67088799c0b3dfd4a0eeb83da7996e9695668", "time_stamp": 1409267254, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/proguard-rules.pro"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "8a511368ad8cab256767f64ebccb79f8e0263030", "time_stamp": 1409269323, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 80, "ld": 11, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static void MarkItemsAsRead(final Context context,\", \"final String tag) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver().update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_TAG + \\\" IS ?\\\", Util.ToStringArray(tag));\", \"}\", \"mDrawerListView.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {\", \"@Override\", \"public boolean onGroupClick(final ExpandableListView parent,\", \"final View v, final int groupPosition, final long id) {\", \"if (mDrawerLayout != null) {\", \"mDrawerLayout.closeDrawer(Gravity.START);\", \"}\", \"if (mNavAdapter != null) {\", \"Cursor c = mNavAdapter\", \".getGroup(groupPosition);\", \"onNavigationDrawerItemSelected(-1,\", \"c.getString(1), null,\", \"c.getString(1));\", \"}\", \"return true;\", \"}\", \"});\", \"private static final String ONLY_UNREAD = FeedItemSQL.COL_UNREAD + \\\" IS 1 \\\";\", \"private static final String AND_UNREAD = \\\" AND \\\" + ONLY_UNREAD;\", \"} else if (id == R.id.action_mark_as_read ) {\", \"if (this.id > 0) {\", \"RssContentProvider.MarkFeedAsRead(getActivity(), this.id);\", \"} else if (this.tag != null) {\", \"RssContentProvider.MarkItemsAsRead(getActivity(), this.tag);\", \"}\", \"} else if (id == R.id.action_only_unread) {\", \"protected String getLoaderSelection() {\", \"String filter = null;\", \"if (id > 0) {\", \"filter = FeedItemSQL.COL_FEED + \\\" IS ? \\\";\", \"} else if (tag != null) {\", \"filter = FeedItemSQL.COL_TAG + \\\" IS ? \\\";\", \"}\", \"if (onlyUnread && filter != null) {\", \"filter += AND_UNREAD;\", \"} else if (onlyUnread) {\", \"filter = ONLY_UNREAD;\", \"}\", \"return filter;\", \"}\", \"protected String[] getLoaderSelectionArgs() {\", \"String[] args = null;\", \"if (id > 0) {\", \"args = Util.LongsToStringArray(this.id);\", \"} else if (tag != null) {\", \"args = Util.ToStringArray(this.tag);\", \"}\", \"return args;\", \"}\", \"FeedItemSQL.FIELDS, getLoaderSelection(),\", \"getLoaderSelectionArgs(),\"]"}, {"project": "Feeder", "commit_id": "ec41f91dbd4b8f8dda28ae5da4486185f1230eb3", "time_stamp": 1409270309, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed_tag.xml"}], "find_interval": null, "la": 78, "ld": 30, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private OnExpandClickListener onExpandListener = null;\", \"public void setOnExpandClickListener(OnExpandClickListener listener) {\", \"this.onExpandListener = listener;\", \"}\", \"holder.groupPosition = groupPosition;\", \"holder.isExpanded = isExpanded;\", \"public interface OnExpandClickListener {\", \"public void onExpandClick(final int groupPosition,\", \"final boolean isExpanded);\", \"}\", \"public final View expander;\", \"public int groupPosition = -1;\", \"public boolean isExpanded = false;\", \"expander = v.findViewById(R.id.tag_expander);\", \"expander.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View v) {\", \"if (onExpandListener != null && groupPosition > -1) {\", \"onExpandListener\", \".onExpandClick(groupPosition, isExpanded);\", \"}\", \"}\", \"});\", \"mNavAdapter.setOnExpandClickListener(new TaggedFeedsAdapter.OnExpandClickListener() {\", \"@Override\", \"public void onExpandClick(final int groupPosition,\", \"final boolean isExpanded) {\", \"if (isExpanded) {\", \"mDrawerListView.collapseGroup(groupPosition);\", \"} else {\", \"mDrawerListView.expandGroup(groupPosition);\", \"}\", \"}\", \"});\"]"}, {"project": "Feeder", "commit_id": "5b082adaaa506f578cb0f17694b2a404ac8e2e5d", "time_stamp": 1409308758, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}], "find_interval": null, "la": 7, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private final float mDensityScale;\", \"mDensityScale = context.getResources().getDisplayMetrics().density;\", \"w = (int) (w * mDensityScale + 0.5f);\", \"h = (int) (h * mDensityScale + 0.5f);\"]"}, {"project": "Feeder", "commit_id": "64bc64b6a32650964abd1a0eeaaddab788d06440", "time_stamp": 1409312924, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"itemSQL.description = item.getCleanDescription();\"]"}, {"project": "Feeder", "commit_id": "95cf010c93b6fe99d887d6c6cd87985dd778b94b", "time_stamp": 1409313844, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 31, "ld": 20, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private static boolean sShouldNotify = true;\", \"if (!sShouldNotify) {\", \"return;\", \"}\", \"public static void notifyAllUris(final Context context) {\", \"for (Uri uri : new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedSQL.URI_TAGSWITHCOUNTS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedItemSQL.URI_FEED_ITEMS}) {\", \"context.getContentResolver().notifyChange(uri, null, false);\", \"}\", \"}\", \"public static void setShouldNotify(final boolean b) {\", \"sShouldNotify = b;\", \"}\", \"RssContentProvider.setShouldNotify(false);\", \"RssContentProvider.setShouldNotify(true);\", \"RssContentProvider.notifyAllUris(this);\"]"}, {"project": "Feeder", "commit_id": "2e938d376877594b9d479466968e72d3b5c45bc7", "time_stamp": 1409405928, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "99a339dbebabeca315f998566da9fc8bcc58b85b", "time_stamp": 1409442227, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}], "find_interval": null, "la": 39, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"final boolean onlyUnread = PrefUtils.isShowOnlyUnread(getActivity());\", \"final boolean onlyUnread = !menuItem.isChecked();\", \"PrefUtils.setPrefShowOnlyUnread(getActivity(), onlyUnread);\", \"final boolean onlyUnread = PrefUtils.isShowOnlyUnread(getActivity());\", \"RssContentProvider.MarkItemAsRead(getActivity(), rssItem.id);\", \"Log.d(\\\"JONAS\\\", \\\"Text is:\\\\n\\\" + mRssItem.getDescription());\", \"@Override\", \"public void onDetach() {\", \"getLoaderManager().destroyLoader(TEXT_LOADER);\", \"super.onDetach();\", \"}\", \"public static final String PREF_SHOW_ONLY_UNREAD = \\\"pref_show_only_unread\\\";\", \"private static SharedPreferences sp(final Context context) {\", \"return PreferenceManager.getDefaultSharedPreferences(context);\", \"}\", \"return sp(context).getBoolean(PREF_WELCOME_DONE, false);\", \"sp(context).edit().putBoolean(PREF_WELCOME_DONE, true).apply();\", \"}\", \"public static boolean isShowOnlyUnread(final Context context) {\", \"return sp(context).getBoolean(PREF_SHOW_ONLY_UNREAD, true);\", \"}\", \"public static void setPrefShowOnlyUnread(final Context context,\", \"final boolean value) {\", \"sp(context).edit().putBoolean(PREF_SHOW_ONLY_UNREAD, value).apply();\", \"sp(context).registerOnSharedPreferenceChangeListener(listener);\", \"sp(context).unregisterOnSharedPreferenceChangeListener(listener);\"]"}, {"project": "Feeder", "commit_id": "5beb0b30ac7b7a0510415f49260542a3b0106d28", "time_stamp": 1409449285, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTagHunter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "deps/Simplistic-RSS"}], "find_interval": null, "la": 250, "ld": 25, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class ImageTagHunter {\", \"public static void getImages(final String text,\", \"HashMap<String, Image> images) {\", \"Document doc = Jsoup.parse(text);\", \"Elements imgtags = doc.getElementsByTag(\\\"img\\\");\", \"for (Element imgtag: imgtags) {\", \"Image img = getImageAttributes(imgtag);\", \"images.put(img.src, img);\", \"}\", \"}\", \"private static Image getImageAttributes(final Element tag) {\", \"Image img = new Image();\", \"img.src = tag.absUrl(\\\"src\\\");\", \"Log.d(\\\"JONAS2\\\", \\\"img src \\\" + img.src);\", \"if (tag.hasAttr(\\\"alt\\\")) {\", \"img.alt = tag.attr(\\\"alt\\\");\", \"Log.d(\\\"JONAS2\\\", \\\"img alt \\\" + img.alt);\", \"}\", \"if (tag.hasAttr(\\\"width\\\")) {\", \"img.width = tag.attr(\\\"width\\\");\", \"Log.d(\\\"JONAS2\\\", \\\"img width \\\" + img.width);\", \"}\", \"if (tag.hasAttr(\\\"height\\\")) {\", \"img.height = tag.attr(\\\"height\\\");\", \"Log.d(\\\"JONAS2\\\", \\\"img height \\\" + img.height);\", \"}\", \"return img;\", \"}\", \"public static class Image {\", \"public String src = null;\", \"public String width = null;\", \"public String height = null;\", \"public String alt = null;\", \"public boolean hasPercentSize() {\", \"boolean result = false;\", \"if (width != null) {\", \"result = width.contains(\\\"%\\\");\", \"}\", \"if (height != null) {\", \"result |= height.contains(\\\"%\\\");\", \"}\", \"return result;\", \"}\", \"public boolean hasSize() {\", \"if (width != null && height != null) {\", \"try {\", \"Integer.parseInt(width);\", \"Integer.parseInt(height);\", \"return true;\", \"} catch (NumberFormatException e) {\", \"return false;\", \"}\", \"}\", \"return false;\", \"}\", \"public int getIntWidth() {\", \"return Integer.parseInt(width);\", \"}\", \"public int getIntHeight() {\", \"return Integer.parseInt(height);\", \"}\", \"}\", \"}\", \"final float mDensityScale;\", \"static class Monospace { }\", \"static class RelativeSize { }\", \"static class Bold { }\", \"static class Italic { }\", \"final String mText;\", \"final HashMap<String, ImageTagHunter.Image> images;\", \"ImageTagHunter.Image lastImg = null;\", \"images = new HashMap<String, ImageTagHunter.Image>();\", \"this.mText = text;\", \"boolean shrunk = false;\", \"int w=-1, h=-1;\", \"ImageTagHunter.Image img = images.get(source);\", \"lastImg = img;\", \"if (img.hasSize()) {\", \"Log.d(\\\"JONAS2\\\", \\\"Pixel size present\\\");\", \"w = img.getIntWidth();\", \"h = img.getIntHeight();\", \"if (w < 10 || h < 10) {\", \"Log.d(\\\"JONAS4\\\", \\\"Bullshit image, ignoring...\\\");\", \"lastImg = null;\", \"return null;\", \"}\", \"w = (int) (w * mDensityScale + 0.5f);\", \"h = (int) (h * mDensityScale + 0.5f);\", \"if (w > maxSize.x) {\", \"Log.d(\\\"JONAS2\\\", \\\"Its big, shrinking it\\\");\", \"Point newSize = scaleImage(w, h);\", \"w = newSize.x;\", \"h = newSize.y;\", \"shrunk = true;\", \"}\", \"}\", \"final Bitmap b;\", \"Picasso p = Picasso.with(appContext);\", \"p.setIndicatorsEnabled(true);\", \"if (shrunk) {\", \"Log.d(\\\"JONAS2\\\", \\\"Resizing with picasso\\\");\", \"b = p.load(source)\", \".resize(w, h).get();\", \"} else if (img.hasPercentSize()) {\", \"Log.d(\\\"JONAS2\\\", \\\"Percentsize resizing..\\\");\", \"b = p.load(source).resize(maxSize.x,\", \"maxSize.y).centerInside().get();\", \"} else {\", \"b = p.load(source).get();\", \"}\", \"if (w == -1) {\", \"w = b.getWidth();\", \"h = b.getHeight();\", \"w = (int) (w * mDensityScale + 0.5f);\", \"h = (int) (h * mDensityScale + 0.5f);\", \"}\", \"if (((float) w) / ((float) maxSize.x) > 0.5) {\", \"Log.d(\\\"JONAS2\\\", \\\"Scaling final image bounds\\\");\", \"ImageTagHunter.getImages(this.mText, this.images);\", \"return android.text.Html.fromHtml(mText, imgThing, new Html.TagHandler() {\", \"} else {\", \"text.append(\\\"\\\\n\\\");\", \"}\", \"if (lastImg != null && lastImg.alt != null) {\", \"Log.d(\\\"JONAS4\\\", \\\"Last img: \\\" + lastImg.alt);\", \"start(text, new Italic());\", \"text.append(lastImg.alt);\", \"end(text, Italic.class, new StyleSpan(Typeface.ITALIC));\", \"text.append(\\\"\\\\n\\\");\"]"}, {"project": "Feeder", "commit_id": "1763bc0c9c4d35d727deeba4f885a43723940cb4", "time_stamp": 1409491461, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"ba732e1329068994b15932fc809b2da6da15dd74\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java\": [\"279\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTagHunter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": 4781335, "la": 17, "ld": 70, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "568362f18fcdfd0b210c0e3f69150f10dd92efd9", "time_stamp": 1410025692, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"8120ce311ae971d982b2d0203eb46b5c9f940203\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java\": [\"101\", \"102\", \"103\", \"105\", \"122\", \"123\", \"124\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/PendingNetworkSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSearchLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/SyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/GoogleFeedAPIClient.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/view_feed_result.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "add", "modified_path": "server/Makefile"}, {"type": "add", "modified_path": "server/app.py"}, {"type": "add", "modified_path": "server/app.yaml"}, {"type": "add", "modified_path": "server/app_gcm.py"}, {"type": "add", "modified_path": "server/cleaner.py"}, {"type": "add", "modified_path": "server/cron.yaml"}, {"type": "add", "modified_path": "server/endpoints/LICENSE"}, {"type": "add", "modified_path": "server/endpoints/__init__.py"}, {"type": "add", "modified_path": "server/endpoints/api_backend.py"}, {"type": "add", "modified_path": "server/endpoints/api_backend_service.py"}, {"type": "add", "modified_path": "server/endpoints/api_config.py"}, {"type": "add", "modified_path": "server/endpoints/api_exceptions.py"}, {"type": "add", "modified_path": "server/endpoints/apiserving.py"}, {"type": "add", "modified_path": "server/endpoints/message_parser.py"}, {"type": "add", "modified_path": "server/endpoints/protojson.py"}, {"type": "add", "modified_path": "server/endpoints/users_id_token.py"}, {"type": "add", "modified_path": "server/feedparser.py"}, {"type": "add", "modified_path": "server/gcm/__init__.py"}, {"type": "add", "modified_path": "server/gcm/gcm.py"}, {"type": "add", "modified_path": "server/gcm/test.py"}, {"type": "add", "modified_path": "server/index.yaml"}, {"type": "add", "modified_path": "server/messages.py"}, {"type": "add", "modified_path": "server/models.py"}, {"type": "add", "modified_path": "server/tasks.py"}, {"type": "add", "modified_path": "server/util.py"}], "find_interval": 2758307, "la": 10339, "ld": 27, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "50d51fe140feef29441b2f5c11565a6cd8993a11", "time_stamp": 1410085862, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/util.py"}], "find_interval": null, "la": 18, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"Supports several formats, examples\", \"In second precision, format common in RSS feeds\", \"Formats common in Atom feeds\", \">>> parse_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 +0200\\\")\", \"datetime.datetime(2014, 9, 5, 12, 55, tzinfo=datetime.timezone(datetime.timedelta(0, 7200)))\", \">>> parse_timestamp(\\\"Fri, 23 May 2014 10:56:50 GMT\\\")\", \"datetime.datetime(2014, 5, 23, 10, 56, 50)\", \">>> parse_timestamp(\\\"Fri 23 May 2014 10:56:50 -0200\\\")\", \"datetime.datetime(2014, 5, 23, 10, 56, 50, tzinfo=datetime.timezone(datetime.timedelta(-1, 79200)))\", \"'%Y-%m-%dT%H:%M:%S',\", \"'%a, %d %b %Y %H:%M:%S %z',\", \"'%a, %d %b %Y %H:%M:%S %Z',\", \"'%a %d %b %Y %H:%M:%S %z',\", \"'%a %d %b %Y %H:%M:%S %Z']\"]"}, {"project": "Feeder", "commit_id": "4ce22276b1b1c471275091f8b6c3225c0085fe2c", "time_stamp": 1410088676, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/messages.py"}, {"type": "modify", "modified_path": "server/util.py"}], "find_interval": null, "la": 36, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from util import datetime_to_string, convert_timestamp\", \"published=convert_timestamp(item.published),\", \"from datetime import datetime, tzinfo, timedelta\", \"class UTC(tzinfo)\", \"def utcoffset(self, dt)\", \"return timedelta(0)\", \"def dst(self, dt)\", \"return timedelta(0)\", \"def tzname(self, dt)\", \"return \\\"UTC\\\"\", \"def convert_timestamp(timestamp)\", \"'''Convert timestamp to ISO8601 in UTC\", \"Example\", \">>> convert_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 +0200\\\")\", \"'2014-09-05T10:55:00+00:00'\", \">>> convert_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 +0000\\\")\", \"'2014-09-05T12:55:00+00:00'\", \"'''\", \"dt = parse_timestamp(timestamp)\", \"if dt is None\", \"# Failed, return original\", \"return timestamp\", \"if dt.utcoffset() is not None\", \"dt = dt.astimezone(UTC())\", \"return datetime_to_string(dt)\"]"}, {"project": "Feeder", "commit_id": "d2caabbce7159a8b2fa3666207869c5105d694bb", "time_stamp": 1410088733, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 46, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"try\", \"from models import FeedItemModel, FeedItemKey\", \"except\", \"# This is OK if running tests...\", \"pass\", \"Example\", \">>> strip_tags(\\\"An <tag>example text</tag> with tag.\\\")\", \"'An example text with tag.'\", \"# Remove all tags\", \"text = re.sub(r\\\"<[^>]*>\\\", \\\"\\\", text)\", \"# This might have introduced extra spaces, reduce to one\", \"text = re.sub(r\\\"\\\\s+\\\", \\\" \\\", text)\", \"Examples\", \"Too many newlines\", \">>> strip_bloat('<br/> <br/>')\", \"'<br/>'\", \">>> strip_bloat('<br><br><br>')\", \"'<br/>'\", \">>> strip_bloat('<p> <br>')\", \"'<p>'\", \">>> strip_bloat('<p>   </p>')\", \"''\", \"Feedflare\", \">>> strip_bloat('<div class=\\\"feedflare\\\">blabla</div>')\", \"''\", \"Feedsportal links\", \">>> strip_bloat('<a href=\\\"http://feedsportal.com\\\">bla</a>')\", \"''\", \"Zero size images\", \">>> strip_bloat('<img width=\\\"1\\\" src=\\\"bla\\\"/>')\", \"''\", \">>> strip_bloat('<img src=\\\"bla\\\" width=\\\"1\\\">blaa</img>')\", \"''\", \"if __name__ == \\\"__main__\\\"\", \"doctest.testmod()\"]"}, {"project": "Feeder", "commit_id": "f2f06fedfc0b9c7753ac85b24927573b731d8b6b", "time_stamp": 1410095931, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/util.py"}], "find_interval": null, "la": 42, "ld": 14, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"class TimeZone(tzinfo)\", \"def __init__(self, offset)\", \"super(tzinfo, self)\", \"self.offset = offset\", \"return timedelta(self.offset)\", \"return \\\"TZ{}\\\".format(self.offset)\", \"UTC = TimeZone(0)\", \"timestamp string in the format (in UTC)\", \"if dt is None\", \"return dt\", \"if dt.utcoffset() is not None\", \"dt = dt.astimezone(UTC)\", \"Note that timezones are not supported\", \"'2014-09-05T12:55:00'\", \"'2014-09-05T12:55:00'\", \">>> convert_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 GMT\\\")\", \"'2014-09-05T12:55:00'\", \">>> convert_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 CET\\\")\", \"'2014-09-05T12:55:00'\", \"#print(\\\"Conversion failed: \\\" + timestamp)\", \"datetime.datetime(2014, 9, 5, 12, 55)\", \"datetime.datetime(2014, 5, 23, 10, 56, 50)\", \"'%a, %d %b %Y %H:%M:%S',\", \"'%a %d %b %Y %H:%M:%S',\", \"# Fucking python2 does not support timezones...\", \"# First extract timezone\", \"tzpattern = r\\\"\\\\s?([+-]([0-9]){4})\\\"\", \"offset = re.search(tzpattern, timestamp)\", \"if offset is not None\", \"offset = offset.group(1)\", \"# Then remove from timestamp\", \"timestamp = re.sub(tzpattern, \\\"\\\", timestamp)\", \"except ValueError as e\", \"#print(\\\"Conversion error: \\\", e)\"]"}, {"project": "Feeder", "commit_id": "bb1e6f9b25c63f9e369bc80bbdd19ce12a7a602a", "time_stamp": 1410095950, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 2, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from util import convert_timestamp\", \"published=convert_timestamp(item.get(\\\"published\\\", None)),\"]"}, {"project": "Feeder", "commit_id": "8835febecbfd57b6d39453c28b8eaa89ae42cbfe", "time_stamp": 1410116863, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 205, "ld": 156, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String AUTHORITY = \\\"com.nononsenseapps.feeder.provider\\\";\", \"public static final String SCHEME = \\\"content://\\\";\", \"private static final UriMatcher sURIMatcher =\", \"new UriMatcher(UriMatcher.NO_MATCH);\", \"private static boolean sShouldNotify = true;\", \"public static void notifyAllUris(final Context context) {\", \"for (Uri uri : new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedSQL.URI_TAGSWITHCOUNTS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedItemSQL.URI_FEED_ITEMS}) {\", \"context.getContentResolver().notifyChange(uri, null, false);\", \"}\", \"}\", \"public static void MarkItemAsRead(final Context context,\", \"final long itemId) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver()\", \".update(FeedItemSQL.URI_FEED_ITEMS, values, Util.WHEREIDIS,\", \"Util.LongsToStringArray(itemId));\", \"}\", \"public static void MarkFeedAsRead(final Context context,\", \"final long feedId) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver().update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_FEED + \\\" IS ?\\\",\", \"Util.LongsToStringArray(feedId));\", \"}\", \"public static void MarkItemsAsRead(final Context context,\", \"final String tag) {\", \"ContentValues values = new ContentValues();\", \"values.put(FeedItemSQL.COL_UNREAD, 0);\", \"context.getContentResolver().update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_TAG + \\\" IS ?\\\", Util.ToStringArray(tag));\", \"}\", \"public static String GetLatestTimestamp(final Context context) {\", \"String result = null;\", \"Cursor c = context.getContentResolver().query(FeedSQL.URI_FEEDS,\", \"new String[]{\\\"DISTINCT \\\" + FeedSQL.COL_TIMESTAMP},\", \"FeedSQL.COL_TIMESTAMP \", \"\\\" IS NOT NULL AND \\\" \", \"FeedSQL.COL_TIMESTAMP \", \"\\\" IS NOT ''\\\", null, FeedSQL.COL_TIMESTAMP + \\\" DESC\\\");\", \"try {\", \"if (c.moveToNext()) {\", \"result = c.getString(0);\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return result;\", \"}\", \"public static void setShouldNotify(final boolean b) {\", \"sShouldNotify = b;\", \"}\", \"public boolean onCreate() {\", \"return true;\", \"}\", \"@Override\", \"public Cursor query(Uri uri, String[] projection, String selection,\", \"String[] selectionArgs, String sortOrder) {\", \"final String table;\", \"Cursor result = null;\", \"table = FeedSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"table = FeedSQL.TABLE_NAME;\", \"break;\", \"case FeedSQL.VIEWCOUNTCOD\", \"table = FeedSQL.VIEWCOUNT_NAME;\", \"break;\", \"case FeedSQL.VIEWTAGSCOD\", \"table = FeedSQL.VIEWTAGS_NAME;\", \"table = FeedItemSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"table = FeedItemSQL.TABLE_NAME;\", \"table = PendingNetworkSQL.TABLE_NAME;\", \"selection = Util.WHEREIDIS;\", \"selectionArgs = Util.ToStringArray(uri.getLastPathSegment());\", \"table = PendingNetworkSQL.TABLE_NAME;\", \"result = DatabaseHandler.getInstance(getContext()).getReadableDatabase()\", \".query(table, projection, selection, selectionArgs, null, null,\", \"sortOrder, null);\", \"result.setNotificationUri(getContext().getContentResolver(), uri);\", \"return result;\", \"notifyUris = new Uri[]{FeedSQL.URI_FEEDS,\", \"notifyUris = new Uri[]{FeedItemSQL.URI_FEED_ITEMS,\", \"long id =\", \"DatabaseHandler.getInstance(getContext()).getWritableDatabase()\", \".insert(table, null, values);\", \"public int delete(Uri uri, String selection, String[] selectionArgs) {\", \"int result = 0;\", \"Uri[] notifyUris = null;\", \"result += delete(FeedSQL.URI_FEEDS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"notifyUris = new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS};\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".delete(FeedSQL.TABLE_NAME, selection, selectionArgs);\", \"notifyUris = new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS};\", \"result += delete(FeedItemSQL.URI_FEED_ITEMS, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"notifyUris = new Uri[]{FeedItemSQL.URI_FEED_ITEMS};\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".delete(FeedItemSQL.TABLE_NAME, selection,\", \"selectionArgs);\", \"notifyUris = new Uri[]{FeedItemSQL.URI_FEED_ITEMS};\", \"result += delete(PendingNetworkSQL.URI, Util.WHEREIDIS,\", \"Util.ToStringArray(uri.getLastPathSegment()));\", \"result += DatabaseHandler.getInstance(getContext())\", \".getWritableDatabase()\", \".delete(PendingNetworkSQL.TABLE_NAME, selection,\", \"selectionArgs);\", \"if (notifyUris != null) {\", \"notifyChange(notifyUris);\", \"}\", \"notifyUris = new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"notifyUris = new Uri[]{FeedSQL.URI_FEEDS,\", \"FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"notifyUris = new Uri[]{FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"notifyUris = new Uri[]{FeedItemSQL.URI_FEED_ITEMS,\", \"FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.URI_TAGSWITHCOUNTS};\", \"result = DatabaseHandler.getInstance(getContext()).getWritableDatabase()\", \".update(table, values, selection, selectionArgs);\", \"private void notifyChange(Uri... uris) {\", \"if (!sShouldNotify) {\", \"return;\", \"}\", \"for (Uri uri : uris) {\", \"getContext().getContentResolver().notifyChange(uri, null, false);\", \"}\", \"FeedItemSQL.COL_LINK + \\\" IS ? AND \\\" \", \"Util.ToStringArray(item.link,\", \"Log.d(\\\"JONAS\\\", \\\"Found existing feeditem\\\");\", \"Log.d(\\\"JONAS\\\", \\\"Creating new feeditem\\\");\", \"request.min_timestamp = RssContentProvider.GetLatestTimestamp(this);\", \"Log.d(TAG, \\\"Using min_timestamp: \\\" + request.min_timestamp);\", \"Log.d(TAG, \\\"Number of feeds to sync: \\\" + response.feeds.size());\", \"Log.d(TAG, \\\"ftimestamp \\\" + feed.timestamp);\", \"Log.d(TAG, \\\"Items in feed was null\\\");\", \"Log.d(TAG, \\\"Number of items in feed: \\\" + feed.items.size());\", \"Log.d(\\\"JONASTIME\\\", \\\"\\\" + item.published);\"]"}, {"project": "Feeder", "commit_id": "224d630f13fd1c91e7055b0386efe9ee18e780f9", "time_stamp": 1410116961, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/messages.py"}], "find_interval": null, "la": 1, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"read = messages.BooleanField(11, required=True, default=False)\"]"}, {"project": "Feeder", "commit_id": "a1e9c5727fd481904dc3f9ac109bb22ea36db81b", "time_stamp": 1410126396, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 30, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# Bloat patterns\", \"PATTERN_FEEDFLARE = re.compile(r\\\"(<|&lt;)div class=('|\\\\\\\")feedflare('|\\\\\\\").*?/div(>|&gt;)\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_FEEDSPORTAL = re.compile(r\\\"(<|&lt;)a((?!/a).)*feedsportal.*?/a(>|gt;)\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_LINKED_ZEROIMAGES = \\\\\", \"re.compile(r\\\"(<|&lt;)a((?!/a).)*width=('|\\\\\\\")1('|\\\\\\\")((?!/a).)*/a(>|&gt;)\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_ZEROIMAGES = \\\\\", \"re.compile(r\\\"(<|&lt;)img((?!/((>|&gt;)|img)).)*width=('|\\\\\\\")1('|\\\\\\\").*?/(img)?(>|&gt;)\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_PARAGRAPH_NEWLINE = \\\\\", \"re.compile(r\\\"((<|&lt;)/?p/?(>|&gt;))(\\\\s*(<|&lt;)/?br/?(>|&gt;))+\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_MULTIPLE_NEWLINES = \\\\\", \"re.compile(r\\\"(((<|&lt;)/?br/?(>|&gt;))\\\\s*){2,}\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"PATTERN_EMPTY_PARAGRAPHS = \\\\\", \"re.compile(r\\\"(((<|&lt;)(p)(>|&gt;))\\\\s*((<|&lt;)/p(>|&gt;))|(<|&lt;)p/(>|&gt;))\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"text = PATTERN_FEEDFLARE.sub(\\\"\\\", text)\", \"text = PATTERN_FEEDSPORTAL.sub(\\\"\\\", text)\", \"text = PATTERN_LINKED_ZEROIMAGES.sub(\\\"\\\", text)\", \"text = PATTERN_ZEROIMAGES.sub(\\\"\\\", text)\", \"text = PATTERN_MULTIPLE_NEWLINES.sub(\\\"<br/>\\\", text)\", \"text = PATTERN_PARAGRAPH_NEWLINE.sub(\\\"<p>\\\", text)\", \"# Take this last\", \"text = PATTERN_EMPTY_PARAGRAPHS.sub(\\\"\\\", text)\"]"}, {"project": "Feeder", "commit_id": "eda08f8c8de2445981be4c845b3876bec0de18d0", "time_stamp": 1410126898, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 8, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"re.compile(r\\\"(<|&lt;)img((?!/((>|&gt;)|img)).)*width=\\\\\\\\?('|\\\\\\\")1\\\\\\\\?('|\\\\\\\").*?/(img)?(>|&gt;)\\\",\", \"PATTERN_EMPTY_DIVS = \\\\\", \"re.compile(r\\\"<div[^>]*>\\\\s*</div>\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \">>> strip_bloat('<img height=\\\\\\\"1\\\\\\\" src=\\\\\\\"http://feeds.feedburner.com/~r/cornubot/~4/-BDe1lEL8ys\\\\\\\" width=\\\\\\\"1\\\\\\\" />')\", \"''\", \"# Take these last\", \"text = PATTERN_EMPTY_DIVS.sub(\\\"\\\", text)\"]"}, {"project": "Feeder", "commit_id": "894583c902cc77143329a843e8578e0a2bf2d7c5", "time_stamp": 1410128581, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}], "find_interval": null, "la": 82, "ld": 14, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mFragment = getDefaultFragment();\", \"if (mFragment != null) {\", \"getFragmentManager().beginTransaction()\", \".add(R.id.container, mFragment, \\\"single_pane\\\").commit();\", \"}\", \"final String tag = PrefUtils.getLastOpenFeedTag(this);\", \"final long id = PrefUtils.getLastOpenFeedId(this);\", \"if (tag != null || id > 0) {\", \"return FeedFragment.newInstance(id, \\\"\\\", \\\"\\\", tag);\", \"} else {\", \"return null;\", \"}\", \"PrefUtils.setLastOpenFeed(this, id, tag);\", \"private static final int FEEDITEMS_LOADER = 1;\", \"private static final int FEED_LOADER = 2;\", \"getLoaderManager().restartLoader(FEEDITEMS_LOADER, new Bundle(), this);\", \"if (id > 0 && (title.isEmpty() || url.isEmpty())) {\", \"getLoaderManager().restartLoader(FEED_LOADER, new Bundle(), this);\", \"}\", \"getLoaderManager().restartLoader(FEEDITEMS_LOADER, new Bundle(), this);\", \"if (ID == FEEDITEMS_LOADER) {\", \"} else if (ID == FEED_LOADER) {\", \"return new CursorLoader(getActivity(),\", \"Uri.withAppendedPath(FeedSQL.URI_FEEDS, Long.toString(id)),\", \"FeedSQL.FIELDS, null, null, null);\", \"if (FEEDITEMS_LOADER == cursorLoader.getId()) {\", \"mAdapter.swapCursor(cursor);\", \"} else if (FEED_LOADER == cursorLoader.getId()) {\", \"if (cursor.moveToNext()) {\", \"FeedSQL feed = new FeedSQL(cursor);\", \"this.title = feed.title;\", \"this.url = feed.url;\", \"}\", \"getLoaderManager().destroyLoader(cursorLoader.getId());\", \"}\", \"if (FEEDITEMS_LOADER == cursorLoader.getId()) {\", \"mAdapter.swapCursor(null);\", \"}\", \"public static final String PREF_LAST_FEED_TAG = \\\"pref_last_feed_tag\\\";\", \"public static final String PREF_LAST_FEED_ID = \\\"pref_last_feed_id\\\";\", \"public static void setLastOpenFeed(final Context context, final long id,\", \"final String tag) {\", \"sp(context).edit().putLong(PREF_LAST_FEED_ID, id)\", \".putString(PREF_LAST_FEED_TAG, tag).apply();\", \"}\", \"public static String getLastOpenFeedTag(final Context context) {\", \"return sp(context).getString(PREF_LAST_FEED_TAG, null);\", \"}\", \"public static long getLastOpenFeedId(final Context context) {\", \"return sp(context).getLong(PREF_LAST_FEED_ID, -1);\", \"}\"]"}, {"project": "Feeder", "commit_id": "3c015f1135d5bed465884c5545b8cb1023b40fee", "time_stamp": 1410161629, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/tasks.py"}], "find_interval": null, "la": 25, "ld": 5, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def printpage(self, msg)\", \"self.response.write(str(msg))\", \"def get(self)\", \"\\\"\\\"\\\"Get is called by cron, which caches all feeds.\\\"\\\"\\\"\", \"print(\\\"In cache get\\\")\", \"feeds = self._fetch_all_feeds()\", \"if feeds is None\", \"print(\\\"No feeds\\\")\", \"self.printpage(\\\"No feeds\\\")\", \"return\", \"for feed in feeds\", \"self._cache_feed(feed.link, feed.etag, feed.modified)\", \"\\\"\\\"\\\"Post is used when new feeds are added.\\\"\\\"\\\"\", \"# If no urls specified, fetch all\", \"urls = self._fetch_all_feeds()\", \"def _fetch_all_feeds(self)\", \"# If no urls specified, fetch all\", \"return FeedModel.query(projection=[\\\"link\\\", \\\"etag\\\", \\\"modified\\\"],\", \"distinct=True)\", \"url can be either a string or a feedmodel.\"]"}, {"project": "Feeder", "commit_id": "eee7c094cca515943251277f4830bbfa30225774", "time_stamp": 1410164865, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/tasks.py"}], "find_interval": null, "la": 4, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"#if \\\"etag\\\" in rss\", \"#    print(\\\"etag:\\\", rss.etag)\", \"#if \\\"modified\\\" in rss\", \"#    print(\\\"modified:\\\", rss.modified)\"]"}, {"project": "Feeder", "commit_id": "6094dfcd36e91f90d558f2c3d842969bcd865ae5", "time_stamp": 1410216923, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/app.py"}, {"type": "modify", "modified_path": "server/app_gcm.py"}, {"type": "modify", "modified_path": "server/cleaner.py"}, {"type": "modify", "modified_path": "server/cron.yaml"}, {"type": "modify", "modified_path": "server/messages.py"}, {"type": "modify", "modified_path": "server/models.py"}, {"type": "modify", "modified_path": "server/tasks.py"}, {"type": "modify", "modified_path": "server/util.py"}], "find_interval": null, "la": 195, "ld": 73, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"REQUEST_DELFEED, REQUEST_CACHEFEEDS,\", \"GCMRegId)\", \"FeedModelKey, FeedItemKey,\", \"GCMRegIdModel, GCMRegIdModelKey)\", \"@endpoints.method(GCMRegId, VoidMessage,\", \"name='gcm.register',\", \"path='registergcm',\", \"http_method='POST')\", \"def register_gcm(self, request)\", \"current_user = endpoints.get_current_user()\", \"if current_user is None\", \"raise endpoints.UnauthorizedException('Invalid token.')\", \"device = GCMRegIdModel(key=GCMRegIdModelKey(request.regid),\", \"regid=request.regid,\", \"userid=current_user)\", \"# And save it\", \"device.put()\", \"# Return nothing\", \"return VoidMessage()\", \"gcm = GCM('AIzaSyDH8p6RpggRjDp1PcGewmYsLGsoZC2kBJ0')\", \"# ACTIO\", \"ACTION_SYNC = \\\"sync\\\"\", \"def send_sync_notices(userids)\", \"Send a notice for the users' devices to do a sync.\", \"'''\", \"for userid in userids\", \"# Get devices\", \"reg_ids = []\", \"query = GCMRegIdModel.query(GCMRegIdModel.userid == userid)\", \"for reg_model in query\", \"reg_ids.append(reg_model.regid)\", \"if len(reg_ids) > 0\", \"print(\\\"Sending sync notice to:\\\", userid, reg_ids[0])\", \"_send(userid, reg_ids, dict(action=ACTION_SYNC))\", \"print(\\\"Got error in GCM:\\\", error)\", \"# Productive patterns\", \"PATTERN_IMG_URL = re.compile(r\\\"(&lt;|<)img.*?src=(\\\\\\\"|')(.*?)(\\\\\\\"|')\\\",\", \"re.IGNORECASE | re.MULTILINE)\", \"Returns a new feeditem model with cleaned attributes.\", \"Returns none if item already exists.\", \"for feeditem in FeedItemModel.query(FeedItemModel.key == FeedItemKey(url, item.link)).iter(keys_only=True)\", \"# Existing feed, so ignore\", \"return None\", \"images=get_images(clean_description),\", \"not exceed maxlen in length and which is unescaped\", \"Example\", \">>> get_snippet(\\\"I &amp; <i>you</i> are <i>very silly</i>.\\\", maxlen=10)\", \"'I & you ar'\", \"return unescape(strip_tags(text))[:maxlen]\", \"def unescape(text)\", \"\\\"\\\"\\\"\", \"Unescapes HTML-escaped text.\", \"Examples\", \">>> unescape(\\\"&lt; &rt;\\\")\", \"'< >'\", \">>> unescape(\\\"&quot;\\\")\", \"'\\\"'\", \">>> unescape(\\\"&apos;\\\")\", \"\\\"'\\\"\", \">>> unescape(\\\"&amp;\\\")\", \"'&'\", \"\\\"\\\"\\\"\", \"text = text.replace(\\\"&lt;\\\", \\\"<\\\")\", \"text = text.replace(\\\"&rt;\\\", \\\">\\\")\", \"text = text.replace(\\\"&quot;\\\", '\\\"')\", \"text = text.replace(\\\"&apos;\\\", \\\"'\\\")\", \"text = text.replace(\\\"&amp;\\\", \\\"&\\\")\", \"return text\", \"def get_images(text)\", \"\\\"\\\"\\\"\", \"Find and return the first image url in the document.\", \"None if nothing could be found.\", \"Examples\", \">>> get_images(\\\"No image here\\\")\", \"[]\", \">>> get_images(\\\"Here's one: <img src='url'/>\\\")\", \"['url']\", \">>> get_images(\\\"one: <img src='url1'/>, two: <img width='10' src='url2' height='50'/>\\\")\", \"['url1', 'url2']\", \"\\\"\\\"\\\"\", \"images = []\", \"for m in PATTERN_IMG_URL.finditer(text)\", \"images.append(m.group(3))\", \"return images\", \"images = messages.StringField(12, repeated=True)\", \"images=item.images,\", \"user = ndb.UserProperty(required=True, indexed=True)\", \"title = ndb.TextProperty(required=True, indexed=False)\", \"description = ndb.TextProperty(required=True, indexed=False)\", \"link = ndb.StringProperty(required=True, indexed=True)\", \"timestamp = ndb.DateTimeProperty(required=True, indexed=True)\", \"tag = ndb.StringProperty(indexed=False)\", \"published = ndb.StringProperty(indexed=False)\", \"etag = ndb.StringProperty(indexed=True)\", \"modified = ndb.StringProperty(indexed=True)\", \"title = ndb.TextProperty(required=True, indexed=False)\", \"description = ndb.TextProperty(required=True, indexed=False)\", \"link = ndb.StringProperty(required=True, indexed=True)\", \"title_stripped = ndb.StringProperty(required=True, indexed=False)\", \"snippet = ndb.StringProperty(required=True, indexed=False)\", \"timestamp = ndb.DateTimeProperty(required=True, indexed=True)\", \"feed_link = ndb.StringProperty(required=True, indexed=True)\", \"images = ndb.StringProperty(repeated=True, indexed=False)\", \"published = ndb.StringProperty(indexed=False)\", \"author = ndb.StringProperty(indexed=False)\", \"comments = ndb.StringProperty(indexed=False)\", \"enclosures = ndb.StringProperty(repeated=True, indexed=False)\", \"tags = ndb.StringProperty(repeated=True, indexed=False)\", \"# DeviceID in NDB\", \"def GCMRegIdModelKey(regid)\", \"return ndb.Key(GCMRegIdModel, regid)\", \"class GCMRegIdModel(ndb.Model)\", \"regid = ndb.StringProperty(required=True, indexed=False)\", \"userid = ndb.UserProperty(required=True, indexed=True)\", \"from util import (datetime_now, parse_timestamp, domain_from_url,\", \"datetuple_to_string)\", \"# Don't remove embedded videos\", \"fp._HTMLSanitizer.acceptable_elements = \\\\\", \"set(list(fp._HTMLSanitizer.acceptable_elements) + ['object',\", \"'embed',\", \"'iframe'])\", \"self.printpage(\\\"Caching done.\\\")\", \"try\", \"print(rss.debug_message)\", \"except\", \"pass\", \"return\", \"# If no items, move on\", \"if len(rss.entries) == 0\", \"print(\\\"No new items, ignoring {}\\\".format(f.title))\", \"# Update feed last\", \"any_new_items = False\", \"# Ignores existing items\", \"if feeditem is not None\", \"any_new_items = True\", \"feeditem.put()\", \"#else\", \"#    print(\\\"Ignoring existing feeditem\\\")\", \"# Only update feed if any new items were retrieved\", \"if any_new_items\", \"feeds = FeedModel.query((FeedModel.link == url))\", \"for feed in feeds\", \"# Update fields\", \"feed.timestamp = timestamp\", \"feed.description = f.get(\\\"description\\\", \\\"\\\")\", \"# Don't override user's own title\", \"#feed.title = f.title\", \"feed.published = datetuple_to_string(f.get(\\\"published_parsed\\\", None))\", \"feed.etag = rss.get(\\\"etag\\\", None)\", \"feed.modified = rss.get(\\\"modified\\\", None)\", \"# Save\", \"print(\\\"Cached:\\\", feed.title)\", \"# TODO use put_multi or such\", \"feed.put()\", \"def datetuple_to_string(tup)\", \"'''\", \"Convert a Python date tuple, as returned by feedparser's published_parsed,\", \"to a ISO date string. If None, returns None.\", \"Example\", \">>> datetuple_to_string(None)\", \">>> datetuple_to_string((2009, 3, 23, 13, 6, 34, 0, 82, 0))\", \"'2009-03-23T13:06:34'\", \"'''\", \"if tup is None\", \"return None\", \"return datetime_to_string(datetime(*tup[:6]))\"]"}, {"project": "Feeder", "commit_id": "ae4b12b61b852971b4e640318a36117420c7e780", "time_stamp": 1410370307, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 19, "ld": 16, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_FEEDFLARE = re.compile(r\\\"(<|&lt;)div\\\\s+?class=('|\\\\\\\")feedflare('|\\\\\\\").*?/div(>|&gt;)\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \"re.IGNORECASE | re.DOTALL)\", \">>> strip_bloat('<br/>\\\\\\\\n<br/>')\", \">>> strip_bloat('<br>\\\\\\\\n<br>\\\\\\\\n<br>')\", \">>> strip_bloat('<p>\\\\\\\\n<br>')\", \">>> strip_bloat('<p> \\\\\\\\n </p>')\", \">>> strip_bloat('<div class=\\\"feedflare\\\">\\\\\\\\nblabla</div>')\", \"''\", \">>> strip_bloat(\\\"<div class='feedflare'>\\\\\\\\nblabla</div>\\\")\", \">>> strip_bloat('<a href=\\\"http://feedsportal.com\\\">\\\\\\\\nbla</a>')\"]"}, {"project": "Feeder", "commit_id": "71c8373ceab0a22ed17db5e490aa08abc060fff2", "time_stamp": 1410382207, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"05d48caec6efd83309b7ef1eaccdc2abc117d477\", \"cf711fe0d9a390ce5aec8cded16610b3f4b8159c\", \"10d43c7d3b46dedee82bd576feb5adbf74df54b5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"270\", \"271\", \"272\", \"273\", \"274\", \"275\", \"276\", \"277\", \"278\", \"279\", \"280\", \"281\", \"282\", \"283\", \"284\", \"286\", \"287\", \"288\", \"289\", \"290\", \"420\"], \"app/src/main/java/com/nononsenseapps/feeder/model/VideoTagHunter.java\": [\"22\"], \"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"364\", \"365\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ClickableImageSpan.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTagHunter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/VideoTagHunter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/LinkedTextView.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/youtube_icon.png"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}], "find_interval": 1279960, "la": 313, "ld": 65, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "a7b8899feb84a769baa5aa577a318cd9329135ae", "time_stamp": 1410896427, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/cleaner.py"}], "find_interval": null, "la": 17, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# Some feeds use content, some description.\", \"# Take the longest.\", \"d = item.get(\\\"description\\\", \\\"\\\")\", \"try\", \"c = item.get(\\\"content\\\", None)\", \"# Can be many content, with different types\", \"# This might fail for some\", \"c = c[0].value\", \"except\", \"c = \\\"\\\"\", \"# Use d\", \"if len(c) > len(d)\", \"d = c\", \"clean_description = strip_bloat(d)\"]"}, {"project": "Feeder", "commit_id": "242c83c4ac45f7182944f6dfa964e0097284c87e", "time_stamp": 1410972226, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"10d43c7d3b46dedee82bd576feb5adbf74df54b5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java\": [\"170\", \"178\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": 5113542, "la": 129, "ld": 49, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "e34c33b9ff27b1325c198b7986a8cec8efe4d2d7", "time_stamp": 1411634244, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": null, "la": 2, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"temps = (item.plainsnippet == null || item.plainsnippet.isEmpty()) ?\", \"item.plaintitle\"]"}, {"project": "Feeder", "commit_id": "0590f04f49ee873de88062a0536303729fad7a46", "time_stamp": 1411638183, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/app.py"}, {"type": "add", "modified_path": "server/storage.py"}, {"type": "modify", "modified_path": "server/tasks.py"}], "find_interval": null, "la": 115, "ld": 101, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from storage import (get_distinct_feeds, get_feeditems, get_feed_with_items,\", \"put_feed, delete_feeds, put_gcm)\", \"urls = get_distinct_feeds(user=current_user)\", \"if not \\\"://\\\" in url\", \"url = \\\"http://\\\" + url\", \"print(\\\"Fetching from db\\\")\", \"feed = get_feed_with_items(url, request.min_timestamp)\", \"if feed is not None\", \"feeds.append(feed)\", \"feed = put_feed(request.link, current_user, request.title,\", \"request.description, request.tag)\", \"taskqueue.add(url='/tasks/cache', params={'url': request.link})\", \"return feed\", \"delete_feeds(request.urls, current_user)\", \"put_gcm(request.regid, current_user)\", \"'''\", \"This file wraps the storage.\", \"'''\", \"from models import (FeedModel, FeedItemModel,\", \"FeedModelKey, FeedItemKey,\", \"GCMRegIdModel, GCMRegIdModelKey)\", \"from messages import (feed_from_model,\", \"feeditem_from_model)\", \"from util import (parse_timestamp, datetime_now, domain_from_url)\", \"def get_feedurls(user=None, distinct=False)\", \"'''\", \"Return a user's distinct feeds. If no user is specified,\", \"returns all distinct feeds.\", \"'''\", \"if user is None\", \"feeds = FeedModel.query(projection=[\\\"link\\\", \\\"etag\\\", \\\"modified\\\"],\", \"distinct=distinct)\", \"else\", \"feeds = FeedModel.query(FeedModel.user == user)\", \"return [f.link for f in feeds]\", \"def get_feed(url)\", \"result = None\", \"feeds = FeedModel.query(FeedModel.link == url)\", \"for feed in feeds\", \"result = feed\", \"break\", \"return result\", \"def get_feeditems(url, min_timestamp=None)\", \"entries = FeedItemModel.query(FeedItemModel.feed_link == url)\", \"entries.order(FeedItemModel.published)\", \"# filter on timestamps\", \"if (min_timestamp is not None and\", \"parse_timestamp(min_timestamp) is not None)\", \"entries = entries.filter(FeedItemModel.timestamp >\\\\\", \"parse_timestamp(min_timestamp))\", \"# Get individual items\", \"items = []\", \"for item in entries\", \"print(\\\"Iterating an item:\\\", item.title)\", \"items.append(feeditem_from_model(item))\", \"return items\", \"def get_feed_with_items(url, min_timestamp=None)\", \"feed = get_feed(url)\", \"if feed is None\", \"return None\", \"items = get_feeditems(url, min_timestamp)\", \"return feed_from_model(feed, items)\", \"def put_feed(url, user, title=None, description=None, tag=None)\", \"if title is None\", \"title = domain_from_url(url)\", \"if description is None\", \"description = \\\"\\\"\", \"feed = FeedModel(key=FeedModelKey(user, url),\", \"user=user,\", \"timestamp=datetime_now(),\", \"title=title,\", \"description=description,\", \"link=url,\", \"tag=tag)\", \"feed.put()\", \"return feed_from_model(feed)\", \"def delete_feeds(urls, user)\", \"for url in urls\", \"FeedModelKey(user, url).delete()\", \"def put_gcm(regid, user)\", \"device = GCMRegIdModel(key=GCMRegIdModelKey(regid),\", \"regid=regid,\", \"userid=user)\", \"# And save it\", \"device.put()\", \"from storage import (get_feed, get_feedurls)\", \"urls = get_feedurls(distinct=True)\", \"# Make sure it exists in feeds list\", \"feed = get_feed(url)\", \"if feed is not None\", \"self._cache_feed(url, feed.etag, feed.modified)\"]"}, {"project": "Feeder", "commit_id": "05d48caec6efd83309b7ef1eaccdc2abc117d477", "time_stamp": 1411662167, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"71c8373ceab0a22ed17db5e490aa08abc060fff2\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/VideoTagHunter.java"}], "find_interval": null, "la": 31, "ld": 22, "fix_file_num": 2, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"270\", \"271\", \"272\", \"273\", \"274\", \"275\", \"276\", \"277\", \"278\", \"279\", \"280\", \"281\", \"282\", \"283\", \"284\", \"286\", \"287\", \"288\", \"289\", \"290\"], \"app/src/main/java/com/nononsenseapps/feeder/model/VideoTagHunter.java\": [\"22\"]}", "rules": null, "clean_lines": "[\"try {\", \"ClickableImageSpan span = new ClickableImageSpan(getYoutubeThumb(video)) {\", \"@Override\", \"public void onClick() {\", \"Log.d(\\\"YOUTUBECLICK\\\", \\\"Url: \\\" + video.link);\", \"final Intent i =\", \"new Intent(Intent.ACTION_VIEW, Uri.parse(video.link));\", \"i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\", \"getContext().startActivity(i);\", \"}\", \"};\", \"int len = text.length();\", \"text.append(\\\"\\\\uFFFC\\\");\", \"text.setSpan(span, len, text.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"text.append(\\\"\\\\n\\\");\", \"start(text, new Italic());\", \"text.append(\\\"Touch to play video\\\");\", \"end(text, Italic.class, new StyleSpan(Typeface.ITALIC));\", \"text.append(\\\"\\\\n\\\\n\\\");\", \"} catch (NullPointerException e) {\", \"}\", \"throw new NullPointerException(e.getLocalizedMessage());\", \"\\\".com/embed/\\\" \", \"\\\"([^\\\\\\\\?/]*)\\\");\"]"}, {"project": "Feeder", "commit_id": "d50fb821e48c6aa9716f586aadc5c2befa2d0204", "time_stamp": 1411737625, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "build.gradle"}, {"type": "modify", "modified_path": "gradle/wrapper/gradle-wrapper.properties"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "2b19f436d0a8836116160bcfe5064dc3f5e3efa9", "time_stamp": 1412256292, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/requirements.txt"}, {"type": "add", "modified_path": "server/rest.py"}], "find_interval": null, "la": 113, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"'''\", \"The REST-API of Feeder\", \"'''\", \"from flask import Flask\", \"from flask.ext.restful import (Resource, Api, reqparse, fields,\", \"marshal_with, marshal_with_field)\", \"# Want a boolean class\", \"class fieldbool(fields.Raw)\", \"def format(self, value)\", \"if value\", \"return 'true'\", \"else\", \"return 'false'\", \"# Set up the web app\", \"app = Flask(__name__)\", \"api = Api(app)\", \"# Set up argument parsers\", \"## Listing feeds\", \"getparser = reqparse.RequestParser()\", \"getparser.add_argument('min_timestamp', type=str, required=False,\", \"help='Timestamp to filter on (only newer)')\", \"getparser.add_argument('link', type=str, required=False, action='append',\", \"help='Url(s) to limit query for')\", \"## Adding feed\", \"postparser = reqparse.RequestParser()\", \"postparser.add_argument('link', type=str, required=True,\", \"help='URL to the feed')\", \"postparser.add_argument('title', type=str, required=False,\", \"help='Title of feed')\", \"postparser.add_argument('tag', type=str, required=False,\", \"help='Tag to categorize feed under')\", \"## Deleting a feed\", \"deleteparser = reqparse.RequestParser()\", \"deleteparser.add_argument('link', type=str, required=True,\", \"help='URL of the feed to delete')\", \"# Set up return value mashers\", \"## Get\", \"### Single feed item\", \"feeditem_fields = {\", \"'title': fields.String,\", \"'description': fields.String,\", \"'link': fields.String,\", \"'title_stripped': fields.String,\", \"'snippet': fields.String,\", \"'published': fields.DateTime,\", \"'author': fields.String,\", \"'comments': fields.String,\", \"'enclosure': fields.String,\", \"'tags': fields.List(fields.String),\", \"'read': fieldbool(default=False)\", \"}\", \"### Single feed with a possible list of items\", \"feed_fields = {\", \"'link': fields.String,\", \"'title': fields.String,\", \"'description': fields.String,\", \"'published': fields.DateTime,\", \"'tag': fields.String,\", \"'timestamp': fields.DateTime,\", \"'items': fields.List(fields.Nested(feeditem_fields))\", \"}\", \"class Feeds(Resource)\", \"'''\", \"This class is the entire REST-interface for dealing with feeds.\", \"'''\", \"@marshal_with_field(fields.List(fields.Nested(feed_fields)))\", \"def get(self)\", \"'''Return all feeds'''\", \"args = getparser.parse_args()\", \"# test\", \"urls = []\", \"if args['url'] is not None\", \"urls = [u for u in args['url']]\", \"feed = dict(link=\\\"google.com\\\", title=\\\"bob\\\",\", \"description=args['min_timestamp'],\", \"items=[dict(link=u) for u in urls])\", \"return [feed]\", \"@marshal_with(feed_fields)\", \"def post(self)\", \"'''Add new feed'''\", \"args = postparser.parse_args()\", \"# test\", \"print(\\\"Feed to add:\\\", args.link)\", \"return dict(title='yay', link=args.link, description='woo', items=None)\", \"def delete(self)\", \"'''Delete a feed'''\", \"args = deleteparser.parse_args()\", \"# test\", \"print(\\\"Deleting\\\", args.link)\", \"return None, 204\", \"# Connect with API URLs\", \"api.add_resource(Feeds, '/feeds', '/feeds/<string:link>')\", \"if __name__ == '__main__'\", \"app.run(debug=True)\"]"}, {"project": "Feeder", "commit_id": "57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2", "time_stamp": 1412280792, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"feb9e823ad2931e16a62bf5e4931054dbbd99e43\", \"c8a31ef776159508170f28168b08ce4def6904a1\", \"61957a49617d912819ce393b706fe80df0c264b7\", \"1785883e1c88bc26e0a97973534bc7cfa957bcbd\", \"1b01d567a7b92fd0812ddbf70e7f46435a17c292\", \"a1279616ce9685d06d04e658e907ecff2fdd72f2\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"133\", \"159\", \"160\", \"170\", \"171\", \"172\", \"180\", \"151\", \"153\", \"10\"], \"server/flaskapp/feeder/database.py\": [\"14\"], \"server/flaskapp/feeder/models.py\": [\"77\", \"115\", \"57\", \"58\", \"95\"], \"server/flaskapp/feeder/__init__.py\": [\"13\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "rename", "modified_path": "server/Makefile", "current_path": "server/appengine/Makefile"}, {"type": "rename", "modified_path": "server/app.py", "current_path": "server/appengine/app.py"}, {"type": "rename", "modified_path": "server/app.yaml", "current_path": "server/appengine/app.yaml"}, {"type": "rename", "modified_path": "server/app_gcm.py", "current_path": "server/appengine/app_gcm.py"}, {"type": "rename", "modified_path": "server/cleaner.py", "current_path": "server/appengine/cleaner.py"}, {"type": "rename", "modified_path": "server/cron.yaml", "current_path": "server/appengine/cron.yaml"}, {"type": "rename", "modified_path": "server/endpoints/LICENSE", "current_path": "server/appengine/endpoints/LICENSE"}, {"type": "rename", "modified_path": "server/endpoints/__init__.py", "current_path": "server/appengine/endpoints/__init__.py"}, {"type": "rename", "modified_path": "server/endpoints/api_backend.py", "current_path": "server/appengine/endpoints/api_backend.py"}, {"type": "rename", "modified_path": "server/endpoints/api_backend_service.py", "current_path": "server/appengine/endpoints/api_backend_service.py"}, {"type": "rename", "modified_path": "server/endpoints/api_config.py", "current_path": "server/appengine/endpoints/api_config.py"}, {"type": "rename", "modified_path": "server/endpoints/api_exceptions.py", "current_path": "server/appengine/endpoints/api_exceptions.py"}, {"type": "rename", "modified_path": "server/endpoints/apiserving.py", "current_path": "server/appengine/endpoints/apiserving.py"}, {"type": "rename", "modified_path": "server/endpoints/message_parser.py", "current_path": "server/appengine/endpoints/message_parser.py"}, {"type": "rename", "modified_path": "server/endpoints/protojson.py", "current_path": "server/appengine/endpoints/protojson.py"}, {"type": "rename", "modified_path": "server/endpoints/users_id_token.py", "current_path": "server/appengine/endpoints/users_id_token.py"}, {"type": "rename", "modified_path": "server/feedparser.py", "current_path": "server/appengine/feedparser.py"}, {"type": "rename", "modified_path": "server/gcm/__init__.py", "current_path": "server/appengine/gcm/__init__.py"}, {"type": "rename", "modified_path": "server/gcm/gcm.py", "current_path": "server/appengine/gcm/gcm.py"}, {"type": "rename", "modified_path": "server/gcm/test.py", "current_path": "server/appengine/gcm/test.py"}, {"type": "rename", "modified_path": "server/index.yaml", "current_path": "server/appengine/index.yaml"}, {"type": "rename", "modified_path": "server/messages.py", "current_path": "server/appengine/messages.py"}, {"type": "rename", "modified_path": "server/models.py", "current_path": "server/appengine/models.py"}, {"type": "rename", "modified_path": "server/storage.py", "current_path": "server/appengine/storage.py"}, {"type": "rename", "modified_path": "server/tasks.py", "current_path": "server/appengine/tasks.py"}, {"type": "rename", "modified_path": "server/util.py", "current_path": "server/appengine/util.py"}, {"type": "add", "modified_path": "server/flaskapp/createdb.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/database.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/util.py"}, {"type": "add", "modified_path": "server/flaskapp/feedparser.py"}, {"type": "rename", "modified_path": "server/requirements.txt", "current_path": "server/flaskapp/requirements.txt"}, {"type": "add", "modified_path": "server/flaskapp/runserver.py"}, {"type": "delete", "modified_path": "server/rest.py"}], "find_interval": 393668, "la": 4528, "ld": 113, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "a05388d0870ece287e998544964a8bacf7e7e48e", "time_stamp": 1412351507, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": true, "fix_by": "[\"feb9e823ad2931e16a62bf5e4931054dbbd99e43\", \"61957a49617d912819ce393b706fe80df0c264b7\", \"6a865e1ebecd6f034d6ec2db41e18e0c334e33cb\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"7\"], \"server/flaskapp/feeder/tests.py\": [\"25\", \"107\", \"108\", \"109\", \"110\", \"112\", \"113\", \"115\", \"116\", \"118\", \"120\", \"124\"], \"server/flaskapp/feeder/cleaner.py\": [\"95\", \"104\", \"105\", \"106\", \"107\", \"108\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/feeder/cleaner.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/sync.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/tests.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/util.py"}, {"type": "modify", "modified_path": "server/flaskapp/feedparser.py"}], "find_interval": 322953, "la": 845, "ld": 397, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "fadaa1e03955288ccd1998bbac0021cf62f01d7a", "time_stamp": 1412375268, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": true, "fix_by": "[\"61957a49617d912819ce393b706fe80df0c264b7\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/tests.py\": [\"106\", \"122\", \"124\", \"126\", \"128\", \"129\", \"131\", \"132\", \"134\", \"136\", \"138\", \"145\", \"146\", \"155\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/tests.py"}], "find_interval": 555897, "la": 58, "ld": 21, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "1fae032b9c909afc5b1950fe53e08b922f225ce1", "time_stamp": 1412413097, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"10d43c7d3b46dedee82bd576feb5adbf74df54b5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"97\", \"101\", \"106\"], \"app/src/main/java/com/nononsenseapps/text/HtmlToSpannedConverter.java\": [\"238\", \"239\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/libs/org.apache.servicemix.bundles.tagsoup-1.2_1.jar"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/text/Html.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/text/HtmlToSpannedConverter.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/text/VideoTagHunter.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/unknown_image.png"}], "find_interval": 3672671, "la": 1024, "ld": 337, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "10529046ce901238f2a8462702bb76cb70ccc7cb", "time_stamp": 1412544326, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"feb9e823ad2931e16a62bf5e4931054dbbd99e43\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"98\", \"126\", \"147\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/cleaner.py"}, {"type": "add", "modified_path": "server/flaskapp/feeder/gauth.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/util.py"}, {"type": "modify", "modified_path": "server/flaskapp/requirements.txt"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}, {"type": "add", "modified_path": "server/flaskapp/runsync.py"}], "find_interval": 130134, "la": 115, "ld": 30, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "c8254315774d342f4773a889c8e1e458ecbbf5d3", "time_stamp": 1412544338, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 39, "ld": 48, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"api.deleteFeed(link);\", \"Log.d(TAG, \\\"Using min_timestamp: \\\" + RssContentProvider.GetLatestTimestamp(this));\", \"List<BackendAPIClient.Feed> feeds = api.getFeeds(RssContentProvider.GetLatestTimestamp(this));\", \"if (feeds == null) {\", \"Log.d(TAG, \\\"Number of feeds to sync: \\\" + feeds.size());\", \"for (BackendAPIClient.Feed feed : feeds) {\", \"itemSQL.imageurl = item.image;\", \"\\\"http://192.168.1.17:5000\\\";\", \"@GET(\\\"/feeds\\\")\", \"List<Feed> getFeeds(@Query(\\\"min_timestamp\\\") String min_timestamp);\", \"@POST(\\\"/feeds\\\")\", \"@DELETE(\\\"/feeds/{link}\\\")\", \"VoidResponse deleteFeed(@Path(\\\"link\\\") String link);\", \"public String image;\", \"public String enclosure;\"]"}, {"project": "Feeder", "commit_id": "9d091aac746759aa27a8c390ded154ac5e8440ea", "time_stamp": 1412670164, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/appengine/README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "2053590e3ea4cc72e333791eab30b29f90039a8f", "time_stamp": 1412671203, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 44, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"'''\", \"Usage\", \"python runserver.py [-d][-h 127.0.0.1][-p 5000]\", \"Example usage with uWSG\", \"uwsgi --socket 127.0.0.1:8080 -w runserver:app\", \"This small script runs the flask REST app. For development\", \"it is possible to run the app directly\", \"python runserver.py\", \"It might be sensible to run it with the debug switch: -d.\", \"This reloads the server when it detects a change in the code.\", \"Never use the debug switch in production!\", \"The arguments are as follows\", \"-d - enable debug mode. Default is False.\", \"-h - specify the listening address. Use 0.0.0.0 to listen on all.\", \"-p - specify the listening port. Defaults to 5000.\", \"In production it might be sensible to run this with something like\", \"uwsgi behind nginx.\", \"'''\", \"if __name__ == '__main__'\", \"kw = {}\", \"args = sys.argv[1:]\", \"if '--help' in args\", \"exit(__doc__)\", \"if '-d' in args\", \"kw['debug'] = True\", \"if '-h' in args\", \"i = args.index('-h')\", \"kw['host'] = args[i + 1]\", \"if '-p' in args\", \"i = args.index('-p')\", \"kw['port'] = args[i + 1]\", \"app.run(**kw)\"]"}, {"project": "Feeder", "commit_id": "5ff07ecaaaf5656d6b9856b0bbc9426ab6f5ab9a", "time_stamp": 1412672516, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/README.md"}, {"type": "modify", "modified_path": "server/flaskapp/createdb.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}, {"type": "modify", "modified_path": "server/flaskapp/runsync.py"}], "find_interval": null, "la": 22, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"'''\", \"Creates the database used by the app.\", \"Edit the path in feeder/database.py to change\", \"where the database is created.\", \"By default it is\", \"/tmp/test.db.\", \"'''\", \"# -*- coding: utf-8 -*-\", \"# -*- coding: utf-8 -*-\", \"'''\", \"Synchronizes all known RSS feeds. This should probably be\", \"run as a cronscript\", \"Run\", \"crontab -e\", \"Then enter a line like this (syncs every 10 minutes)\", \"'''\"]"}, {"project": "Feeder", "commit_id": "46261ec269aa4e8df63fc94c6aac4738bb8af77b", "time_stamp": 1412672616, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "b31d79fb26c79192a5c700f5dda26aa248589845", "time_stamp": 1412672732, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "feb9e823ad2931e16a62bf5e4931054dbbd99e43", "time_stamp": 1412674460, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": true, "fix_by": "[\"c8a31ef776159508170f28168b08ce4def6904a1\", \"0bc15e84a42ce89ceaeb86325f0c1b52bb877740\"]", "fixes": "[\"a05388d0870ece287e998544964a8bacf7e7e48e\", \"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\", \"10529046ce901238f2a8462702bb76cb70ccc7cb\"]", "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"7\", \"134\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 206522, "la": 11, "ld": 13, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/rest.py\": [\"7\", \"97\", \"98\", \"124\", \"125\", \"126\", \"135\", \"136\", \"137\", \"146\", \"147\"]}", "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "c5e2c9a8994a90672b8c22a62fd563a230367845", "time_stamp": 1412758886, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 3, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# If published is none, use timestamp\", \"if feeditem.published is None\", \"feeditem.published = timestamp\"]"}, {"project": "Feeder", "commit_id": "8120ce311ae971d982b2d0203eb46b5c9f940203", "time_stamp": 1412783999, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"568362f18fcdfd0b210c0e3f69150f10dd92efd9\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java"}], "find_interval": null, "la": 8, "ld": 9, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java\": [\"103\", \"104\", \"105\", \"107\", \"124\", \"125\", \"126\"]}", "rules": null, "clean_lines": "[\"itemSQL.enclosurelink = item.enclosure;\"]"}, {"project": "Feeder", "commit_id": "09a862839fd302009e944eae1fb456af5f874152", "time_stamp": 1412784037, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 4, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (mRssItem.author == null && mRssItem.getPubDate() != null) {\", \"} else if (mRssItem.getPubDate() != null) {\", \"} else {\", \"mAuthorTextView.setVisibility(View.GONE);\"]"}, {"project": "Feeder", "commit_id": "4b1b71c49244041163c9e7b268c10575cbc1e93b", "time_stamp": 1412804660, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"d17c47a2eee12bb7d578e6de50933fe49cd22b5e\", \"c6c0bd97e836bc1b5f50c46a43f21e9e517d5034\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java\": [\"158\"], \"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java\": [\"116\", \"118\", \"119\", \"120\", \"121\", \"122\", \"123\", \"124\", \"125\", \"126\", \"128\", \"129\", \"130\", \"131\", \"132\", \"133\", \"134\", \"135\", \"136\", \"137\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "rename", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/SyncHelper.java", "current_path": "app/src/main/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapterService.java"}, {"type": "rename", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncService.java", "current_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "add", "modified_path": "app/src/main/res/xml/syncadapter.xml"}], "find_interval": 55042, "la": 598, "ld": 231, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "cf711fe0d9a390ce5aec8cded16610b3f4b8159c", "time_stamp": 1412808570, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"71c8373ceab0a22ed17db5e490aa08abc060fff2\", \"871a39acb8a504236c94660db9d784b0e33753fd\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 5, "ld": 4, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"369\", \"370\", \"454\", \"502\"]}", "rules": null, "clean_lines": "[\"Uri.parse(rssItem.enclosurelink != null ?\", \"rssItem.enclosurelink\", \"rssItem.link)));\"]"}, {"project": "Feeder", "commit_id": "f73ba8d623b48a0fcce39a3c167eef76fdc02410", "time_stamp": 1412841034, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"d17c47a2eee12bb7d578e6de50933fe49cd22b5e\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java\": [\"156\", \"157\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}], "find_interval": 18668, "la": 7, "ld": 7, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "d17c47a2eee12bb7d578e6de50933fe49cd22b5e", "time_stamp": 1412859702, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"4b1b71c49244041163c9e7b268c10575cbc1e93b\", \"f73ba8d623b48a0fcce39a3c167eef76fdc02410\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}], "find_interval": null, "la": 6, "ld": 6, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java\": [\"153\", \"156\", \"157\"]}", "rules": null, "clean_lines": "[\"ContentResolver.setSyncAutomatically(account,\", \"RssContentProvider.AUTHORITY, true);\", \"Bundle.EMPTY,\", \"60L * 60L);\", \"final Bundle settingsBundle = new Bundle();\"]"}, {"project": "Feeder", "commit_id": "c6c0bd97e836bc1b5f50c46a43f21e9e517d5034", "time_stamp": 1412859706, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"4b1b71c49244041163c9e7b268c10575cbc1e93b\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}], "find_interval": null, "la": 28, "ld": 23, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java\": [\"116\", \"118\", \"119\", \"120\", \"121\", \"122\", \"123\", \"124\", \"125\", \"126\", \"128\", \"129\", \"130\", \"131\", \"132\", \"133\", \"134\", \"135\", \"136\", \"137\"]}", "rules": null, "clean_lines": "[\"if (feedId < 1) {\", \"itemOp.withValueBackReference(FeedItemSQL.COL_FEED, feedIndex);\", \"} else {\", \"itemOp.withValue(FeedItemSQL.COL_FEED, feedId);\", \"}\", \"itemOp.withValue(FeedItemSQL.COL_LINK, item.link)\", \".withValue(FeedItemSQL.COL_FEEDTITLE, feed.title)\", \".withValue(FeedItemSQL.COL_TAG,\", \"feed.tag == null ? \\\"\\\" : feed.tag)\", \".withValue(FeedItemSQL.COL_IMAGEURL, item.image)\", \".withValue(FeedItemSQL.COL_ENCLOSURELINK, item.enclosure)\", \".withValue(FeedItemSQL.COL_AUTHOR, item.author)\", \".withValue(FeedItemSQL.COL_PUBDATE,\", \"FeedItemSQL.getPubDateFromString(item.published))\", \".withValue(FeedItemSQL.COL_TITLE,\", \"item.title == null ? \\\"\\\" : item.title)\", \".withValue(FeedItemSQL.COL_DESCRIPTION,\", \"item.description == null ? \\\"\\\" : item.description)\", \".withValue(FeedItemSQL.COL_PLAINTITLE,\", \"item.title_stripped == null ?\", \"\\\"\\\"\", \"item.title_stripped)\", \".withValue(FeedItemSQL.COL_PLAINSNIPPET,\", \"item.snippet == null ? \\\"\\\" : item.snippet);\"]"}, {"project": "Feeder", "commit_id": "6031b2f9144df935ad4b7421dff44ca83d6129fd", "time_stamp": 1412867670, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"\\\"https://feeder.nononsenseapps.com\\\";\"]"}, {"project": "Feeder", "commit_id": "526c384ff9a8f07554a2ff8ba17658cd560b9e4c", "time_stamp": 1412867701, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}], "find_interval": null, "la": 109, "ld": 28, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String SYNC_BROADCAST =\", \"\\\"feeder.nononsenseapps.RSS_SYNC_BROADCAST\\\";\", \"public static final String SYNC_BROADCAST_IS_ACTIVE = \\\"IS_ACTIVE\\\";\", \"final Intent bcast = new Intent(SYNC_BROADCAST)\", \".putExtra(SYNC_BROADCAST_IS_ACTIVE, true);\", \"LocalBroadcastManager.getInstance(getContext()).sendBroadcast(bcast);\", \"LocalBroadcastManager.getInstance(getContext()).sendBroadcast\", \"(bcast.putExtra(SYNC_BROADCAST_IS_ACTIVE, false));\", \"LocalBroadcastManager.getInstance(getContext()).sendBroadcast\", \"(bcast.putExtra(SYNC_BROADCAST_IS_ACTIVE, false));\", \"syncOrConfig();\", \"public boolean syncOrConfig() {\", \"if (null == AuthHelper.getSavedAccountName(this)) {\", \"DialogFragment dialog = new AccountDialog();\", \"dialog.show(getFragmentManager(), \\\"account_dialog\\\");\", \"return false;\", \"} else {\", \"Toast.makeText(this, \\\"Syncing feeds...\\\",\", \"Toast.LENGTH_SHORT).show();\", \"final Account account = AuthHelper.getSavedAccount(this);\", \"ContentResolver.setIsSyncable(account,\", \"RssContentProvider.AUTHORITY, 1);\", \"ContentResolver.setSyncAutomatically(account,\", \"RssContentProvider.AUTHORITY, true);\", \"ContentResolver.addPeriodicSync(account,\", \"RssContentProvider.AUTHORITY,\", \"Bundle.EMPTY,\", \"60L * 60L);\", \"final Bundle settingsBundle = new Bundle();\", \"settingsBundle.putBoolean(\", \"ContentResolver.SYNC_EXTRAS_MANUAL, true);\", \"settingsBundle.putBoolean(\", \"ContentResolver.SYNC_EXTRAS_EXPEDITED, true);\", \"ContentResolver.requestSync(account,\", \"RssContentProvider.AUTHORITY, settingsBundle);\", \"return true;\", \"}\", \"}\", \"private SwipeRefreshLayout mSwipeRefreshLayout;\", \"private BroadcastReceiver mSyncMsgReceiver = new BroadcastReceiver() {\", \"@Override\", \"public void onReceive(final Context context, final Intent intent) {\", \"mSwipeRefreshLayout.setRefreshing(intent.getBooleanExtra\", \"(RssSyncAdapter.SYNC_BROADCAST_IS_ACTIVE,\", \"false));\", \"}\", \"};\", \"mSwipeRefreshLayout =\", \"(SwipeRefreshLayout) rootView.findViewById(R.id\", \".swipe_container);\", \"mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\", \"@Override\", \"public void onRefresh() {\", \"if (!((FeedActivity) getActivity()).syncOrConfig()) {\", \"mSwipeRefreshLayout.setRefreshing(false);\", \"}\", \"}\", \"});\", \"mSwipeRefreshLayout.setColorSchemeColors(\", \"android.R.color.holo_blue_bright,\", \"android.R.color.holo_green_light,\", \"android.R.color.holo_orange_light,\", \"android.R.color.holo_red_light);\", \"LocalBroadcastManager.getInstance(getActivity()).registerReceiver\", \"(mSyncMsgReceiver,\", \"new IntentFilter(RssSyncAdapter.SYNC_BROADCAST)); // TODO\", \"}\", \"@Override\", \"public void onPause() {\", \"mSwipeRefreshLayout.setRefreshing(false);\", \"LocalBroadcastManager.getInstance(getActivity()).unregisterReceiver\", \"(mSyncMsgReceiver);\", \"super.onPause();\"]"}, {"project": "Feeder", "commit_id": "1c68eb8122f19fc29487ea88af01e0605a7ffcbd", "time_stamp": 1412869315, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_reader.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}], "find_interval": null, "la": 6, "ld": 43, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "c8a31ef776159508170f28168b08ce4def6904a1", "time_stamp": 1412880982, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": true, "fix_by": "[\"1785883e1c88bc26e0a97973534bc7cfa957bcbd\"]", "fixes": "[\"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\", \"feb9e823ad2931e16a62bf5e4931054dbbd99e43\"]", "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"115\", \"116\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/database.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 50896, "la": 17, "ld": 7, "fix_file_num": 3, "bug_fix_files": "{\"server/flaskapp/feeder/database.py\": [\"14\"], \"server/flaskapp/feeder/models.py\": [\"128\", \"154\"], \"server/flaskapp/feeder/rest.py\": [\"7\", \"112\"]}", "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "61957a49617d912819ce393b706fe80df0c264b7", "time_stamp": 1412931165, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\", \"a05388d0870ece287e998544964a8bacf7e7e48e\", \"fadaa1e03955288ccd1998bbac0021cf62f01d7a\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/tests.py"}], "find_interval": null, "la": 51, "ld": 40, "fix_file_num": 2, "bug_fix_files": "{\"server/flaskapp/feeder/models.py\": [\"108\", \"109\", \"147\"], \"server/flaskapp/feeder/tests.py\": [\"25\", \"106\", \"107\", \"108\", \"109\", \"110\", \"112\", \"113\", \"115\", \"116\", \"118\", \"120\", \"122\", \"123\", \"124\", \"126\", \"128\", \"129\", \"131\", \"132\", \"134\", \"136\", \"138\", \"145\", \"146\", \"155\"]}", "rules": null, "clean_lines": "[\"user_id = Column(Integer,\", \"ForeignKey('users.id',\", \"ondelete=\\\"CASCADE\\\",\", \"onupdate=\\\"CASCADE\\\"),\", \"primary_key=True)\", \"feed_id = Column(Integer,\", \"ForeignKey('feeds.id',\", \"ondelete=\\\"CASCADE\\\",\", \"onupdate=\\\"CASCADE\\\"),\", \"primary_key=True)\", \"feed_id = Column(Integer, ForeignKey('feeds.id',\", \"ondelete=\\\"CASCADE\\\",\", \"onupdate=\\\"CASCADE\\\"))\", \"cornu = get_feed(\\\"http://feeds.feedburner.com/cornubot\\\")\", \"#    def test_z_delete_feed_cascade(self)\", \"#        # Deleting a feed should cascade and delete all feeditems\", \"#        feed = Feed.query.first()\", \"#\", \"#        fid = feed.id\", \"#\", \"#        targetlen = FeedItem.query.filter_by(feed_id=fid).count()\", \"#        prev_len = FeedItem.query.count()\", \"#\", \"#        db.session.delete(feed)\", \"#        db.session.commit()\", \"#\", \"#        new_len = FeedItem.query.count()\", \"#\", \"#        self.assertEqual(new_len, prev_len - targetlen)\", \"def test_z_delete_cascades(self)\", \"print(\\\"Before delete\\\")\", \"for f in Feed.query.all()\", \"print(f)\", \"userfeeds = UserFeed.query.count()\", \"self.assertEqual(franks_count, 3)\", \"# Delete user should delete connected user feeds\", \"self.assertEqual(userfeeds - franks_count, UserFeed.query.count())\", \"# There will be some feeds not connected to any users now\", \"print(\\\"After delete\\\")\", \"for f in Feed.query.all()\", \"print(f)\", \"print(\\\"After clean\\\")\", \"for f in Feed.query.all()\", \"print(f)\", \"# He shares one feed with bob, so subtract that\", \"self.assertEqual(Feed.query.count(), feeds_count - franks_count + 1)\"]"}, {"project": "Feeder", "commit_id": "1785883e1c88bc26e0a97973534bc7cfa957bcbd", "time_stamp": 1412931878, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": true, "fix_by": "[\"7890aab75563600a897176b70015adff0096a5a1\"]", "fixes": "[\"c8a31ef776159508170f28168b08ce4def6904a1\", \"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\"]", "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"111\", \"116\", \"118\", \"121\", \"125\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 347, "la": 12, "ld": 5, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/rest.py\": [\"115\", \"116\", \"117\"]}", "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "9dcf788e96fe79e425e0228d93d0bfb99a6b7e2a", "time_stamp": 1412931966, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"7890aab75563600a897176b70015adff0096a5a1\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"122\", \"123\", \"125\", \"126\", \"127\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 259, "la": 5, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "2ce6ef82e216f95cd512eccd32e4c720adbae321", "time_stamp": 1412932020, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"FeedItem.feed_id == f.feed.id).all()\"]"}, {"project": "Feeder", "commit_id": "7890aab75563600a897176b70015adff0096a5a1", "time_stamp": 1412932225, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"1785883e1c88bc26e0a97973534bc7cfa957bcbd\", \"9dcf788e96fe79e425e0228d93d0bfb99a6b7e2a\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 10, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/rest.py\": [\"111\", \"116\", \"118\", \"121\", \"122\", \"123\", \"125\", \"126\", \"127\", \"129\"]}", "rules": null, "clean_lines": "[\"f.items = FeedItem.query.filter(FeedItem.timestamp > dt,\"]"}, {"project": "Feeder", "commit_id": "e84c2f12cd5a669b23b0335591d3e3ab595491b0", "time_stamp": 1412932575, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"dt = None\"]"}, {"project": "Feeder", "commit_id": "f018436611dec758d1d16f355aeebd796f880d3e", "time_stamp": 1412938508, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/sync_progress_indicator.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}, {"type": "modify", "modified_path": "app/src/main/res/xml/syncadapter.xml"}], "find_interval": null, "la": 62, "ld": 63, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"Log.d(TAG, \\\"With timestamp: \\\" + RssContentProvider\", \".GetLatestTimestamp(getContext()));\", \"Log.d(TAG, \\\"Syncing: \\\" + feed.title + \\\"(\\\" + (feed.items\", \"== null ? 0 : feed.items.size()) + \\\")\\\");\", \"private View mSyncIndicator1;\", \"private View mSyncIndicator2;\", \"private boolean isSyncing = false;\", \"private BroadcastReceiver mSyncMsgReceiver = new BroadcastReceiver() {\", \"@Override\", \"public void onReceive(final Context context, final Intent intent) {\", \"isSyncing = intent.getBooleanExtra\", \"(RssSyncAdapter.SYNC_BROADCAST_IS_ACTIVE,\", \"false);\", \"showHideSyncIndicators(isSyncing);\", \"}\", \"};\", \"private void showHideSyncIndicators(final boolean isSyncing) {\", \"mSyncIndicator1.setVisibility(isSyncing ?\", \"View.VISIB\", \"View.GONE);\", \"mSyncIndicator2.setVisibility(isSyncing ?\", \"View.VISIB\", \"View.GONE);\", \"}\", \"mSyncIndicator1 = findViewById(R.id.sync_indicator_1);\", \"mSyncIndicator2 = findViewById(R.id.sync_indicator_2);\", \"}\", \"@Override\", \"public void onResume() {\", \"super.onResume();\", \"LocalBroadcastManager.getInstance(this).registerReceiver\", \"(mSyncMsgReceiver,\", \"new IntentFilter(RssSyncAdapter.SYNC_BROADCAST));\", \"}\", \"@Override\", \"public void onPause() {\", \"LocalBroadcastManager.getInstance(this).unregisterReceiver\", \"(mSyncMsgReceiver);\", \"showHideSyncIndicators(false);\", \"super.onPause();\", \"registerHideableHeaderView(mSyncIndicator2);\", \"showHideSyncIndicators(isSyncing);\"]"}, {"project": "Feeder", "commit_id": "264441325092edaa716256bb67913ce9604d7030", "time_stamp": 1412957379, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}], "find_interval": null, "la": 11, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"syncResult.delayUntil = 60L * 60L;\", \"syncResult.stats.numIoExceptions++;\", \"break;\", \"}\"]"}, {"project": "Feeder", "commit_id": "b3ce4a8ef22b523160e0622b56c05d59b6803094", "time_stamp": 1412964435, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/PendingNetworkSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 195, "ld": 92, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private static final int DATABASE_VERSION = 2;\", \"private static final String DATABASE_NAME = \\\"rssDatabase\\\";\", \"private final Context context;\", \"public DatabaseHandler(Context context) {\", \"super(context, DATABASE_NAME, null, DATABASE_VERSION);\", \"this.context = context.getApplicationContext();\", \"}\", \"@Override\", \"public void onCreate(final SQLiteDatabase sqLiteDatabase) {\", \"sqLiteDatabase.execSQL(FeedSQL.CREATE_TABLE);\", \"sqLiteDatabase.execSQL(FeedItemSQL.CREATE_TABLE);\", \"sqLiteDatabase.execSQL(PendingNetworkSQL.CREATE_TABLE);\", \"}\", \"@Override\", \"public void onUpgrade(final SQLiteDatabase sqLiteDatabase, final int i,\", \"final int i2) {\", \"sqLiteDatabase.execSQL(\\\"DROP TABLE \\\" \", \"PendingNetworkSQL.TABLE_NAME \", \"\\\";\\\");\", \"sqLiteDatabase.execSQL(PendingNetworkSQL.CREATE_TABLE);\", \"public static final String COL_TITLE = \\\"title\\\";\", \"public static final String COL_TAG = \\\"tag\\\";\", \"public static final String[] FIELDS = {COL_ID, COL_TITLE, COL_TYPE,\", \"COL_URL, COL_TAG};\", \"+ COL_TITLE + \\\" TEXT NOT NULL,\\\"\", \"+ COL_TAG + \\\" TEXT,\\\"\", \"public String title = null;\", \"public String tag = null;\", \"final String title,\", \"final String url, final String tag) {\", \"storePending(context, title, url, tag, TYPE_PUT);\", \"storePending(context, \\\"\\\", url, null, TYPE_DELETE);\", \"final String title,\", \"final String url, final String tag, final String type) {\", \"pending.title = title;\", \"pending.tag = tag;\", \"this.title = cursor.getString(1);\", \"this.type = cursor.getString(2);\", \"this.url = cursor.getString(3);\", \"this.tag = cursor.getString(4);\", \"values.put(COL_TITLE, title);\", \"Util.PutNullable(values, COL_TAG, tag);\", \"PendingNetworkSQL.addMatcherUris(sURIMatcher);\", \"final ArrayList<ContentProviderOperation> operations =\", \"new ArrayList<ContentProviderOperation>();\", \"RssSyncHelper.syncPending(getContext(), token, operations);\", \"}\", \"if (!operations.isEmpty()) {\", \"public static void uploadFeedAsync(Context context, long id, String title,\", \"public static void deleteFeedAsync(Context context, String link) {\", \"public static void syncPending(final Context context,\", \"final String token,\", \"final ArrayList<ContentProviderOperation> operations) {\", \"if (token == null) {\", \"throw new NullPointerException(\\\"Token was null\\\");\", \"}\", \"Cursor c = null;\", \"try {\", \"c = context.getContentResolver()\", \".query(PendingNetworkSQL.URI, PendingNetworkSQL.FIELDS,\", \"null, null, null);\", \"while (c != null && c.moveToNext()) {\", \"PendingNetworkSQL pending = new PendingNetworkSQL(c);\", \"boolean success = false;\", \"if (pending.isDelete()) {\", \"try {\", \"deleteFeed(context, token, pending.url);\", \"success = true;\", \"} catch (RetrofitError e) {\", \"if (e.getResponse() != null && e.getResponse()\", \".getStatus() == 404) {\", \"success = true;\", \"} else {\", \"throw e;\", \"}\", \"}\", \"} else if (pending.isPut()) {\", \"putFeed(context, token, pending.title, pending.url,\", \"pending.tag);\", \"success = true;\", \"}\", \"if (success) {\", \"operations.add(ContentProviderOperation.newDelete(Uri.withAppendedPath\", \"(PendingNetworkSQL.URI,\", \"Long.toString(pending.id))).build());\", \"}\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"}\", \"final String token = AuthHelper.getAuthToken(this);\", \"boolean storePending = token == null;\", \"try {\", \"if (token != null) {\", \"putFeed(this, token,\", \"intent.getStringExtra(\\\"title\\\"),\", \"intent.getStringExtra(\\\"link\\\"),\", \"intent.getStringExtra(\\\"tag\\\"));\", \"}\", \"} catch (RetrofitError e) {\", \"Log.e(TAG, \\\"put error: \\\" + e.getMessage());\", \"storePending = true;\", \"}\", \"if (storePending) {\", \"Log.d(TAG, \\\"Storing put for later...\\\");\", \"PendingNetworkSQL.storePut(this, intent.getStringExtra(\\\"title\\\"),\", \"intent.getStringExtra(\\\"link\\\"),\", \"intent.getStringExtra(\\\"tag\\\"));\", \"}\", \"try {\", \"if (token != null) {\", \"deleteFeed(this, token, intent.getStringExtra(\\\"link\\\"));\", \"}\", \"} catch (RetrofitError e) {\", \"Log.e(TAG, \\\"put error: \\\" + e.getMessage());\", \"if (e.getResponse() == null ||\", \"e.getResponse().getStatus() != 404) {\", \"storePending = true;\", \"}\", \"}\", \"if (storePending) {\", \"Log.d(TAG, \\\"Storing delete for later...\\\");\", \"PendingNetworkSQL.storeDelete(this,\", \"intent.getStringExtra(\\\"link\\\"));\", \"}\", \"protected static void putFeed(final Context context,\", \"final String token,\", \"final String title,\", \"final String link,\", \"final String tag) throws RetrofitError {\", \"if (token == null) {\", \"throw new NullPointerException(\\\"No token\\\");\", \"}\", \"BackendAPIClient.BackendAPI api = BackendAPIClient.GetBackendAPI(token);\", \"BackendAPIClient.FeedMessage f = new BackendAPIClient.FeedMessage();\", \"f.title = title;\", \"f.link = link;\", \"if (tag != null && !tag.isEmpty()) {\", \"f.tag = tag;\", \"api.putFeed(f);\", \"protected static void deleteFeed(final Context context,\", \"final String token,\", \"final String link) throws RetrofitError {\", \"if (token == null) {\", \"throw new NullPointerException(\\\"Token was null\\\");\", \"}\", \"api.deleteFeed(link);\", \"Button addButton = (Button) findViewById(R.id.add_button);\", \"addButton\", \"RssSyncHelper.uploadFeedAsync(EditFeedActivity.this, id,\", \"if (id > 0) {\", \"mTextUrl.setVisibility(View.GONE);\", \"mTextSearch.setVisibility(View.GONE);\", \"addButton.setText(getString(R.string.save));\", \"}\", \"RssSyncHelper.deleteFeedAsync(getActivity(), url);\"]"}, {"project": "Feeder", "commit_id": "858d3d37cdf704a448695df8e6c2a6dae90d55f4", "time_stamp": 1412977135, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/empty_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/empty_feeds_at_all.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 56, "ld": 9, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public void openNavDrawer() {\", \"mDrawerLayout.openDrawer(Gravity.START);\", \"}\", \"private View mEmptyAddFeed;\", \"View.OnClickListener onAddListener = new View.OnClickListener() {\", \"if (view == mAddButton) {\", \"i.putExtra(EditFeedActivity.SHOULD_FINISH_BACK, true);\", \"ActivityOptions options = ActivityOptions\", \".makeScaleUpAnimation(view, 0, 0, view.getWidth(),\", \"view.getHeight());\", \"startActivity(i, options.toBundle());\", \"} else {\", \"startActivity(i);\", \"}\", \"};\", \"mEmptyAddFeed = findViewById(R.id.empty_add_feed);\", \"((TextView) mEmptyAddFeed).setText(android.text.Html.fromHtml\", \"(getString(R.string.empty_no_feeds)));\", \"mEmptyAddFeed.setVisibility(mFragment == null ? View.VISIBLE : View.GONE);\", \"mEmptyAddFeed.setOnClickListener(onAddListener);\", \"mAddButton = findViewById(R.id.add_button);\", \"mAddButton.setOnClickListener(onAddListener);\", \"private View mEmptyView;\", \"private View mEmptyAddFeed;\", \"private View mEmptyOpenFeeds;\", \"mEmptyView = rootView.findViewById(android.R.id.empty);\", \"mEmptyAddFeed = mEmptyView.findViewById(R.id.empty_add_feed);\", \"((TextView) mEmptyAddFeed).setText(android.text.Html.fromHtml\", \"(getString(R.string.empty_feed_add)));\", \"mEmptyOpenFeeds = mEmptyView.findViewById(R.id.empty_open_feeds);\", \"((TextView) mEmptyOpenFeeds).setText(android.text.Html.fromHtml\", \"(getString(R.string.empty_feed_open)));\", \"mEmptyAddFeed.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View v) {\", \"startActivity(new Intent(getActivity(),\", \"EditFeedActivity.class));\", \"}\", \"});\", \"mEmptyOpenFeeds.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View v) {\", \"((BaseActivity) getActivity()).openNavDrawer();\", \"}\", \"});\", \"mRecyclerView.setEmptyView(mEmptyView);\"]"}, {"project": "Feeder", "commit_id": "8ab763a6f707ac614376054d6aeacd607aba4f82", "time_stamp": 1412979313, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/empty_feeds_at_all.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 76, "ld": 33, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static void RequestSync(final Context context) {\", \"final Account account = AuthHelper.getSavedAccount(context);\", \"if (account == null) {\", \"return;\", \"}\", \"ContentResolver\", \".setIsSyncable(account, RssContentProvider.AUTHORITY, 1);\", \"ContentResolver.setSyncAutomatically(account,\", \"RssContentProvider.AUTHORITY, true);\", \"ContentResolver.addPeriodicSync(account,\", \"RssContentProvider.AUTHORITY,\", \"Bundle.EMPTY,\", \"60L * 60L);\", \"final Bundle settingsBundle = new Bundle();\", \"settingsBundle.putBoolean(\", \"ContentResolver.SYNC_EXTRAS_MANUAL, true);\", \"settingsBundle.putBoolean(\", \"ContentResolver.SYNC_EXTRAS_EXPEDITED, true);\", \"ContentResolver.requestSync(account,\", \"RssContentProvider.AUTHORITY, settingsBundle);\", \"}\", \"RssContentProvider.RequestSync(mActivity);\", \"private View mEmptyView;\", \"if (actionBar != null) {\", \"actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\", \"}\", \"mEmptyView = findViewById(android.R.id.empty);\", \"mEmptyView.setVisibility(mFragment == null ? View.VISIBLE : View.GONE);\", \"TextView emptyLogin = (TextView) findViewById(R.id.empty_login);\", \"emptyLogin.setVisibility(null == AuthHelper.getSavedAccountName(this)\", \"? View.VISIBLE : View.GONE);\", \"emptyLogin.setText(android.text.Html\", \".fromHtml(getString(R.string.empty_no_feeds_login)));\", \"emptyLogin.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View v) {\", \"askForLogin();\", \"}\", \"});\", \"TextView emptyAddFeed = (TextView) findViewById(R.id.empty_add_feed);\", \"emptyAddFeed.setText(android.text.Html\", \".fromHtml(getString(R.string.empty_no_feeds_add)));\", \"emptyAddFeed.setOnClickListener(onAddListener);\", \"private void askForLogin() {\", \"DialogFragment dialog = new AccountDialog();\", \"dialog.show(getFragmentManager(), \\\"account_dialog\\\");\", \"}\", \"askForLogin();\", \"RssContentProvider.RequestSync(this);\", \"mEmptyView.setVisibility(View.GONE);\"]"}, {"project": "Feeder", "commit_id": "63216748ee4b40b98fa537a41f2de7067a1d9273", "time_stamp": 1412982600, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"55457f030696e392b408b59b66dda381a4cb2397\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java\": [\"250\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Util.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}], "find_interval": 146110, "la": 83, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "527eec3fff6cdd1ba7a1660bd8a97e5bb71fd5e1", "time_stamp": 1413128310, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/include_floating_add_button.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed_result.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 52, "ld": 16, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private View mSearchFrame;\", \"private String mFeedUrl = null;\", \"private TextView mEmptyText;\", \"private View mLoadingProgress;\", \"mSearchFrame = findViewById(R.id.feed_search_frame);\", \"mEmptyText = (TextView) findViewById(android.R.id.empty);\", \"mLoadingProgress = findViewById(R.id.loading_progress);\", \"mListResults.setEmptyView(mEmptyText);\", \"View f = getCurrentFocus();\", \"if (f != null) {\", \"InputMethodManager imm =\", \"(InputMethodManager) getSystemService(\", \"Context.INPUT_METHOD_SERVICE);\", \"imm.hideSoftInputFromWindow(f.getWindowToken(),\", \"0);\", \"}\", \"mFeedUrl);\", \"mFeedUrl,\", \"mSearchFrame.setVisibility(View.GONE);\", \"mDetailsFrame.setVisibility(View.VISIBLE);\", \"mTextTag.requestFocus();\", \"} else {\", \"mSearchFrame.setVisibility(View.VISIBLE);\", \"mDetailsFrame.setVisibility(View.GONE);\", \"mSearchFrame.requestFocus();\", \"mFeedUrl = i.getDataString().trim();\", \"mTextSearch.setText(mFeedUrl);\", \"mFeedUrl = i.getStringExtra(Intent.EXTRA_TEXT).trim();\", \"mTextSearch.setText(mFeedUrl);\", \"return null;\", \"mFeedUrl = url.trim();\", \"mSearchFrame.setVisibility(View.GONE);\", \"mTextTag.requestFocus();\", \"InputMethodManager imm =\", \"(InputMethodManager) getSystemService(\", \"Context.INPUT_METHOD_SERVICE);\", \"imm.showSoftInput(mTextTag, 0);\", \"mListResults.setVisibility(View.GONE);\", \"mEmptyText.setVisibility(View.GONE);\", \"mLoadingProgress.setVisibility(View.VISIBLE);\", \"mEmptyText.setText(R.string.no_feeds_found);\", \"mLoadingProgress.setVisibility(View.GONE);\", \"mSearchFrame.setVisibility(View.VISIBLE);\", \"mResultAdapter.setEntries(data.responseData.entries);\"]"}, {"project": "Feeder", "commit_id": "55457f030696e392b408b59b66dda381a4cb2397", "time_stamp": 1413128710, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"63216748ee4b40b98fa537a41f2de7067a1d9273\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}], "find_interval": null, "la": 3, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java\": [\"274\"]}", "rules": null, "clean_lines": "[\"Bundle args = new Bundle();\", \"args.putCharSequence(TAGSFILTER, mTextTag.getText());\", \"args, loaderCallbacks);\"]"}, {"project": "Feeder", "commit_id": "27f01fbe40fb0dae1c953cec65ed928538b02beb", "time_stamp": 1413150474, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}], "find_interval": null, "la": 2, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mTextTag.append(i.getStringExtra(TAG));\"]"}, {"project": "Feeder", "commit_id": "3638a7ac4cf65145e724f6c49dd8a6e73b4dd4f2", "time_stamp": 1413150488, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 3, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"boolean empty = mAdapter.getCount() < 1;\", \"mEmptyView.setVisibility(empty ? View.VISIBLE : View.GONE);\", \"mRecyclerView.setVisibility(empty ? View.GONE : View.VISIBLE);\"]"}, {"project": "Feeder", "commit_id": "3bb696a81336ee6bd1cc5f0a26929e863a43a960", "time_stamp": 1413153896, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}], "find_interval": null, "la": 51, "ld": 15, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private String domain;\", \"public String getDomain() {\", \"if (domain == null) {\", \"domain = enclosurelink != null ? enclosurelink : link;\", \"int start = domain.indexOf(\\\"://\\\");\", \"if (start > 0)\", \"start += 3;\", \"else\", \"start = 0;\", \"if (domain.indexOf(\\\"www.\\\") == start) {\", \"start += 4;\", \"}\", \"int end = domain.indexOf(\\\"/\\\", start);\", \"if (end < 1)\", \"domain = domain.substring(start);\", \"else\", \"domain = domain.substring(start, end);\", \"}\", \"return domain;\", \"}\", \"private final int linkColor;\", \"linkColor = context.getResources().getColor(R.color\", \".linked_text_blue);\", \"SpannableStringBuilder titleText = new SpannableStringBuilder\", \"(item.feedtitle);\", \"if (holder.rssItem.description == null ||\", \"holder.rssItem.description.isEmpty()) {\", \"titleText.append(\\\" \\\\u2014 \\\" \", \"holder.rssItem.getDomain());\", \"titleText.setSpan(new ForegroundColorSpan(linkColor),\", \"item.feedtitle.length() + 3, titleText.length(),\", \"Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"}\", \"holder.authorTextView.setText(titleText);\", \"if (item.imageurl == null || item.imageurl.isEmpty()) {\"]"}, {"project": "Feeder", "commit_id": "6ebea9a8a6242cd0efcaf05cf282bfb26b7315bb", "time_stamp": 1413154781, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/cleaner.py"}], "find_interval": null, "la": 5, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\">>> get_images(\\\"Silly urls: <img src='bob&amp;jones'\\\")\", \"['bob&jones']\", \"# Do this somewhere else perhaps. Sweclockers has stupid image urls.\", \"images.append(m.group(3).replace(\\\"&amp;\\\", \\\"&\\\"))\"]"}, {"project": "Feeder", "commit_id": "ce15c6f7773724c337208aa668b9f35ec05fc8b3", "time_stamp": 1413209033, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": true, "fix_by": "[\"2f1a9f43c1982363839ad1887a696224f595194b\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java\": [\"150\", \"152\", \"153\", \"154\", \"156\", \"157\"], \"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java\": [\"140\", \"141\", \"142\", \"143\", \"144\", \"145\", \"146\", \"147\"], \"app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java\": [\"58\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 3788, "la": 96, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "2f1a9f43c1982363839ad1887a696224f595194b", "time_stamp": 1413212821, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"ce15c6f7773724c337208aa668b9f35ec05fc8b3\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 24, "ld": 24, "fix_file_num": 3, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java\": [\"150\", \"152\", \"153\", \"154\", \"156\", \"157\"], \"app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java\": [\"140\", \"141\", \"142\", \"143\", \"144\", \"145\", \"146\", \"147\"], \"app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java\": [\"58\"]}", "rules": null, "clean_lines": "[\"Log.d(TAG, \\\"Deletes was null\\\");\", \"Log.d(TAG, \\\"Number of deletes to sync: \\\" + deletes.size());\", \"for (BackendAPIClient.Delete delete : deletes) {\", \"Log.d(TAG, \\\"Deleting: \\\" + delete.link);\", \"RssSyncHelper\", \".syncDeleteBatch(getContext(), operations, delete);\", \"}\", \"public static void syncDeleteBatch(final Context context,\", \"final ArrayList<ContentProviderOperation> operations,\", \"final BackendAPIClient.Delete delete) {\", \"operations.add(ContentProviderOperation.newDelete(FeedSQL.URI_FEEDS)\", \".withSelection(FeedSQL.COL_URL + \\\" IS ?\\\",\", \"Util.ToStringArray(delete.link)).build());\", \"}\", \"public List<Delete> deletes;\"]"}, {"project": "Feeder", "commit_id": "e65b5e6d692998d08c00d82913d746b4e9c55c6d", "time_stamp": 1413213205, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 2, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from .models import (Feed, FeedItem, UserFeed, UserDeletion,\", \"get_user, get_feed, get_userfeed)\"]"}, {"project": "Feeder", "commit_id": "ddd5814c13f45e56e572e01660d4eda5efd7307e", "time_stamp": 1413213844, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 17, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def print_errors(f)\", \"'''Print errors in the wrapped function\", \"re-raise them.'''\", \"def wrapped_f(*args, **kwargs)\", \"try\", \"return f(*args, **kwargs)\", \"except Exception as e\", \"print(e)\", \"raise e\", \"return wrapped_f\", \"@print_errors\", \"@print_errors\", \"@print_errors\"]"}, {"project": "Feeder", "commit_id": "2e4860d4580a2d7f7257c03e76790eb7320a4c26", "time_stamp": 1413214148, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"1b01d567a7b92fd0812ddbf70e7f46435a17c292\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/feeder/rest.py\": [\"118\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": 1134, "la": 13, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "750723c3c56de57d591f951159b47f42ce0a3a0f", "time_stamp": 1413214382, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"return {\\\"feeds\\\": feeds, \\\"deletes\\\": deletes}\"]"}, {"project": "Feeder", "commit_id": "9cb5f8e5f63745ce71f2644957a1784cc125018a", "time_stamp": 1413215222, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}], "find_interval": null, "la": 3, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"link = Column(String, nullable=False)\", \"# Would want unique constraint, but can't get\", \"# on conflict things\"]"}, {"project": "Feeder", "commit_id": "1b01d567a7b92fd0812ddbf70e7f46435a17c292", "time_stamp": 1413215282, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\", \"2e4860d4580a2d7f7257c03e76790eb7320a4c26\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 2, "ld": 2, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/rest.py\": [\"11\", \"118\"]}", "rules": null, "clean_lines": "[\"marshal_with)\", \"@marshal_with(feeds_response)\"]"}, {"project": "Feeder", "commit_id": "62451a464e4277de19fc250de583c4c8a7ef5ba5", "time_stamp": 1413215857, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 5, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from urllib.parse import unquote\", \"# Unquote the url\", \"link = unquote(args.link)\", \"feed = Feed.query.filter_by(link=link).first()\"]"}, {"project": "Feeder", "commit_id": "a140cebc5cf3e24f0e5d68f991d7298c2a71e0dd", "time_stamp": 1413215964, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 2, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"print(\\\"add link:\\\", args.link)\", \"print(\\\"delete link:\\\", link)\"]"}, {"project": "Feeder", "commit_id": "04867e89a9a43c96ea8e4a60337cbc2faf4c7cea", "time_stamp": 1413216311, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"print(\\\"Unquoting link:\\\", args.link)\"]"}, {"project": "Feeder", "commit_id": "0ddaa4d205a07e789f63960611819631d250ad31", "time_stamp": 1413216852, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 14, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# Configure some logging\", \"file_handler = logging.FileHandler('rest.log')\", \"app.logger.addHandler(file_handler)\", \"app.logger.setLevel(logging.INFO)\", \"# Make sure link is correct\", \"args.link = unquote(args.link)\", \"app.logger.info(\\\"Unquoting link: {}\\\".format(args.link))\", \"args.link = unquote(args.link)\", \"app.logger.info(\\\"delete link: {}\\\".format(args.link))\", \"print(\\\"delete link:\\\", args.link)\", \"feed = Feed.query.filter_by(link=args.link).first()\", \"app.logger.error(\\\"No such feed: {}\\\".format(args.link))\"]"}, {"project": "Feeder", "commit_id": "66b843e19dbf353c1902b0800646d66ed17ea542", "time_stamp": 1413218081, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 5, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"class FeedsDeleter(Resource)\", \"def post(self, userid)\", \"api.add_resource(Feeds, '/feeds')\", \"api.add_resource(FeedsDeleter, '/feeds/delete')\"]"}, {"project": "Feeder", "commit_id": "49cee7d4d3df7067d25fb258f208a05e9b533ceb", "time_stamp": 1413218294, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 9, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"BackendAPIClient.DeleteMessage d = new BackendAPIClient.DeleteMessage();\", \"d.link = link;\", \"api.deleteFeed(d);\", \"@POST(\\\"/feeds/delete\\\")\", \"VoidResponse deleteFeed(@Body DeleteMessage deleteMessage);\", \"public static class DeleteMessage {\", \"public String link;\", \"}\"]"}, {"project": "Feeder", "commit_id": "df66ca97ccef0a9fde5bcfbd1fdd4949c7bb98c8", "time_stamp": 1413218359, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"app.logger.error(str(e))\"]"}, {"project": "Feeder", "commit_id": "a2cfea5925ff537bacbe6f6eea3ea9e80bf59a54", "time_stamp": 1413494963, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 8, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from datetime import datetime, timedelta\", \"# Require a timestap. If one was not provided in decent form,\", \"# default to two weeks ago\", \"if dt is None\", \"dt = datetime.utcnow() - timedelta(days=14)\", \"q = q.filter(Feed.timestamp > dt)\", \"if args['min_timestamp'] is None\"]"}, {"project": "Feeder", "commit_id": "101ad0d9a3ca3cdb0b5b833b4fcfd90ebfb6f242", "time_stamp": 1413495051, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 2, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# default to x days ago\", \"dt = datetime.utcnow() - timedelta(days=7)\"]"}, {"project": "Feeder", "commit_id": "0345f6370bc3c2287c22db12e7e58fb7d661e7a7", "time_stamp": 1413883348, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"9d58a2b303c06d22096cc48bae097765512e15d9\", \"5369335388aa10a56210c3f2f85c4299d909f186\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"482\", \"385\", \"387\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "add", "modified_path": "app/src/fdroid/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "add", "modified_path": "app/src/fdroid/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/DividerItemDecoration.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/anim-v21/floating_add_button_state_list_anim.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable-v21/floating_add_button_ripple_background_off.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable-v21/floating_add_button_ripple_background_on.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/new_items_background.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar_with_headerbar.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar_with_translucent_background.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_new_items_button.xml"}, {"type": "add", "modified_path": "app/src/main/res/transition-v21/shared_element.xml"}, {"type": "add", "modified_path": "app/src/main/res/transition-v21/window_enter_exit.xml"}, {"type": "add", "modified_path": "app/src/main/res/values-v21/styles.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}, {"type": "add", "modified_path": "app/src/play/AndroidManifest.xml"}, {"type": "rename", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/AuthHelper.java", "current_path": "app/src/play/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "rename", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java", "current_path": "app/src/play/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}], "find_interval": 564687, "la": 537, "ld": 369, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "4b47b9c02de170950662bbacca141a32540ebd36", "time_stamp": 1413885161, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/TabletUtils.java"}, {"type": "add", "modified_path": "app/src/main/res/values-sw600dp/tabletvalues.xml"}, {"type": "add", "modified_path": "app/src/main/res/values/tabletvalues.xml"}], "find_interval": null, "la": 55, "ld": 10, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mRecyclerView.setHasFixedSize(true);\", \"if (TabletUtils.isTablet(getActivity())) {\", \"final int cols = TabletUtils.numberOfFeedColumns(getActivity());\", \"mLayoutManager = new GridLayoutManager(getActivity(),\", \"cols);\", \"((GridLayoutManager) mLayoutManager).setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\", \"@Override\", \"public int getSpanSize(int position) {\", \"if (FeedAdapter.HEADERTYPE == mAdapter.getItemViewType(position)) {\", \"return cols;\", \"} else {\", \"return 1;\", \"}\", \"}\", \"});\", \"} else {\", \"mLayoutManager = new LinearLayoutManager(getActivity());\", \"}\", \"public static final int HEADERTYPE = 0;\", \"public static final int ITEMTYPE = 1;\", \"private static final int defImgWidth = 2 * 128;\", \"private static final int defImgHeight = 2 * 128;\", \"final int item_layout = R.layout.view_story;\", \"if (TabletUtils.isTablet(parent.getContext())) {\", \"} else {\", \"}\", \".inflate(item_layout, parent, false));\", \"public class TabletUtils {\", \"public static boolean isTablet(final Context context) {\", \"return context.getResources().getBoolean(R.bool.isTablet);\", \"}\", \"public static int numberOfFeedColumns(final Context context) {\", \"return context.getResources().getInteger(R.integer.feedColumns);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "c0035d1ed23315524b12ed0e9cb7d20e9f23d414", "time_stamp": 1413889551, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable/bg_protect.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-sw600dp/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/values-sw600dp-w820dp/tabletvalues.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 21, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mRecyclerView.addItemDecoration(new DividerItemDecoration\", \"(getActivity(), DividerItemDecoration.VERTICAL_LIST));\", \"mRecyclerView.addItemDecoration(new DividerItemDecoration\", \"(getActivity(), DividerItemDecoration.HORIZONTAL_LIST));\", \"mRecyclerView.addItemDecoration(new DividerItemDecoration\", \"(getActivity(), DividerItemDecoration.VERTICAL_LIST));\", \"private final boolean isGrid;\", \"private final Drawable bgProtection;\", \"isGrid = TabletUtils.isTablet(context);\", \"bgProtection = context.getResources().getDrawable(R.drawable.bg_protect);\", \"holder.textGroup.setBackground(null);\", \"holder.textGroup.setBackground(bgProtection);\", \"public final View textGroup;\", \"textGroup = v.findViewById(R.id.story_text);\"]"}, {"project": "Feeder", "commit_id": "f71b2373d3dfa3732627b9ac851de3c4d41cf87e", "time_stamp": 1414148296, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"9d58a2b303c06d22096cc48bae097765512e15d9\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"524\", \"525\", \"526\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "delete", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/ui/DividerItemDecoration.java"}, {"type": "delete", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/util/LPreviewUtils.java"}, {"type": "delete", "modified_path": "app/src/lpreview/java/com/nononsenseapps/feeder/util/LPreviewUtilsImpl.java"}, {"type": "delete", "modified_path": "app/src/lpreview/res/drawable-v21/floating_add_button_ripple_background_off.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/drawable-v21/floating_add_button_ripple_background_on.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar_with_headerbar.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/layout-v21/toolbar_actionbar_with_translucent_background.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/transition-v21/shared_element.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/transition-v21/window_enter_exit.xml"}, {"type": "delete", "modified_path": "app/src/lpreview/res/values-v21/styles.xml"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "delete", "modified_path": "app/src/main/res/anim-v21/floating_add_button_state_list_anim.xml"}, {"type": "rename", "modified_path": "app/src/lpreview/res/anim-v21/floating_add_button_state_list_anim.xml", "current_path": "app/src/main/res/anim/floating_button_state_list_anim.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_done_all.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-hdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_add.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-mdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_done_all.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_done_all.png"}, {"type": "delete", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar_with_headerbar.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout-v21/toolbar_actionbar_with_translucent_background.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/include_floating_add_button.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_floating_checkall_button.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/navdrawer_content.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/padding_header_item.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/toolbar_actionbar.xml"}, {"type": "delete", "modified_path": "app/src/main/res/menu/edit_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}, {"type": "delete", "modified_path": "app/src/main/res/menu/global.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/reader.xml"}, {"type": "rename", "modified_path": "app/src/main/res/drawable-xhdpi/ic_launcher.png", "current_path": "app/src/main/res/mipmap-xhdpi/ic_launcher.png"}, {"type": "rename", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_launcher.png", "current_path": "app/src/main/res/mipmap-xxhdpi/ic_launcher.png"}, {"type": "modify", "modified_path": "app/src/main/res/values-sw600dp/dimens.xml"}, {"type": "delete", "modified_path": "app/src/main/res/values-v21/styles.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}, {"type": "modify", "modified_path": "app/src/play/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}], "find_interval": 299739, "la": 92, "ld": 452, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "f9dca095696ef505ad47f74001f4fb0512277895", "time_stamp": 1414150030, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_delete.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_edit.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_settings.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_sync.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_visibility.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_visibility_off.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_delete.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_edit.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_settings.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_sync.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_visibility.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_visibility_off.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_delete.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_edit.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_settings.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_sync.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_visibility.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_visibility_off.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_add.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_delete.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_edit.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_settings.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_sync.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_visibility.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_visibility_off.png"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 12, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"menuItem.setTitle(onlyUnread ? R.string.show_all_items : R.string.show_unread_items);\", \"if (onlyUnread) {\", \"menuItem.setIcon(R.drawable.ic_action_visibility);\", \"} else {\", \"menuItem.setIcon(R.drawable.ic_action_visibility_off);\", \"}\", \"if (onlyUnread) {\", \"menuItem.setIcon(R.drawable.ic_action_visibility);\", \"} else {\", \"menuItem.setIcon(R.drawable.ic_action_visibility_off);\", \"}\"]"}, {"project": "Feeder", "commit_id": "b643543a8defde01990c0cc21726c97548bae0f2", "time_stamp": 1414150071, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 1, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"menuItem.setTitle(onlyUnread ? R.string.show_all_items : R.string.show_unread_items);\"]"}, {"project": "Feeder", "commit_id": "ba732e1329068994b15932fc809b2da6da15dd74", "time_stamp": 1414272796, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"1763bc0c9c4d35d727deeba4f885a43723940cb4\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 2, "ld": 2, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java\": [\"275\"]}", "rules": null, "clean_lines": "[\"new Point(size.x - 2 * Math.round(getResources().getDimension(R.dimen.keyline_1)),\", \"2 * size.y));\"]"}, {"project": "Feeder", "commit_id": "bd15138d4ceeee13ec1ae3b7f84167a735478ebc", "time_stamp": 1414305422, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "rename", "modified_path": "app/src/main/res/drawable-xhdpi/unknown_image.png", "current_path": "app/src/main/res/drawable/unknown_image.png"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "dece07a3f8e442661009aa29dcd37cc34e928802", "time_stamp": 1414305569, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "71378406621efc0c4033f58fa49d51a1edf09ed5", "time_stamp": 1414305953, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-sw600dp/snackbar_bg.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/snackbar_bg.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-sw600dp/include_snack_fca.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout-sw600dp/include_snackbar.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_reader.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/include_new_items_button.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_snack_fca.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_snackbar.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values-sw600dp/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values-sw600dp/tabletvalues.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 222, "ld": 240, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final int HEADER_HIDE_ANIM_DURATION = 300;\", \"protected Toolbar mActionBarToolbar;\", \"private Fragment mFragment;\", \"private DrawShadowFrameLayout mDrawShadowFrameLayout;\", \"private View mCheckAllButton;\", \"private View mSyncIndicator1;\", \"private View mSyncIndicator2;\", \"private boolean isSyncing = false;\", \"private BroadcastReceiver mSyncMsgReceiver = new BroadcastReceiver() {\", \"@Override\", \"public void onReceive(final Context context, final Intent intent) {\", \"isSyncing = intent\", \".getBooleanExtra(RssSyncAdapter.SYNC_BROADCAST_IS_ACTIVE, false);\", \"showHideSyncIndicators(isSyncing);\", \"}\", \"};\", \"private View mEmptyView;\", \"private View mSnackBar;\", \"private View mActionFooter;\", \"public void onCreate(Bundle savedInstanceState) {\", \"super.onCreate(savedInstanceState);\", \"setContentView(R.layout.activity_feed);\", \"getActionBarToolbar();\", \"overridePendingTransition(0, 0);\", \"if (savedInstanceState == null) {\", \"mFragment = getDefaultFragment();\", \"if (mFragment != null) {\", \"getSupportFragmentManager().beginTransaction()\", \".add(R.id.container, mFragment, \\\"single_pane\\\").commit();\", \"}\", \"} else {\", \"mFragment = getSupportFragmentManager().findFragmentByTag(\\\"single_pane\\\");\", \"}\", \"mDrawShadowFrameLayout =\", \"(DrawShadowFrameLayout) findViewById(R.id.main_content);\", \"View.OnClickListener onAddListener = new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View view) {\", \"Intent i = new Intent(FeedActivity.this, EditFeedActivity.class);\", \"startActivity(i);\", \"}\", \"};\", \"mEmptyView = findViewById(android.R.id.empty);\", \"mEmptyView.setVisibility(mFragment == null ? View.VISIBLE : View.GONE);\", \"TextView emptyLogin = (TextView) findViewById(R.id.empty_login);\", \"emptyLogin.setVisibility(null == AuthHelper.getSavedAccountName(this) ?\", \"View.VISIB\", \"View.GONE);\", \"emptyLogin.setText(\", \"android.text.Html.fromHtml(getString(R.string.empty_no_feeds_login)));\", \"emptyLogin.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(final View v) {\", \"askForLogin();\", \"}\", \"});\", \"TextView emptyAddFeed = (TextView) findViewById(R.id.empty_add_feed);\", \"emptyAddFeed.setText(\", \"android.text.Html.fromHtml(getString(R.string.empty_no_feeds_add)));\", \"emptyAddFeed.setOnClickListener(onAddListener);\", \"mCheckAllButton = findViewById(R.id.checkall_button);\", \"ViewCompat.setElevation(mCheckAllButton, getResources().getDimension(R.dimen.elevation1));\", \"mActionFooter = findViewById(R.id.action_footer);\", \"mSnackBar = findViewById(R.id.snackbar);\", \"mSnackBar.setVisibility(View.GONE);\", \"mSyncIndicator1 = findViewById(R.id.sync_indicator_1);\", \"mSyncIndicator2 = findViewById(R.id.sync_indicator_2);\", \"private Fragment getDefaultFragment() {\", \"final String tag = PrefUtils.getLastOpenFeedTag(this);\", \"final long id = PrefUtils.getLastOpenFeedId(this);\", \"if (tag != null || id > 0) {\", \"return FeedFragment.newInstance(id, \\\"\\\", \\\"\\\", tag);\", \"} else {\", \"return null;\", \"}\", \"}\", \"private void askForLogin() {\", \"DialogFragment dialog = new AccountDialog();\", \"dialog.show(getSupportFragmentManager(), \\\"account_dialog\\\");\", \"}\", \"@Override\", \"protected void onPostCreate(Bundle savedInstanceState) {\", \"super.onPostCreate(savedInstanceState);\", \"registerHideableHeaderView(findViewById(R.id.headerbar));\", \"registerHideableHeaderView(mSyncIndicator2);\", \"registerHideableFooterView(mActionFooter);\", \"}\", \"@Override\", \"public boolean onOptionsItemSelected(MenuItem item) {\", \"int id = item.getItemId();\", \"if (id == R.id.action_settings) {\", \"return true;\", \"} else if (id == R.id.action_sync) {\", \"syncOrConfig();\", \"return true;\", \"} else if (id == R.id.action_add) {\", \"startActivity(new Intent(FeedActivity.this, EditFeedActivity.class));\", \"return true;\", \"}\", \"return super.onOptionsItemSelected(item);\", \"}\", \"public boolean syncOrConfig() {\", \"if (null == AuthHelper.getSavedAccountName(this)) {\", \"askForLogin();\", \"return false;\", \"} else {\", \"Toast.makeText(this, \\\"Syncing feeds...\\\", Toast.LENGTH_SHORT).show();\", \"RssContentProvider.RequestSync(this);\", \"return true;\", \"}\", \"}\", \"@Override\", \"protected int getSelfNavDrawerItem() {\", \"return 0;\", \"}\", \"@Override\", \"protected void onNavigationDrawerItemSelected(long id, String title,\", \"String url, String tag) {\", \"mEmptyView.setVisibility(View.GONE);\", \"mFragment = FeedFragment.newInstance(id, title, url, tag);\", \"getSupportFragmentManager().beginTransaction()\", \".replace(R.id.container, mFragment, \\\"single_pane\\\").commit();\", \"PrefUtils.setLastOpenFeed(this, id, tag);\", \"@Override\", \"protected void onActionBarAutoShowOrHide(boolean shown) {\", \"super.onActionBarAutoShowOrHide(shown);\", \"mDrawShadowFrameLayout.setShadowVisible(shown, shown);\", \"showHideSyncIndicators(isSyncing);\", \"}\", \"@Override\", \"public void onResume() {\", \"super.onResume();\", \"LocalBroadcastManager.getInstance(this).registerReceiver(mSyncMsgReceiver,\", \"new IntentFilter(RssSyncAdapter.SYNC_BROADCAST));\", \"}\", \"@Override\", \"public void onPause() {\", \"LocalBroadcastManager.getInstance(this)\", \".unregisterReceiver(mSyncMsgReceiver);\", \"showHideSyncIndicators(false);\", \"super.onPause();\", \"}\", \"private void showHideSyncIndicators(final boolean isSyncing) {\", \"mSyncIndicator1.setVisibility(isSyncing ? View.VISIBLE : View.GONE);\", \"mSyncIndicator2.setVisibility(isSyncing ? View.VISIBLE : View.GONE);\", \"}\", \"@Override\", \"public boolean onCreateOptionsMenu(Menu menu) {\", \"super.onCreateOptionsMenu(menu);\", \"getMenuInflater().inflate(R.menu.feed, menu);\", \"return true;\", \"final int position = hposition - 1;\", \"ActivityOptionsCompat options = ActivityOptionsCompat\", \"ActivityCompat.startActivity(getActivity(), i, options.toBundle());\"]"}, {"project": "Feeder", "commit_id": "ca0e2060b1d822b659b3cebbe38446f1710e4fd3", "time_stamp": 1414306200, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"item.plaintitle + \\\" \\\\u2014 \\\" + item.plainsnippet + \\\"\\\\u2026\\\";\"]"}, {"project": "Feeder", "commit_id": "085f6d708aa691065b3943eb2caf5d6223853ad6", "time_stamp": 1414307652, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/DividerColor.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/DividerItemDecoration.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable/simple_divider.xml"}], "find_interval": null, "la": 165, "ld": 60, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class DividerColor extends RecyclerView.ItemDecoration {\", \"public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;\", \"public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;\", \"private final Drawable mDivider;\", \"private int mOrientation;\", \"private static final int size = 1;\", \"public DividerColor(Context context, int orientation) {\", \"mDivider = context.getResources().getDrawable(R.drawable.simple_divider);\", \"setOrientation(orientation);\", \"}\", \"public void setOrientation(int orientation) {\", \"if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {\", \"throw new IllegalArgumentException(\\\"invalid orientation\\\");\", \"}\", \"mOrientation = orientation;\", \"}\", \"@Override\", \"public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\", \"if (mOrientation == VERTICAL_LIST) {\", \"drawVertical(c, parent);\", \"} else {\", \"drawHorizontal(c, parent);\", \"}\", \"}\", \"public void drawVertical(Canvas c, RecyclerView parent) {\", \"final int left = parent.getPaddingLeft();\", \"final int right = parent.getWidth() - parent.getPaddingRight();\", \"final int childCount = parent.getChildCount();\", \"for (int i = 0; i < childCount; i++) {\", \"final View child = parent.getChildAt(i);\", \"final RecyclerView.LayoutParams params =\", \"(RecyclerView.LayoutParams) child.getLayoutParams();\", \"final int top = child.getBottom() + params.bottomMargin;\", \"final int bottom = top + size;\", \"mDivider.setBounds(left, top, right, bottom);\", \"mDivider.draw(c);\", \"}\", \"}\", \"public void drawHorizontal(Canvas c, RecyclerView parent) {\", \"final int childCount = parent.getChildCount();\", \"for (int i = 0; i < childCount; i++) {\", \"final View child = parent.getChildAt(i);\", \"final RecyclerView.LayoutParams params =\", \"(RecyclerView.LayoutParams) child.getLayoutParams();\", \"final int left = child.getRight() + params.rightMargin;\", \"final int right = left + mDivider.getIntrinsicHeight();\", \"final int top = child.getTop();\", \"final int bottom = child.getBottom();\", \"mDivider.setBounds(left, top, right, bottom);\", \"mDivider.draw(c);\", \"}\", \"}\", \"@Override\", \"public void getItemOffsets(Rect outRect, View view, RecyclerView parent,\", \"RecyclerView.State state) {\", \"if (mOrientation == VERTICAL_LIST) {\", \"outRect.set(0, 0, 0, size);\", \"} else {\", \"outRect.set(0, 0, size, 0);\", \"}\", \"}\", \"}\", \"public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;\", \"public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;\", \"private static final int[] ATTRS = new int[]{android.R.attr.listDivider};\", \"private Drawable mDivider;\", \"private int mOrientation;\", \"public DividerItemDecoration(Context context, int orientation) {\", \"final TypedArray a = context.obtainStyledAttributes(ATTRS);\", \"mDivider = a.getDrawable(0);\", \"a.recycle();\", \"setOrientation(orientation);\", \"}\", \"public void setOrientation(int orientation) {\", \"if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {\", \"throw new IllegalArgumentException(\\\"invalid orientation\\\");\", \"}\", \"mOrientation = orientation;\", \"@Override\", \"public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\", \"if (mOrientation == VERTICAL_LIST) {\", \"drawVertical(c, parent);\", \"} else {\", \"drawHorizontal(c, parent);\", \"}\", \"public void drawVertical(Canvas c, RecyclerView parent) {\", \"final int left = parent.getPaddingLeft();\", \"final int right = parent.getWidth() - parent.getPaddingRight();\", \"final int childCount = parent.getChildCount();\", \"for (int i = 0; i < childCount; i++) {\", \"final View child = parent.getChildAt(i);\", \"final RecyclerView.LayoutParams params =\", \"(RecyclerView.LayoutParams) child.getLayoutParams();\", \"final int top = child.getBottom() + params.bottomMargin;\", \"final int bottom = top + mDivider.getIntrinsicHeight();\", \"mDivider.setBounds(left, top, right, bottom);\", \"mDivider.draw(c);\", \"}\", \"public void drawHorizontal(Canvas c, RecyclerView parent) {\", \"final int top = parent.getPaddingTop();\", \"final int bottom = parent.getHeight() - parent.getPaddingBottom();\", \"final int childCount = parent.getChildCount();\", \"for (int i = 0; i < childCount; i++) {\", \"final View child = parent.getChildAt(i);\", \"final RecyclerView.LayoutParams params =\", \"(RecyclerView.LayoutParams) child.getLayoutParams();\", \"final int left = child.getRight() + params.rightMargin;\", \"final int right = left + mDivider.getIntrinsicHeight();\", \"mDivider.setBounds(left, top, right, bottom);\", \"mDivider.draw(c);\", \"}\", \"@Override\", \"public void getItemOffsets(Rect outRect, View view, RecyclerView parent,\", \"RecyclerView.State state) {\", \"if (mOrientation == VERTICAL_LIST) {\", \"outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());\", \"} else {\", \"outRect.set(0, 0, mDivider.getIntrinsicWidth(), 0);\", \"}\", \"mRecyclerView.addItemDecoration(new DividerColor\", \"mRecyclerView.addItemDecoration(new DividerColor\", \"mRecyclerView.addItemDecoration(new DividerColor\"]"}, {"project": "Feeder", "commit_id": "070c72515e1219d360aea59aba3ca175331f2265", "time_stamp": 1414308672, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/DividerColor.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 14, "ld": 10, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private final int skipHeaders;\", \"private final int skipFooters;\", \"this(context, orientation, 0, 0);\", \"}\", \"public DividerColor(Context context, int orientation, int skipHeaders, int skipFooters) {\", \"this.skipHeaders = skipHeaders;\", \"this.skipFooters = skipFooters;\", \"for (int i = skipHeaders; i < childCount - skipFooters; i++) {\", \"for (int i = skipHeaders; i < childCount; i++) {\", \"final int right = left + size;\", \"(getActivity(), DividerColor.VERTICAL_LIST, 1, cols));\", \"(getActivity(), DividerColor.HORIZONTAL_LIST));\", \"(getActivity(), DividerColor.VERTICAL_LIST, 1, 1));\"]"}, {"project": "Feeder", "commit_id": "5c7632282f31269e3a72517dc7869d73f0476278", "time_stamp": 1414310470, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}], "find_interval": null, "la": 9, "ld": 5, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"holder.titleTextView.setText(mContext.getString(R.string.no_tag));\", \"private String title = \\\"\\\";\", \"private String url = \\\"\\\";\", \"if (title == null || title.isEmpty()) {\", \"title = getString(R.string.no_tag);\", \"}\", \"((BaseActivity) getActivity()).getSupportActionBar().setTitle(title);\"]"}, {"project": "Feeder", "commit_id": "6a865e1ebecd6f034d6ec2db41e18e0c334e33cb", "time_stamp": 1414311307, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"a05388d0870ece287e998544964a8bacf7e7e48e\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/cleaner.py"}], "find_interval": null, "la": 6, "ld": 6, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/cleaner.py\": [\"96\", \"105\", \"106\", \"107\", \"108\", \"109\"]}", "rules": null, "clean_lines": "[\">>> unescape(\\\"&lt; &gt;\\\")\", \">>> unescape(\\\"&#8217;\\\")\", \"'\\u2019'\", \"text = html.unescape(text)\"]"}, {"project": "Feeder", "commit_id": "cf9106bc898d9de0a3541cf9a419176e040fe2b6", "time_stamp": 1414311529, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 2, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"(getActivity(), DividerColor.VERTICAL_LIST, 0, cols));\", \"(getActivity(), DividerColor.VERTICAL_LIST, 0, 1));\"]"}, {"project": "Feeder", "commit_id": "a76ea7e7204e96dd0fec62d75bf776dcc5e1ca31", "time_stamp": 1414312089, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"final static int ITEMS_THRESHOLD = 0;\"]"}, {"project": "Feeder", "commit_id": "57ee3f28cfde66f6405939c32497b0e4776883ed", "time_stamp": 1414312639, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"10d43c7d3b46dedee82bd576feb5adbf74df54b5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"115\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}], "find_interval": 1773129, "la": 12, "ld": 7, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "41bf8d80c2ee218393817c3d479253d2303c647b", "time_stamp": 1414313215, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_pressed.png"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "6746138ee8b359da9257397ee5942383669ad985", "time_stamp": 1414322377, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/mipmap-xhdpi/ic_launcher.png"}, {"type": "modify", "modified_path": "app/src/main/res/mipmap-xxhdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/mipmap-xxxhdpi/ic_launcher.png"}, {"type": "add", "modified_path": "app/src/main/res/mipmap-xxxxhdpi/ic_launcher.png"}, {"type": "add", "modified_path": "graphics/icon.xcf"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "9d8b8b54300ce3e6e29d302409078b230dc485f3", "time_stamp": 1414345610, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 11, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (id < 1) {\", \"title = tag;\", \"}\", \"if (id < 1 && (title == null || title.isEmpty())) {\", \"if (id > 0 && (title == null || title.isEmpty())) {\", \"((BaseActivity) getActivity()).getSupportActionBar().setTitle(title);\"]"}, {"project": "Feeder", "commit_id": "111331d9883b85440776fa3ab149a370fe9615ef", "time_stamp": 1414347343, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 8, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private final int defImgWidth;\", \"private final int defImgHeight;\", \"defImgWidth = Math.round(context.getResources().getDimension(R.dimen.item_img_def_width));\", \"defImgHeight = Math.round(context.getResources().getDimension(R.dimen.item_img_def_height));\", \"Log.d(\\\"HECTOR\\\", \\\"item height:\\\" + h);\"]"}, {"project": "Feeder", "commit_id": "656ad664628b3cb963c448716ae22389f8393dbb", "time_stamp": 1414441509, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"9d58a2b303c06d22096cc48bae097765512e15d9\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"535\", \"536\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-xxhdpi/bacon.jpg"}, {"type": "modify", "modified_path": "app/src/main/res/layout-sw600dp/view_story.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": 6526, "la": 3, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "8c6ef11ce6a9b70069df5901fdc33c6826f5feac", "time_stamp": 1414445772, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/text/Html.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/text/HtmlToSpannedConverter.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/text/MyQuoteSpan.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 185, "ld": 78, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"return html.fromHtml(mText, getContext());\", \"Parser parser, Context context) {\", \"return new PicassoConverter(source, parser, context);\", \"public PicassoConverter(final String source, final Parser parser, final Context context) {\", \"super(source, parser, context);\", \"static final DateTimeFormatter dateTimeFormat =\", \"DateTimeFormat.mediumDate().withLocale(Locale.getDefault());\", \"Bundle bundle) {\", \"public static FeedItemSQL RssItemFromBundle(Bundle bundle) {\", \"FeedItemSQL rssItem = new FeedItemSQL();\", \"rssItem.title = bundle.getString(ARG_TITLE);\", \"rssItem.description = (bundle.getString(ARG_DESCRIPTION));\", \"rssItem.link = (bundle.getString(ARG_LINK));\", \"rssItem.imageurl = (bundle.getString(ARG_IMAGEURL));\", \"rssItem.author = (bundle.getString(ARG_AUTHOR));\", \"rssItem.setPubDate(bundle.getString(ARG_DATE));\", \"rssItem.feedtitle = (bundle.getString(ARG_FEEDTITLE));\", \"return rssItem;\", \"}\", \"Bundle savedInstanceState) {\", \"final int theLayout;\", \"if (TabletUtils.isTablet(getActivity())) {\", \"theLayout = R.layout.fragment_reader_tablet;\", \"} else {\", \"theLayout = R.layout.fragment_reader;\", \"}\", \"View rootView = inflater.inflate(theLayout, container, false);\", \"if (TabletUtils.isTablet(getActivity())) {\", \"return new ImageTextLoader(getActivity(), mRssItem.description,\", \"new Point(Math.round(getResources().getDimension(R.dimen.reader_tablet_width)),\", \"2 * size.y));\", \"} else {\", \"return new ImageTextLoader(getActivity(), mRssItem.description,\", \"new Point(size.x - 2 * Math.round(getResources().getDimension(R.dimen.keyline_1)),\", \"2 * size.y));\", \"}\", \"final Spanned data) {\", \"public Spanned fromHtml(String source, Context context) {\", \"HtmlToSpannedConverter converter = getConverter(source, parser, context);\", \"Parser parser, Context context) {\", \"return new HtmlToSpannedConverter(source, parser, context);\", \"protected int mAccentColor;\", \"protected int mQuoteGapWidth;\", \"protected int mQuoteStripeWidth;\", \"public HtmlToSpannedConverter(String source, Parser parser, Context context) {\", \"mAccentColor = context.getResources().getColor(R.color.accent);\", \"mQuoteGapWidth = Math.round(context.getResources().getDimension(R.dimen.reader_quote_gap_width));\", \"mQuoteStripeWidth = Math.round(context.getResources().getDimension(R.dimen.reader_quote_stripe_width));\", \"for (Object anObj : obj) {\", \"int start = mSpannableStringBuilder.getSpanStart(anObj);\", \"int end = mSpannableStringBuilder.getSpanEnd(anObj);\", \"mSpannableStringBuilder.charAt(end - 2) == '\\\\n') {\", \"mSpannableStringBuilder.removeSpan(anObj);\", \"Attributes attributes) throws SAXException {\", \"Character.toLowerCase(tag.charAt(0)) == 'h' &&\", \"tag.charAt(1) >= '1' && tag.charAt(1) <= '6') {\", \"Attributes attributes) {\", \"Attributes attributes) {\", \"Attributes attributes) {\", \"final Attributes attributes) {\", \"if (len < 1 || text.charAt(len - 1) != '\\\\n') {\", \"final Attributes attributes) {\", \"if (len < 1 || text.charAt(len - 1) != '\\\\n') {\", \"final Attributes attributes) {\", \"text.append(\\\"\\\" + list.mNumber++).append(\\\". \\\");\", \"final Attributes attributes) {\", \"final Attributes attributes) {\", \"final Attributes attributes) {\", \"Attributes attr) {\", \"Object repl) {\", \"protected void endQuote(SpannableStringBuilder text) {\", \"removeLastNewlines(text);\", \"int len = text.length();\", \"Object obj = getLast(text, Blockquote.class);\", \"int where = text.getSpanStart(obj);\", \"text.removeSpan(obj);\", \"if (where != len) {\", \"text.setSpan(new MyQuoteSpan(mAccentColor, mQuoteGapWidth, mQuoteStripeWidth), where, len,\", \"Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"text.setSpan(new RelativeSizeSpan(0.8f), where, len,\", \"Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"}\", \"}\", \"endQuote(mSpannableStringBuilder);\", \"Character.toLowerCase(tag.charAt(0)) == 'h' &&\", \"tag.charAt(1) >= '1' && tag.charAt(1) <= '6') {\", \"private void removeLastNewlines(SpannableStringBuilder text) {\", \"int len = text.length();\", \"while (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"text.delete(len - 1, len);\", \"len = text.length();\", \"}\", \"}\", \"int len = text.length();\", \"if (len >= 1 && text.charAt(len - 1) == '\\\\n') {\", \"return;\", \"}\", \"if (len != 0) {\", \"text.append(\\\"\\\\n\\\");\", \"}\", \".ALIGN_NORMAL), where, len,\", \"public class MyQuoteSpan extends QuoteSpan {\", \"protected int mColor;\", \"protected int mStripeWidth;\", \"protected int mGapWidth;\", \"public MyQuoteSpan(final int color) {\", \"this(color, 2, 2);\", \"}\", \"public MyQuoteSpan(final int color, final int gapWidth, final int stripeWidth) {\", \"super(color);\", \"mColor = color;\", \"mGapWidth = gapWidth;\", \"mStripeWidth = stripeWidth;\", \"}\", \"@Override\", \"public int getLeadingMargin(boolean first) {\", \"return mGapWidth;\", \"}\", \"@Override\", \"public void drawLeadingMargin(@NonNull Canvas c, @NonNull Paint p, int x, int dir,\", \"int top, int baseline, int bottom,\", \"CharSequence text, int start, int end,\", \"boolean first, Layout layout) {\", \"Paint.Style style = p.getStyle();\", \"int color = p.getColor();\", \"p.setStyle(Paint.Style.FILL);\", \"p.setColor(mColor);\", \"c.drawRect(x, top, x + dir * mStripeWidth, bottom, p);\", \"p.setStyle(style);\", \"p.setColor(color);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "9d58a2b303c06d22096cc48bae097765512e15d9", "time_stamp": 1414448035, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"656ad664628b3cb963c448716ae22389f8393dbb\", \"f71b2373d3dfa3732627b9ac851de3c4d41cf87e\", \"0345f6370bc3c2287c22db12e7e58fb7d661e7a7\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": null, "la": 32, "ld": 8, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"535\", \"536\", \"537\", \"538\", \"539\", \"540\", \"548\"]}", "rules": null, "clean_lines": "[\"holder.imageView.setVisibility(View.INVISIBLE);\", \"holder.itemView.getViewTreeObserver().addOnPreDrawListener(holder);\", \"implements View.OnClickListener, ViewTreeObserver.OnPreDrawListener {\", \"@Override\", \"public boolean onPreDraw() {\", \"imageView.setVisibility(View.VISIBLE);\", \"int w = defImgWidth;\", \"int h = itemView.getHeight();\", \"Picasso.with(getActivity()).load(rssItem.imageurl).resize(w, h).centerCrop().noFade()\", \".into(imageView);\", \"if (isGrid) {\", \"textGroup.setBackground(bgProtection);\", \"}\", \"itemView.getViewTreeObserver().removeOnPreDrawListener(this);\", \"return true;\", \"}\"]"}, {"project": "Feeder", "commit_id": "0033f34ef62c1c7e12324c9163e6e06480fc89f8", "time_stamp": 1414448526, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\".accent);\"]"}, {"project": "Feeder", "commit_id": "5b0d972c779e78d11660e96b6feccc4a6be7ae19", "time_stamp": 1414449698, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "modify", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_pressed.png"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "88a4006e33ded624d58dc859b6b37cbf543f4fc9", "time_stamp": 1414449725, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout-sw600dp/view_story.xml"}], "find_interval": null, "la": 10, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (isGrid) {\", \"defImgHeight = Math.round(context.getResources().getDimension(R.dimen.grid_item_size));\", \"Point size = new Point();\", \"getActivity().getWindowManager().getDefaultDisplay().getSize(size);\", \"defImgWidth = size.x / TabletUtils.numberOfFeedColumns(context);\", \"} else {\", \"defImgWidth = Math.round(context.getResources().getDimension(R.dimen.item_img_def_width));\", \"defImgHeight = Math.round(context.getResources().getDimension(R.dimen.item_img_def_height));\", \"}\"]"}, {"project": "Feeder", "commit_id": "8d743d231bc4b967ad63530ef4051763c9bc2594", "time_stamp": 1414452576, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "67a835952de6965992b7716dc911cc9a6d97b9a3", "time_stamp": 1414452592, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/res/layout/fragment_reader_tablet.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "e3895a42317257b836ead22ff7409c2bc9753704", "time_stamp": 1414522808, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "delete", "modified_path": "app/src/fdroid/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "delete", "modified_path": "app/src/fdroid/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "rename", "modified_path": "app/src/play/java/com/nononsenseapps/feeder/model/AuthHelper.java", "current_path": "app/src/main/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "delete", "modified_path": "app/src/play/AndroidManifest.xml"}, {"type": "delete", "modified_path": "app/src/play/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}], "find_interval": null, "la": 113, "ld": 213, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String GOOGLE_ACCOUNT_TYPE = \\\"com.google\\\";\", \"String authToken = \\\"\\\";\", \"AccountManager accountManager = AccountManager.get(context);\", \"authToken = accountManager.blockingGetAuthToken(getAccount(context, accountName),\", \"SCOPE, true);\", \"accountManager.invalidateAuthToken(GOOGLE_ACCOUNT_TYPE, authToken);\", \"authToken = accountManager.blockingGetAuthToken(getAccount(context, accountName),\", \"SCOPE, true);\", \"return \\\"Bearer \\\" + authToken;\", \"}\", \"catch (OperationCanceledException ignored) {\", \"}\", \"catch (AuthenticatorException ignored) {\", \"}\", \"catch (IOException ignored) {\", \"manager.getAccountsByType(GOOGLE_ACCOUNT_TYPE);\", \"public class\", \"AccountDialog extends DialogFragment implements\", \"AccountManagerCallback<Bundle> {\", \"private Account mAccount = null;\", \"@NonNull\", \"@Override\", \"public Dialog onCreateDialog(Bundle args) {\", \"AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\", \"builder.setTitle(R.string.select_account);\", \"final Account[] accounts = AccountManager.get(getActivity())\", \".getAccountsByType(AuthHelper.GOOGLE_ACCOUNT_TYPE);\", \"final int size = accounts.length;\", \"String[] names = new String[size];\", \"for (int i = 0; i < size; i++) {\", \"names[i] = accounts[i].name;\", \"}\", \"builder.setItems(names, new DialogInterface.OnClickListener() {\", \"public void onClick(DialogInterface dialog, int which) {\", \"accountSelected(accounts[which]);\", \"}\", \"});\", \"return builder.create();\", \"}\", \"public void accountSelected(Account account) {\", \"if (account != null) {\", \"this.mAccount = account;\", \"AccountManager.get(getActivity()).getAuthToken(account,\", \"AuthHelper.SCOPE, null, getActivity(), this, null);\", \"}\", \"}\", \"@Override\", \"public void run(AccountManagerFuture<Bundle> future) {\", \"try {\", \"String token = future.getResult().getString(\", \"AccountManager.KEY_AUTHTOKEN);\", \"if (token != null && !token.isEmpty() && mAccount != null) {\", \"PreferenceManager.getDefaultSharedPreferences(getActivity()).edit()\", \".putString(AuthHelper.KEY_ACCOUNT, mAccount.name).commit();\", \"RssContentProvider.RequestSync(getActivity());\", \"}\", \"} catch (OperationCanceledException e) {\", \"}\", \"catch (AuthenticatorException e) {\", \"}\", \"catch (IOException e) {\", \"}\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "168275ace314e2da783057d556b3b525b6e84c29", "time_stamp": 1414767788, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 74, "ld": 12, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String FEED_ADDED_BROADCAST =\", \"\\\"feeder.nononsenseapps.RSS_FEED_ADDED_BROADCAST\\\";\", \"final BackendAPIClient.BackendAPI api = BackendAPIClient.GetBackendAPI(token);\", \"final BackendAPIClient.FeedMessage f = new BackendAPIClient.FeedMessage();\", \"final BackendAPIClient.Feed feed = api.putFeed(f);\", \"if (feed.items != null && !feed.items.isEmpty()) {\", \"final ArrayList<ContentProviderOperation> operations =\", \"new ArrayList<ContentProviderOperation>();\", \"syncFeedBatch(context, operations, feed);\", \"if (!operations.isEmpty()) {\", \"try {\", \"context.getContentResolver()\", \".applyBatch(RssContentProvider.AUTHORITY, operations);\", \"} catch (RemoteException e) {\", \"Log.e(TAG, \\\"RemoteExc.: \\\" + e);\", \"} catch (OperationApplicationException e) {\", \"Log.e(TAG, \\\"OperationAppl.Exc.: \\\" + e);\", \"}\", \"}\", \"}\", \"LocalBroadcastManager.getInstance(context).sendBroadcast\", \"(new Intent(RssSyncAdapter.FEED_ADDED_BROADCAST)\", \".putExtra(FeedSQL.COL_ID,getFeedSQLId(context, feed)));\", \"public boolean read;\", \"if (RssSyncAdapter.SYNC_BROADCAST.equals(intent.getAction())) {\", \"isSyncing = intent\", \".getBooleanExtra(RssSyncAdapter.SYNC_BROADCAST_IS_ACTIVE, false);\", \"showHideSyncIndicators(isSyncing);\", \"} else if (RssSyncAdapter.FEED_ADDED_BROADCAST.equals(intent.getAction())) {\", \"if (mFragment == null && intent.getLongExtra(FeedSQL.COL_ID, -1) > 0) {\", \"onNavigationDrawerItemSelected(intent.getLongExtra(FeedSQL.COL_ID, -1),\", \"\\\"\\\", \\\"\\\", null);\", \"}\", \"}\", \"from .database import db\", \"def get_feed(link, indicate_new=False)\", \"If indicate_new is true, then a tuple is returned instead\", \"(feed, new)\", \"Where feed is a valid feed object and new is a boolean\", \"indicating if the feed was added or not.\", \"new = True\", \"else\", \"new = False\", \"if indicate_new\", \"return feed, new\", \"else\", \"return feed\", \"from .sync import cache_feed\", \"feed, new = get_feed(args.link, indicate_new=True)\", \"if new\", \"cache_feed(feed)\", \"# TODO limit number of items instead of time\", \"# TODO include read information\", \"dt = datetime.utcnow() - timedelta(days=1)\", \"userfeed.items = FeedItem.query.filter(FeedItem.timestamp > dt,\", \"FeedItem.feed_id == feed.id)\\\\\", \".all()\"]"}, {"project": "Feeder", "commit_id": "481389c520c040341cad6500b30f43b838986506", "time_stamp": 1414769443, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 56, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"RssContentProvider.notifyAllUris(context);\", \"private Context mContext = null;\", \"mContext = getActivity().getApplicationContext();\", \"PreferenceManager.getDefaultSharedPreferences(mContext).edit()\", \"RssContentProvider.RequestSync(mContext);\", \"if (mFragment == null) {\", \"loadFirstFeedInDB(false);\", \"}\", \"if (mFragment == null) {\", \"loadFirstFeedInDB(false);\", \"} else {\", \"public void loadFirstFeedInDB(final boolean overrideCurrent) {\", \"final int loaderId = 2523;\", \"getLoaderManager().restartLoader(loaderId, Bundle.EMPTY, new LoaderManager.LoaderCallbacks<Cursor>() {\", \"@Override\", \"public Loader<Cursor> onCreateLoader(int id, Bundle args) {\", \"return new CursorLoader(FeedActivity.this, FeedSQL.URI_FEEDS,\", \"FeedSQL.FIELDS, null, null, null);\", \"}\", \"@Override\", \"public void onLoadFinished(Loader<Cursor> loader, Cursor cursor) {\", \"if (loader.getId() == loaderId) {\", \"if (cursor.moveToNext() && (overrideCurrent || mFragment == null)) {\", \"FeedSQL feed = new FeedSQL(cursor);\", \"onNavigationDrawerItemSelected(feed.id, feed.title, feed.url, feed.tag);\", \"}\", \"getLoaderManager().destroyLoader(loader.getId());\", \"}\", \"}\", \"@Override\", \"public void onLoaderReset(Loader<Cursor> loader) {\", \"}\", \"});\", \"}\", \"loadFirstFeedInDB(false);\", \"((FeedActivity) getActivity()).loadFirstFeedInDB(true);\"]"}, {"project": "Feeder", "commit_id": "d2eb756e071f186098cd9543384a0d8d7803f5a1", "time_stamp": 1414801459, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/AuthHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/AccountDialog.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ServerEditorFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/FloatLabelLayout.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable/float_label_states.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/fragment_server_editor.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/strings.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 640, "ld": 14, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"return PrefUtils.getUsername(context, null);\", \"public static final String DEFAULT_API_URL =\", \"RestAdapter restAdapter = new RestAdapter.Builder().setEndpoint(DEFAULT_API_URL)\", \"PrefUtils.setUsername(mContext, mAccount.name);\", \"TextView userText = (TextView) findViewById(R.id.user_text);\", \"TextView serverText = (TextView) findViewById(R.id.server_text);\", \"final String user = PrefUtils.getUsername(this, null);\", \"final String server = PrefUtils.getServerUrl(this);\", \"if (user != null) {\", \"userText.setText(user);\", \"}\", \"if (server != null) {\", \"serverText.setText(server);\", \"}\", \"View accountBox = findViewById(R.id.account_box);\", \"accountBox.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"DialogFragment dialog = new ServerEditorFragment();\", \"dialog.show(getSupportFragmentManager(), \\\"server_dialog\\\");\", \"}\", \"});\", \"public class ServerEditorFragment extends DialogFragment implements\", \"AccountManagerCallback<Bundle> {\", \"private static final long ANIMATION_DURATION_OUT = 100;\", \"private static final long ANIMATION_DURATION_IN = 150;\", \"private View mFrameUserPass;\", \"private TextView mServerText;\", \"private TextView mUserText;\", \"private TextView mPassText;\", \"private SwitchCompat mGoogleSwitch;\", \"private FloatLabelLayout mServerLabel;\", \"private FloatLabelLayout mUserLabel;\", \"private FloatLabelLayout mPassLabel;\", \"private LinearLayout mAccountList;\", \"private CheckedTextView mSelectedAccountView;\", \"@Override\", \"public void onCreate(Bundle savedInstanceState) {\", \"super.onCreate(savedInstanceState);\", \"setStyle(DialogFragment.STYLE_NO_TITLE, R.style.DialogTheme);\", \"}\", \"@Override\", \"public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\", \"final View root = inflater.inflate(R.layout.fragment_server_editor, container, false);\", \"mFrameUserPass = root.findViewById(R.id.frame_userpass);\", \"mServerText = (TextView) root.findViewById(R.id.server_text);\", \"mServerLabel = ((FloatLabelLayout) mServerText.getParent());\", \"mServerText.setText(PrefUtils.getServerUrl(getActivity()));\", \"mUserText = (TextView) root.findViewById(R.id.user_text);\", \"mUserLabel = ((FloatLabelLayout) mUserText.getParent());\", \"mUserText.setText(PrefUtils.getUsername(getActivity(), \\\"\\\"));\", \"mPassText = (TextView) root.findViewById(R.id.password_text);\", \"mPassLabel = ((FloatLabelLayout) mPassText.getParent());\", \"mPassText.setText(PrefUtils.getPassword(getActivity(), \\\"\\\"));\", \"mAccountList = (LinearLayout) root.findViewById(R.id.account_list);\", \"populateAccountList();\", \"mGoogleSwitch = (SwitchCompat) root.findViewById(R.id.switch_google);\", \"mGoogleSwitch.setSwitchPadding((int) getResources().getDimension(R.dimen.switch_padding));\", \"mGoogleSwitch.setChecked(PrefUtils.getUseGoogleAccount(getActivity()));\", \"mGoogleSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\", \"@Override\", \"public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\", \"if (isChecked) {\", \"showAccountList();\", \"hideUserPassFrame();\", \"} else {\", \"hideAccountList();\", \"showUserPassFrame();\", \"}\", \"}\", \"});\", \"if (PrefUtils.getUseGoogleAccount(getActivity())) {\", \"mAccountList.setVisibility(View.VISIBLE);\", \"mFrameUserPass.setVisibility(View.GONE);\", \"} else {\", \"mAccountList.setVisibility(View.GONE);\", \"mFrameUserPass.setVisibility(View.VISIBLE);\", \"}\", \"root.findViewById(R.id.button_cancel).setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"dismiss();\", \"}\", \"});\", \"root.findViewById(R.id.button_ok).setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"onOkClicked();\", \"}\", \"});\", \"return root;\", \"}\", \"private void onOkClicked() {\", \"if (!validateFields()) {\", \"return;\", \"}\", \"PrefUtils.setServerUrl(getActivity(), mServerText.getText().toString());\", \"PrefUtils.setUseGoogleAccount(getActivity(), mGoogleSwitch.isChecked());\", \"if (mGoogleSwitch.isChecked()) {\", \"PrefUtils.setUsername(getActivity(), mSelectedAccountView.getText().toString());\", \"PrefUtils.setPassword(getActivity(), null);\", \"} else {\", \"PrefUtils.setUsername(getActivity(), mUserText.getText().toString());\", \"PrefUtils.setPassword(getActivity(), mPassText.getText().toString());\", \"}\", \"dismiss();\", \"}\", \"private boolean validateFields() {\", \"boolean result = true;\", \"boolean serverValid = mServerText.getText().length() > 0;\", \"result &= serverValid;\", \"if (!serverValid) {\", \"mServerLabel.showError(\\\"Missing URL\\\");\", \"}\", \"if (mGoogleSwitch.isChecked()) {\", \"result &= mSelectedAccountView != null;\", \"} else {\", \"boolean userValid = mUserText.getText().length() > 0;\", \"result &= userValid;\", \"if (!userValid) {\", \"mUserLabel.showError(\\\"Missing username\\\");\", \"}\", \"boolean passValid = mPassText.getText().length() > 0;\", \"result &= passValid;\", \"if (!passValid) {\", \"mPassLabel.showError(\\\"Missing password\\\");\", \"}\", \"}\", \"return result;\", \"}\", \"private void showUserPassFrame() {\", \"mFrameUserPass.setVisibility(View.VISIBLE);\", \"mFrameUserPass.setAlpha(0f);\", \"mFrameUserPass.setTranslationX(mFrameUserPass.getWidth());\", \"mFrameUserPass.animate()\", \".alpha(1f)\", \".setInterpolator(new DecelerateInterpolator(0.7f))\", \".translationX(0f)\", \".setDuration(ANIMATION_DURATION_IN)\", \".setListener(null).start();\", \"}\", \"private void hideUserPassFrame() {\", \"mFrameUserPass.setAlpha(1f);\", \"mFrameUserPass.setTranslationX(0f);\", \"mFrameUserPass.animate()\", \".alpha(0f)\", \".translationX(mFrameUserPass.getWidth())\", \".setInterpolator(new AccelerateInterpolator(0.6f))\", \".setDuration(ANIMATION_DURATION_OUT)\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"mFrameUserPass.setVisibility(View.GONE);\", \"}\", \"}).start();\", \"}\", \"private void showAccountList() {\", \"mAccountList.setVisibility(View.VISIBLE);\", \"mAccountList.setAlpha(0f);\", \"mAccountList.setTranslationX(-mAccountList.getWidth());\", \"mAccountList.animate()\", \".alpha(1f)\", \".translationX(0f)\", \".setInterpolator(new DecelerateInterpolator(0.7f))\", \".setDuration(ANIMATION_DURATION_IN)\", \".setListener(null).start();\", \"}\", \"private void hideAccountList() {\", \"mAccountList.setAlpha(1f);\", \"mAccountList.setTranslationX(0f);\", \"mAccountList.animate()\", \".alpha(0f)\", \".translationX(-mAccountList.getWidth())\", \".setInterpolator(new AccelerateInterpolator(0.6f))\", \".setDuration(ANIMATION_DURATION_OUT)\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"mAccountList.setVisibility(View.GONE);\", \"}\", \"}).start();\", \"}\", \"private void populateAccountList() {\", \"final String currentAccountName = PrefUtils.getUsername(getActivity(), null);\", \"final Account[] accounts = AccountManager.get(getActivity())\", \".getAccountsByType(AuthHelper.GOOGLE_ACCOUNT_TYPE);\", \"for (final Account account : accounts) {\", \"final CheckedTextView itemView = (CheckedTextView) LayoutInflater.from(getActivity()).inflate(android.R.layout.simple_list_item_single_choice,\", \"mAccountList, false);\", \"itemView.setText(account.name);\", \"if (account.name.equals(currentAccountName)) {\", \"itemView.setChecked(true);\", \"mSelectedAccountView = itemView;\", \"}\", \"itemView.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"if (mSelectedAccountView != null) {\", \"mSelectedAccountView.setChecked(false);\", \"}\", \"itemView.setChecked(true);\", \"mSelectedAccountView = itemView;\", \"AccountManager.get(getActivity()).getAuthToken(account,\", \"AuthHelper.SCOPE, null, getActivity(), ServerEditorFragment.this, null);\", \"}\", \"});\", \"mAccountList.addView(itemView);\", \"}\", \"}\", \"@Override\", \"public void run(AccountManagerFuture<Bundle> future) {\", \"boolean valid = false;\", \"try {\", \"String token = future.getResult().getString(\", \"AccountManager.KEY_AUTHTOKEN);\", \"if (token != null && !token.isEmpty()) {\", \"valid = true;\", \"}\", \"} catch (OperationCanceledException e) {\", \"}\", \"catch (AuthenticatorException e) {\", \"}\", \"catch (IOException e) {\", \"}\", \"if (!valid && mSelectedAccountView != null) {\", \"mSelectedAccountView.setChecked(false);\", \"mSelectedAccountView = null;\", \"}\", \"}\", \"}\", \"public static final String PREF_USERNAME = \\\"key_account\\\";\", \"public static final String PREF_PASSWORD = \\\"pref_password\\\";\", \"public static final String PREF_USE_GOOGLE_ACCOUNT = \\\"pref_use_google_account\\\";\", \"public static final String PREF_SERVER_URL = \\\"pref_server_url\\\";\", \"public static String getUsername(final Context context, final String def) {\", \"return sp(context).getString(PREF_USERNAME, def);\", \"}\", \"public static String getServerUrl(final Context context) {\", \"return sp(context).getString(PREF_SERVER_URL, BackendAPIClient.DEFAULT_API_URL);\", \"}\", \"public static void setServerUrl(final Context context, final String url) {\", \"sp(context).edit().putString(PREF_SERVER_URL, url).apply();\", \"}\", \"public static void setUsername(final Context context, final String user) {\", \"sp(context).edit().putString(PREF_USERNAME, user).apply();\", \"}\", \"public static boolean getUseGoogleAccount(final Context context) {\", \"return sp(context).getBoolean(PREF_USE_GOOGLE_ACCOUNT, true);\", \"}\", \"public static void setUseGoogleAccount(final Context context, final boolean useGoogle) {\", \"sp(context).edit().putBoolean(PREF_USE_GOOGLE_ACCOUNT, useGoogle).apply();\", \"}\", \"public static String getPassword(final Context context, final String def) {\", \"return sp(context).getString(PREF_PASSWORD, def);\", \"}\", \"public static void setPassword(final Context context, final String password) {\", \"sp(context).edit().putString(PREF_PASSWORD, password).apply();\", \"}\", \"public final class FloatLabelLayout extends FrameLayout {\", \"private static final long ANIMATION_DURATION = 150;\", \"private static final float DEFAULT_PADDING_LEFT_RIGHT_DP = 4f;\", \"private EditText mEditText;\", \"private TextView mLabel;\", \"private TextView mError;\", \"private Validator mValidator = null;\", \"public FloatLabelLayout(Context context) {\", \"this(context, null);\", \"}\", \"public FloatLabelLayout(Context context, AttributeSet attrs) {\", \"this(context, attrs, 0);\", \"}\", \"public FloatLabelLayout(Context context, AttributeSet attrs, int defStyle) {\", \"super(context, attrs, defStyle);\", \"final TypedArray a = context\", \".obtainStyledAttributes(attrs, R.styleable.FloatLabelLayout);\", \"final int sidePadding = a.getDimensionPixelSize(\", \"R.styleable.FloatLabelLayout_floatLabelSidePadding,\", \"dipsToPix(DEFAULT_PADDING_LEFT_RIGHT_DP));\", \"mLabel = new TextView(context);\", \"mLabel.setPadding(sidePadding, 0, sidePadding, 0);\", \"mLabel.setVisibility(INVISIBLE);\", \"mLabel.setTextAppearance(context,\", \"a.getResourceId(R.styleable.FloatLabelLayout_floatLabelTextAppearance,\", \"android.R.style.TextAppearance_Small));\", \"addView(mLabel, LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\", \"mError = new TextView(context);\", \"mError.setPadding(sidePadding, 0, sidePadding, 0);\", \"mError.setVisibility(INVISIBLE);\", \"mError.setTextAppearance(context,\", \"a.getResourceId(R.styleable.FloatLabelLayout_floatErrorTextAppearance,\", \"android.R.style.TextAppearance_Small));\", \"addView(mError, LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\", \"a.recycle();\", \"}\", \"@Override\", \"public final void addView(@NonNull View child, int index, ViewGroup.LayoutParams params) {\", \"if (child instanceof EditText) {\", \"if (mEditText != null) {\", \"throw new IllegalArgumentException(\\\"We already have an EditText, can only have one\\\");\", \"}\", \"final LayoutParams lp = new LayoutParams(params);\", \"lp.gravity = Gravity.BOTTOM;\", \"lp.topMargin = Math.max((int) mLabel.getTextSize(), (int) mError.getTextSize());\", \"params = lp;\", \"setEditText((EditText) child);\", \"}\", \"super.addView(child, index, params);\", \"}\", \"public void setValidator(Validator validator) {\", \"mValidator = validator;\", \"}\", \"public EditText getEditText() {\", \"return mEditText;\", \"}\", \"private void setEditText(EditText editText) {\", \"mEditText = editText;\", \"mEditText.addTextChangedListener(new TextWatcher() {\", \"@Override\", \"public void afterTextChanged(Editable s) {\", \"String errorText = null;\", \"if (mValidator != null) {\", \"errorText = mValidator.afterTextChanged(s);\", \"}\", \"if (errorText == null || errorText.isEmpty()) {\", \"if (mError.getVisibility() == View.VISIBLE) {\", \"hideLabel(mError);\", \"}\", \"if (TextUtils.isEmpty(s)) {\", \"if (mLabel.getVisibility() == View.VISIBLE) {\", \"hideLabel(mLabel);\", \"}\", \"} else {\", \"if (mLabel.getVisibility() != View.VISIBLE) {\", \"showLabel(mLabel);\", \"}\", \"}\", \"} else {\", \"mError.setText(errorText);\", \"if (mLabel.getVisibility() == View.VISIBLE) {\", \"hideLabel(mLabel);\", \"}\", \"if (mError.getVisibility() != View.VISIBLE) {\", \"showLabel(mError);\", \"}\", \"}\", \"}\", \"@Override\", \"public void beforeTextChanged(CharSequence s, int start, int count, int after) {\", \"}\", \"@Override\", \"public void onTextChanged(CharSequence s, int start, int before, int count) {\", \"}\", \"});\", \"mEditText.setOnFocusChangeListener(new OnFocusChangeListener() {\", \"@Override\", \"public void onFocusChange(View view, boolean focused) {\", \"mLabel.setActivated(focused);\", \"}\", \"});\", \"mLabel.setText(mEditText.getHint());\", \"}\", \"public TextView getError() {\", \"return mError;\", \"}\", \"public TextView getLabel() {\", \"return mLabel;\", \"}\", \"private void showLabel(View label) {\", \"label.setVisibility(View.VISIBLE);\", \"label.setAlpha(0f);\", \"label.setTranslationY(label.getHeight());\", \"label.animate()\", \".alpha(1f)\", \".translationY(0f)\", \".setDuration(ANIMATION_DURATION)\", \".setListener(null).start();\", \"}\", \"private void hideLabel(final View label) {\", \"label.setAlpha(1f);\", \"label.setTranslationY(0f);\", \"label.animate()\", \".alpha(0f)\", \".translationY(label.getHeight())\", \".setDuration(ANIMATION_DURATION)\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"label.setVisibility(View.GONE);\", \"}\", \"}).start();\", \"}\", \"public void showError(String error) {\", \"mError.setText(error);\", \"if (mLabel.getVisibility() == View.VISIBLE) {\", \"hideLabel(mLabel);\", \"}\", \"if (mError.getVisibility() != View.VISIBLE) {\", \"showLabel(mError);\", \"}\", \"}\", \"private int dipsToPix(float dps) {\", \"return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dps,\", \"getResources().getDisplayMetrics());\", \"}\", \"public interface Validator {\", \"public String afterTextChanged(Editable s);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "51405b78e4d41a3b70df14e6fb188af150e279dd", "time_stamp": 1414801539, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ServerEditorFragment.java"}], "find_interval": null, "la": 3, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (accounts.length == 0) {\", \"}\"]"}, {"project": "Feeder", "commit_id": "5bbb9d32dbfc20dce422ee5fbf954104e961e819", "time_stamp": 1414802143, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}], "find_interval": null, "la": 26, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"implements LoaderManager.LoaderCallbacks<Cursor>, SharedPreferences.OnSharedPreferenceChangeListener {\", \"private TextView mUserText;\", \"private TextView mServerText;\", \"@Override\", \"protected void onDestroy() {\", \"PrefUtils.unregisterOnSharedPreferenceChangeListener(this, this);\", \"super.onDestroy();\", \"}\", \"mUserText = (TextView) findViewById(R.id.user_text);\", \"mServerText = (TextView) findViewById(R.id.server_text);\", \"mUserText.setText(user);\", \"mServerText.setText(server);\", \"PrefUtils.registerOnSharedPreferenceChangeListener(this, this);\", \"}\", \"@Override\", \"public void onSharedPreferenceChanged(SharedPreferences sp, String key) {\", \"if (PrefUtils.PREF_USERNAME.equals(key)) {\", \"mUserText.setText(sp.getString(key, \\\"\\\"));\", \"} else if (PrefUtils.PREF_SERVER_URL.equals(key)) {\", \"mServerText.setText(sp.getString(key, \\\"\\\"));\", \"}\", \"public static void unregisterOnSharedPreferenceChangeListener(final Context context,\"]"}, {"project": "Feeder", "commit_id": "43c3747862921bf79de2657e360e05d80d770f5f", "time_stamp": 1415053044, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "a655536ef0601a151b573d8511fbb487645cc33f", "time_stamp": 1415221041, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": ".gitignore"}, {"type": "modify", "modified_path": ".gitmodules"}, {"type": "modify", "modified_path": "app/build.gradle"}, {"type": "delete", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ServerEditorFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PasswordUtils.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}, {"type": "modify", "modified_path": "build.gradle"}, {"type": "delete", "modified_path": "deps/Simplistic-RSS"}, {"type": "modify", "modified_path": "server/flaskapp/createdb.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/database.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}, {"type": "add", "modified_path": "server/flaskapp/setuserpass.py"}, {"type": "modify", "modified_path": "settings.gradle"}], "find_interval": null, "la": 418, "ld": 521, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"final String token = RssSyncHelper.getSuitableToken(getContext());\", \"BackendAPIClient.BackendAPI api = BackendAPIClient.GetBackendAPI(PrefUtils.getServerUrl(getContext()), token);\", \"String link, String tag) {\", \"final String token,\", \"final ArrayList<ContentProviderOperation> operations) {\", \"(PendingNetworkSQL.URI,\", \"Long.toString(pending.id))).build());\", \"final ArrayList<ContentProviderOperation> operations,\", \"final BackendAPIClient.Delete delete) {\", \"final ArrayList<ContentProviderOperation> operations,\", \"final BackendAPIClient.Feed feed) {\", \"itemOp.withValueBackReference(FeedItemSQL.COL_FEED, feedIndex);\", \"itemOp.withValue(FeedItemSQL.COL_FEED, feedId);\", \".withValue(FeedItemSQL.COL_FEEDTITLE, feed.title)\", \".withValue(FeedItemSQL.COL_TAG,\", \"feed.tag == null ? \\\"\\\" : feed.tag)\", \".withValue(FeedItemSQL.COL_IMAGEURL, item.image)\", \".withValue(FeedItemSQL.COL_ENCLOSURELINK, item.enclosure)\", \".withValue(FeedItemSQL.COL_AUTHOR, item.author)\", \".withValue(FeedItemSQL.COL_PUBDATE,\", \"FeedItemSQL.getPubDateFromString(item.published))\", \".withValue(FeedItemSQL.COL_TITLE,\", \"item.title == null ? \\\"\\\" : item.title)\", \".withValue(FeedItemSQL.COL_DESCRIPTION,\", \"item.description == null ? \\\"\\\" : item.description)\", \".withValue(FeedItemSQL.COL_PLAINTITLE,\", \"item.title_stripped == null ?\", \"\\\"\\\"\", \"item.title_stripped)\", \".withValue(FeedItemSQL.COL_PLAINSNIPPET,\", \"item.snippet == null ? \\\"\\\" : item.snippet);\", \"final BackendAPIClient.Feed feed) {\", \"public static String getSuitableToken(final Context context) {\", \"String token;\", \"if (PrefUtils.getUseGoogleAccount(context)) {\", \"token = AuthHelper.getAuthToken(context);\", \"} else {\", \"token = PasswordUtils.getBase64BasicHeader(PrefUtils.getUsername(context, null),\", \"PrefUtils.getPassword(context, null));\", \"} catch (NullPointerException e) {\", \"token = null;\", \"return token;\", \"final String token,\", \"final String title,\", \"final String link,\", \"final String tag) throws RetrofitError {\", \"final BackendAPIClient.BackendAPI api = BackendAPIClient.GetBackendAPI(PrefUtils.getServerUrl(context), token);\", \".putExtra(FeedSQL.COL_ID, getFeedSQLId(context, feed)));\", \"final String token,\", \"final String link) throws RetrofitError {\", \"BackendAPIClient.BackendAPI api =\", \"BackendAPIClient.GetBackendAPI(PrefUtils.getServerUrl(context), token);\", \"BackendAPIClient.DeleteMessage d = new BackendAPIClient.DeleteMessage();\", \"d.link = link;\", \"api.deleteFeed(d);\", \"@Override\", \"protected void onHandleIntent(Intent intent) {\", \"final String token = getSuitableToken(this);\", \"boolean storePending = token == null;\", \"if (ACTION_PUT_FEED.equals(intent.getAction())) {\", \"try {\", \"if (token != null) {\", \"putFeed(this, token,\", \"intent.getStringExtra(\\\"title\\\"),\", \"intent.getStringExtra(\\\"link\\\"),\", \"intent.getStringExtra(\\\"tag\\\"));\", \"} catch (RetrofitError e) {\", \"Log.e(TAG, \\\"put error: \\\" + e.getMessage());\", \"storePending = true;\", \"if (storePending) {\", \"Log.d(TAG, \\\"Storing put for later...\\\");\", \"PendingNetworkSQL.storePut(this, intent.getStringExtra(\\\"title\\\"),\", \"intent.getStringExtra(\\\"link\\\"),\", \"intent.getStringExtra(\\\"tag\\\"));\", \"} else if (ACTION_DELETE_FEED.equals(intent.getAction())) {\", \"try {\", \"if (token != null) {\", \"deleteFeed(this, token, intent.getStringExtra(\\\"link\\\"));\", \"} catch (RetrofitError e) {\", \"Log.e(TAG, \\\"put error: \\\" + e.getMessage());\", \"if (e.getResponse() == null ||\", \"e.getResponse().getStatus() != 404) {\", \"storePending = true;\", \"if (storePending) {\", \"Log.d(TAG, \\\"Storing delete for later...\\\");\", \"PendingNetworkSQL.storeDelete(this,\", \"intent.getStringExtra(\\\"link\\\"));\", \"public static final String DEFAULT_API_URL = \\\"https://feeder.nononsenseapps.com\\\";\", \"public static BackendAPI GetBackendAPI(final String server, final String authorization) {\", \"RestAdapter restAdapter = new RestAdapter.Builder().setEndpoint(server)\", \"request.addHeader(\\\"Authorization\\\", authorization);\", \"public static class FeedsResponse {\", \"public List<Feed> feeds;\", \"public List<Delete> deletes;\", \"}\", \"public static class DeleteMessage {\", \"public String link;\", \"}\", \"public static class Delete {\", \"public String link;\", \"public String timestamp;\", \"}\", \"public static class VoidResponse {\", \"}\", \"mPassText.setText(\\\"\\\");\", \"PrefUtils.setPassword(getActivity(),\", \"PasswordUtils.getSaltedHashedPassword(mPassText.getText().toString()));\", \"} catch (AuthenticatorException e) {\", \"} catch (IOException e) {\", \"public class PasswordUtils {\", \"final protected static char[] hexArray = \\\"0123456789ABCDEF\\\".toCharArray();\", \"private final static String ANDROID_SALT = \\\"4fb3a4355d7bfed240015f8e51e7b42f3455c17e\\\";\", \"public static String getBase64BasicHeader(final String username, final String password) {\", \"if (username == null || password == null) {\", \"throw new NullPointerException(\\\"Username or password was null\\\");\", \"}\", \"final byte[] base;\", \"try {\", \"base = (username + \\\":\\\" + password).getBytes(\\\"UTF-8\\\");\", \"} catch (UnsupportedEncodingException e) {\", \"Log.e(\\\"PasswordUtils\\\", e.getLocalizedMessage());\", \"return null;\", \"}\", \"return \\\"Basic \\\" + Base64.encodeToString(base, Base64.NO_WRAP);\", \"}\", \"public static String getSaltedHashedPassword(final String password) {\", \"return sha1Hash(ANDROID_SALT + password);\", \"}\", \"private static String sha1Hash(String toHash) {\", \"String hash = null;\", \"try {\", \"MessageDigest digest = MessageDigest.getInstance(\\\"SHA-1\\\");\", \"byte[] bytes = toHash.getBytes(\\\"UTF-8\\\");\", \"digest.update(bytes, 0, bytes.length);\", \"bytes = digest.digest();\", \"hash = bytesToHex(bytes);\", \"} catch (NoSuchAlgorithmException e) {\", \"e.printStackTrace();\", \"} catch (UnsupportedEncodingException e) {\", \"e.printStackTrace();\", \"}\", \"return hash;\", \"}\", \"public static String bytesToHex(byte[] bytes) {\", \"char[] hexChars = new char[bytes.length * 2];\", \"for (int j = 0; j < bytes.length; j++) {\", \"int v = bytes[j] & 0xFF;\", \"hexChars[j * 2] = hexArray[v >>> 4];\", \"hexChars[j * 2 + 1] = hexArray[v & 0x0F];\", \"}\", \"return new String(hexChars);\", \"}\", \"}\", \"public static void setServerUrl(final Context context, String url) {\", \"if (!url.contains(\\\"://\\\")) {\", \"url = \\\"http://\\\" + url;\", \"}\", \"./feeder.db.\", \"where ./ refers to the location of the feeder module\", \"Configuration file can be set with environment variable FEEDER_CONFIG\", \"# Set up some default values\", \"class DefaultConfig(object)\", \"DEBUG = False\", \"SQLALCHEMY_DATABASE_URI = 'sqlite:///./feeder.db'\", \"FEEDER_ALLOW_GOOGLE = True\", \"FEEDER_ALLOW_USERPASS = True\", \"# Load defaults\", \"app.config.from_object(DefaultConfig)\", \"# Read user config\", \"try\", \"app.config.from_envvar('FEEDER_CONFIG')\", \"except RuntimeError\", \"print(\\\"No config defined in environment variables (FEEDER_CONFIG).\\\\\", \"Using default settings.\\\")\", \"# app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\", \"# -*- coding: utf-8 -*-\", \"Handles validating client bearer tokens, or\", \"that the user/password is correct.\", \"from flask import request, abort, current_app\", \"from .models import get_user\", \"from werkzeug.security import check_password_hash\", \"# This is not the salt used to store passwords\", \"# This is only the salt used by the android client\", \"# Used when setting up new users\", \"__ANDROID_SALT__ = b'4fb3a4355d7bfed240015f8e51e7b42f3455c17e'\", \"def validate_userpass(credentials)\", \"'''\", \"Validate the username/password provided.\", \"Returns None failure, and a username on success\", \"'''\", \"# Get the BASE64 encoded username:password\", \"enc_userpass = credentials.replace('Basic ', '')\", \"# Decode BASE64 from bytes string\", \"userpass = base64.b64decode(enc_userpass.encode('UTF-8'))\", \"# Need to change back to String\", \"userpass = userpass.decode('UTF-8')\", \"try\", \"username, password = userpass.split(':')\", \"# Enforce lowercase on password hash\", \"password = password.lower()\", \"# Check validity of username password\", \"user = get_user(username, allow_creation=False)\", \"if user is None or user.passwordhash is None\", \"# User does not exist or has no password\", \"return None\", \"# Check password validity for existing user\", \"if check_password_hash(user.passwordhash, password)\", \"# Valid!\", \"return username\", \"except\", \"# invalid user/pass\", \"return None\", \"# Must be invalid...\", \"return None\", \"def is_basic(credentials)\", \"'''Returns True if credentials are of username:password type'''\", \"return credentials.startswith('Basic ')\", \"userid = None\", \"credentials = request.headers['Authorization']\", \"if (is_basic(credentials) and\", \"current_app.config['FEEDER_ALLOW_USERPASS'])\", \"print(\\\"Checking user...\\\")\", \"userid = validate_userpass(credentials)\", \"elif (not is_basic(credentials) and\", \"current_app.config['FEEDER_ALLOW_GOOGLE'])\", \"print(\\\"Checking token...\\\")\", \"userid = validate_token(credentials)\", \"def get_user(email, allow_creation=True)\", \"if user is None and allow_creation\", \"passwordhash = Column(String)\", \"def log_errors(f)\", \"'''Log errors in the wrapped function and re-raise them.'''\", \"@log_errors\", \"@log_errors\", \"@log_errors\", \"class PingResponder(Resource)\", \"'''\", \"A method that allows the app to query if the server is alive.\", \"'''\", \"@log_errors\", \"def get(self)\", \"return {}, 200\", \"api.add_resource(PingResponder, '/ping')\", \"uwsgi behind nginx. Note that any arguments specified will override\", \"duplicates in the configfile.\", \"You specify a configfile by setting the environment variable\", \"export FEEDER_CONFIG=/path/to/settings.py\", \"You can call the file whatever you like but it will be read like a\", \"python file. Example configuration would be\", \"# Example config\", \"DEBUG = False\", \"## Use /// for relative paths and //// for absolute paths\", \"SQLALCHEMY_DATABASE_URI = 'sqlite:////path/to/test.db'\", \"FEEDER_ALLOW_GOOGLE = True\", \"FEEDER_ALLOW_USERPASS = True\", \"# Put config/arguments here\", \"# If arguments are specified, they override config values\", \"# -*- coding: utf-8 -*-\", \"'''\", \"Usage\", \"setuserpass.py [-d] username password\", \"Set a user's username/password, creating it\", \"if it did not already exist.\", \"Specifying -d on the commandline removes the user and in that\", \"case a password is not necessary\", \"'''\", \"from hashlib import sha1\", \"from werkzeug.security import generate_password_hash\", \"from feeder import db\", \"from feeder.models import get_user\", \"from feeder import gauth\", \"# Print help if required\", \"args = sys.argv[1:]\", \"if len(args) == 0 or '-h' in args\", \"exit(__doc__)\", \"# Check delete flag\", \"should_delete = False\", \"if '-d' in args\", \"should_delete = True\", \"args.remove('-d')\", \"# Make sure enough arguments were specified\", \"if not should_delete and len(args) < 2\", \"exit(\\\"Not enough arguments specified. Print help with -h\\\")\", \"elif should_delete and len(args) < 1\", \"exit(\\\"No username specified. Print help with -h\\\")\", \"if should_delete\", \"username = args[0]\", \"else\", \"username, password = args\", \"# Get User\", \"user = get_user(username)\", \"if should_delete\", \"db.session.delete(user)\", \"db.session.commit()\", \"exit(\\\"Removed user {}\\\".format(username))\", \"# Generate a password hash\", \"# Make sure to use a byte string\", \"try\", \"bpassword = password.encode('utf-8')\", \"except AttributeError\", \"# Already bytestring\", \"bpassword = password\", \"# Then add the salt used by the android client\", \"androidpassword = sha1(gauth.__ANDROID_SALT__ + bpassword)\\\\\", \".hexdigest().lower()\", \"# And finally salt it for real\", \"user.passwordhash = generate_password_hash(androidpassword)\", \"db.session.add(user)\", \"db.session.commit()\", \"exit(\\\"User updated\\\")\"]"}, {"project": "Feeder", "commit_id": "a9d64002594f021efeaf2603aded6763eb9b3009", "time_stamp": 1415282717, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "fd0a03fdc016fc49d4aae870ccb212dcdf843603", "time_stamp": 1415300857, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/FlingingRecyclerView.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}], "find_interval": null, "la": 110, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private FlingingRecyclerView mRecyclerView;\", \"mRecyclerView = (FlingingRecyclerView) rootView.findViewById(android.R.id.list);\", \"mRecyclerView.setOnFlingListener(new FlingingRecyclerView.OnFlingListener() {\", \"@Override\", \"public void flingStateChange(boolean flinging) {\", \"if (flinging) {\", \"Picasso.with(getActivity()).pauseTag(FeedFragment.this);\", \"} else {\", \"Picasso.with(getActivity()).resumeTag(FeedFragment.this);\", \"}\", \"}\", \"});\", \"mRecyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\", \"@Override\", \"public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\", \"super.onScrollStateChanged(recyclerView, newState);\", \"if (RecyclerView.SCROLL_STATE_IDLE == newState ||\", \"RecyclerView.SCROLL_STATE_DRAGGING == newState) {\", \"Picasso.with(getActivity()).resumeTag(FeedFragment.this);\", \"} else {\", \"Picasso.with(getActivity()).pauseTag(FeedFragment.this);\", \"}\", \"}\", \"});\", \"Picasso.with(getActivity()).cancelTag(FeedFragment.this);\", \".tag(FeedFragment.this)\", \"public class FlingingRecyclerView extends RecyclerView {\", \"private final ArrayList<OnScrollListener> onScrollListeners = new ArrayList<OnScrollListener>();\", \"private OnFlingListener onFlingListener = null;\", \"private OnScrollListener onScrollDelegate = null;\", \"public FlingingRecyclerView(Context context) {\", \"super(context);\", \"}\", \"public FlingingRecyclerView(Context context, AttributeSet attrs) {\", \"super(context, attrs);\", \"}\", \"public FlingingRecyclerView(Context context, AttributeSet attrs, int defStyle) {\", \"super(context, attrs, defStyle);\", \"}\", \"public void setOnFlingListener(OnFlingListener listener) {\", \"this.onFlingListener = listener;\", \"}\", \"@Override\", \"public boolean fling(int velocityX, int velocityY) {\", \"boolean flinging = super.fling(velocityX, velocityY);\", \"if (onFlingListener != null) {\", \"onFlingListener.flingStateChange(flinging);\", \"}\", \"return flinging;\", \"}\", \"@Override\", \"public void setOnScrollListener(OnScrollListener listener) {\", \"onScrollListeners.add(listener);\", \"if (onScrollDelegate == null) {\", \"onScrollDelegate = new OnScrollListener() {\", \"@Override\", \"public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\", \"super.onScrollStateChanged(recyclerView, newState);\", \"for (OnScrollListener listener : onScrollListeners) {\", \"listener.onScrollStateChanged(recyclerView, newState);\", \"}\", \"}\", \"@Override\", \"public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\", \"super.onScrolled(recyclerView, dx, dy);\", \"for (OnScrollListener listener : onScrollListeners) {\", \"listener.onScrolled(recyclerView, dx, dy);\", \"}\", \"}\", \"};\", \"super.setOnScrollListener(onScrollDelegate);\", \"}\", \"}\", \"public interface OnFlingListener {\", \"public void flingStateChange(boolean flinging);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "59ffd129f8a5f03fdc1a0c79094240811ea1b121", "time_stamp": 1415314092, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"e6643e6e5b071cc5c7c42b9e7ef1dfc3dd34d061\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/views/ListStoryItem.java\": [\"106\", \"131\", \"137\", \"138\", \"139\", \"140\", \"141\", \"144\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/ListStoryItem.java"}, {"type": "add", "modified_path": "app/src/main/res/layout/list_story_item.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/list_story_item_layout.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_story.xml"}], "find_interval": 3783891, "la": 159, "ld": 8, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "10d43c7d3b46dedee82bd576feb5adbf74df54b5", "time_stamp": 1416085768, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"1fae032b9c909afc5b1950fe53e08b922f225ce1\", \"57ee3f28cfde66f6405939c32497b0e4776883ed\", \"5809ebee83a82d7545f87d930c8ddb7a40fa1ca3\", \"71c8373ceab0a22ed17db5e490aa08abc060fff2\", \"242c83c4ac45f7182944f6dfa964e0097284c87e\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/text/HtmlToSpannedConverter.java"}], "find_interval": null, "la": 69, "ld": 12, "fix_file_num": 3, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java\": [\"102\", \"106\", \"111\", \"115\", \"154\", \"155\", \"187\"], \"app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java\": [\"167\", \"175\"], \"app/src/main/java/com/nononsenseapps/text/HtmlToSpannedConverter.java\": [\"241\", \"242\"]}", "rules": null, "clean_lines": "[\"b = p.load(source).resize(w, h).tag(ImageTextLoader.this).get();\", \"b = p.load(source).tag(ImageTextLoader.this).get();\", \"maxSize.y).centerInside().tag(ImageTextLoader.this).get();\", \"b = p.load(source).tag(ImageTextLoader.this).get();\", \"float ratio = ((float) w) / ((float) maxSize.x);\", \"final Bitmap b = p.load(video.imageurl).tag(ImageTextLoader.this).get();\", \"p.cancelTag(ImageTextLoader.this);\", \"private final Html htmlformatter;\", \"htmlformatter = new Html();\", \".setText(htmlformatter.fromHtml(mRssItem.title, getActivity()));\", \"htmlformatter.fromHtml(mRssItem.description, getActivity()));\", \"private final Context mContext;\", \"mContext = context;\", \"Drawable d = mContext.getResources().getDrawable(R.drawable.unknown_image);\", \"text.append(\\\"\\\\n\\\");\"]"}, {"project": "Feeder", "commit_id": "02cf5f39fbc739b36212d89a6d77d4c93a96121c", "time_stamp": 1416707461, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/text/TableFormatter.java"}], "find_interval": null, "la": 7, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class TableFormatter {\", \"}\"]"}, {"project": "Feeder", "commit_id": "93706632d16189d66b75a5500d840a6617c8cd02", "time_stamp": 1419097859, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "build.gradle"}, {"type": "modify", "modified_path": "gradle/wrapper/gradle-wrapper.properties"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "e6643e6e5b071cc5c7c42b9e7ef1dfc3dd34d061", "time_stamp": 1419097983, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"59ffd129f8a5f03fdc1a0c79094240811ea1b121\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/ListStoryItem.java"}], "find_interval": null, "la": 13, "ld": 9, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/views/ListStoryItem.java\": [\"106\", \"131\", \"137\", \"138\", \"139\", \"140\", \"141\", \"144\"]}", "rules": null, "clean_lines": "[\"layoutView(mStoryImage, getRight() - imgWidth, 0, imgWidth, getMeasuredHeightWithMargins(mStoryImage));\", \"heightUsed += getMeasuredHeightWithMargins(mStoryDate);\", \"int heightSize = heightUsed;\", \"if (mStoryImage.getVisibility() != View.GONE) {\", \"measureChildWithMargins(mStoryImage,\", \"widthMeasureSpec, getPaddingLeft(),\", \"heightMeasureSpec, 0);\", \"}\"]"}, {"project": "Feeder", "commit_id": "d3a72e16a34e499c571a2a429689e451e0937eb1", "time_stamp": 1419112291, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 5, "ld": 5, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"rssItem.id = bundle.getLong(ARG_ID, -1);\", \"setHasOptionsMenu(true);\"]"}, {"project": "Feeder", "commit_id": "2bb0b02a7af88d37b329c72a1c62e5464d50f81d", "time_stamp": 1419196171, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_av_play_circle_outline.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_av_play_circle_outline.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_av_play_circle_outline.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_av_play_circle_outline.png"}, {"type": "modify", "modified_path": "app/src/main/res/menu/reader.xml"}], "find_interval": null, "la": 13, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"intent.putExtra(ReaderFragment.ARG_LINK, rssItem.link);\", \"intent.putExtra(ReaderFragment.ARG_ENCLOSURE, rssItem.enclosurelink);\", \"public static final String ARG_ENCLOSURE = \\\"enclosure\\\";\", \"bundle.putString(ARG_ENCLOSURE, rssItem.enclosurelink);\", \"rssItem.enclosurelink = (bundle.getString(ARG_ENCLOSURE));\", \"menu.findItem(R.id.action_open_enclosure).setVisible(mRssItem.enclosurelink != null);\", \"} else if (id == R.id.action_open_enclosure) {\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(mRssItem.enclosurelink)));\", \"return true;\"]"}, {"project": "Feeder", "commit_id": "e2c2617bfd70d4588cb4ca83c98f2c624040437a", "time_stamp": 1419196578, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 22, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public String getEnclosureFilename() {\", \"if (enclosurelink == null)\", \"return null;\", \"String[] parts = enclosurelink.split(\\\"/\\\");\", \"if (parts.length == 0)\", \"return null;\", \"return parts[parts.length - 1];\", \"}\", \"if (mRssItem.enclosurelink != null) {\", \"String filename = mRssItem.getEnclosureFilename();\", \"if (filename != null)\", \"menu.findItem(R.id.action_open_enclosure).setTitle(filename);\", \"}\"]"}, {"project": "Feeder", "commit_id": "6f8e6e21040d7b2a10db2dec20a118fa39987a73", "time_stamp": 1419196999, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 7, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (holder.rssItem.enclosurelink != null) {\", \"titleText.append(\\\" \\\\u2014 \\\" \", \"holder.rssItem.getEnclosureFilename());\", \"} else {\", \"titleText.append(\\\" \\\\u2014 \\\" \", \"holder.rssItem.getDomain());\", \"}\"]"}, {"project": "Feeder", "commit_id": "733a32285a090f86f8bc257610ef1c5331db9367", "time_stamp": 1419197217, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 11, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public void showActionBar() {\", \"autoShowOrHideActionBar(true);\", \"}\", \"@Override\", \"public void onResume() {\", \"super.onResume();\", \"((BaseActivity) getActivity()).showActionBar();\", \"}\"]"}, {"project": "Feeder", "commit_id": "d85b48ea51bc20555b63e623316bcc3930f1bc4a", "time_stamp": 1419199103, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_edit_feed.xml"}], "find_interval": null, "la": 15, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private EditText mTextUrl;\", \"private FloatLabelLayout mUrlLabel;\", \"private FloatLabelLayout mTitleLabel;\", \"private FloatLabelLayout mTagLabel;\", \"mTitleLabel = (FloatLabelLayout) mTextTitle.getParent();\", \"mTextUrl = (EditText) findViewById(R.id.feed_url);\", \"mUrlLabel = (FloatLabelLayout) mTextUrl.getParent();\", \"mTagLabel = (FloatLabelLayout) mTextTag.getParent();\", \"mTextUrl.getText().toString().trim());\", \"mTextUrl.getText().toString().trim(),\", \"mTextUrl.setText(mFeedUrl);\", \"mTextUrl.setText(mFeedUrl);\"]"}, {"project": "Feeder", "commit_id": "f9411752ec09056942521ba7ca21e611572953f4", "time_stamp": 1419199780, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}], "find_interval": null, "la": 58, "ld": 39, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String TEMPLATE = \\\"template\\\";\", \"final View view, final int position,\", \"final long id) {\", \"final int actionId, final KeyEvent event) {\", \"final boolean template = i.getBooleanExtra(TEMPLATE, false);\", \"if (id > 0 || template) {\", \"if (id > 0) {\", \"((FloatLabelLayout) mTextUrl.getParent()).setVisibility(View.GONE);\", \"mTextTag.requestFocus();\", \"addButton.setText(getString(R.string.save));\", \"} else {\", \"mTextUrl.requestFocus();\", \"}\", \"@Override\", \"public Loader<Cursor> onCreateLoader(final int id,\", \"final Bundle args) {\", \"String filter = null;\", \"if (args != null && args.containsKey(TAGSFILTER)) {\", \"filter = FeedSQL.COL_TAG + \\\" LIKE '\\\" + args\", \".getCharSequence(TAGSFILTER, \\\"\\\") + \\\"%'\\\";\", \"}\", \"return new CursorLoader(EditFeedActivity.this,\", \"FeedSQL.URI_TAGSWITHCOUNTS,\", \"Util.ToStringArray(FeedSQL.COL_ID,\", \"FeedSQL.COL_TAG), filter, null,\", \"Util.SortAlphabeticNoCase(FeedSQL.COL_TAG));\", \"}\", \"@Override\", \"public void onLoadFinished(final Loader<Cursor> loader,\", \"final Cursor data) {\", \"tagsAdapter.swapCursor(data);\", \"}\", \"@Override\", \"public void onLoaderReset(final Loader<Cursor> loader) {\", \"tagsAdapter.swapCursor(null);\", \"}\", \"};\", \"!theme.resolveAttribute(R.attr.isFloatingWindow, floatingWindowFlag,\", \"true)) {\", \"final Bundle args) {\", \"final GoogleFeedAPIClient.FindResponse data) {\", \"final ViewGroup parent) {\", \"menu.findItem(R.id.action_add_templated).setVisible(false);\", \"} else if (id == R.id.action_add_templated && this.id > 0) {\", \"Intent i = new Intent(getActivity(), EditFeedActivity.class);\", \"i.putExtra(EditFeedActivity.SHOULD_FINISH_BACK, true);\", \"i.putExtra(EditFeedActivity.TEMPLATE, true);\", \"i.putExtra(EditFeedActivity.TAG, tag);\", \"i.setData(Uri.parse(url));\", \"startActivity(i);\", \"return true;\"]"}, {"project": "Feeder", "commit_id": "a915193109f9719c3315759f7aad7f2c8fa6c5b8", "time_stamp": 1419200693, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/EditFeedActivity.java"}], "find_interval": null, "la": 6, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"values.put(FeedSQL.COL_URL,\", \"mTextUrl.getText().toString().trim());\", \"mTextUrl.setInputType(InputType.TYPE_NULL);\", \"mTextUrl.setTextIsSelectable(true);\"]"}, {"project": "Feeder", "commit_id": "873477db42bff0b86ca7f7a60581c5214adee7ae", "time_stamp": 1419202230, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": true, "fix_by": "[\"95389caa714d0f0bfd9257982244c9cb0821b5d5\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"341\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssNotifications.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}], "find_interval": 6434, "la": 65, "ld": 9, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "95389caa714d0f0bfd9257982244c9cb0821b5d5", "time_stamp": 1419208664, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"873477db42bff0b86ca7f7a60581c5214adee7ae\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssNotifications.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi-v11/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi-v11/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi-v11/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_stat_rss.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi-v11/ic_stat_rss.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-xxhdpi/faktura513132500622.pdf"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_stat_rss.png"}], "find_interval": null, "la": 165, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"341\"]}", "rules": null, "clean_lines": "[\"private final static int mId = 73583;\", \"public static void notify(final Context context) {\", \"ArrayList<FeedItemSQL> feedItems = getItemsToNotify(context);\", \"if (feedItems.isEmpty())\", \"return;\", \"NotificationCompat.InboxStyle inboxStyle =\", \"new NotificationCompat.InboxStyle();\", \"String contentTitle, contentText = \\\"\\\";\", \"if (feedItems.size() == 1) {\", \"contentTitle = \\\"1 new RSS-story\\\";\", \"} else {\", \"contentTitle = feedItems.size() + \\\" new RSS-stories\\\";\", \"}\", \"inboxStyle.setBigContentTitle(contentTitle);\", \"for (FeedItemSQL item : feedItems) {\", \"inboxStyle.addLine(item.plaintitle);\", \"contentText += item.plaintitle + \\\"\\\\n\\\";\", \"}\", \"Bitmap bm = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher);\", \"NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)\", \".setSmallIcon(R.drawable.ic_stat_rss)\", \".setLargeIcon(bm)\", \".setNumber(feedItems.size())\", \".setAutoCancel(true)\", \".setContentTitle(contentTitle)\", \".setContentText(contentText)\", \".setCategory(NotificationCompat.CATEGORY_SOCIAL)\", \".setPriority(NotificationCompat.PRIORITY_LOW);\", \"if (feedItems.size() == 1) {\", \"if (feedItems.get(0).description != null && !feedItems.get(0).description.isEmpty()) {\", \"Intent intent = new Intent(context, ReaderActivity.class);\", \"ReaderActivity.setRssExtras(intent, feedItems.get(0));\", \"mBuilder.setContentIntent(PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT));\", \"} else {\", \"Intent intent = new Intent(context, FeedActivity.class);\", \"mBuilder.setContentIntent(PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT));\", \"}\", \"if (feedItems.get(0).enclosurelink != null) {\", \"mBuilder.addAction(R.drawable.ic_action_av_play_circle_outline,\", \"\\\"Open file\\\", PendingIntent.getActivity(context, 0, new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(feedItems.get(0).enclosurelink)), PendingIntent.FLAG_UPDATE_CURRENT));\", \"}\", \"mBuilder.addAction(R.drawable.ic_action_location_web_site,\", \"\\\"Open in browser\\\", PendingIntent.getActivity(context, 0, new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(feedItems.get(0).link)), PendingIntent.FLAG_UPDATE_CURRENT));\", \"} else {\", \"Intent intent = new Intent(context, FeedActivity.class);\", \"mBuilder.setContentIntent(PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT));\", \"}\", \"inboxStyle.setBuilder(mBuilder);\", \"NotificationManager mNotificationManager =\", \"(NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\", \"mNotificationManager.notify(mId, inboxStyle.build());\", \"}\", \"public static ArrayList<FeedItemSQL> getItemsToNotify(final Context context) {\", \"ArrayList<FeedItemSQL> feedItems = new ArrayList<FeedItemSQL>();\", \"String feeds = getFeedsToNotify(context);\", \"if (feeds == null)\", \"return feedItems;\", \"Cursor c = context.getContentResolver()\", \".query(FeedItemSQL.URI_FEED_ITEMS, FeedItemSQL.FIELDS,\", \"FeedItemSQL.COL_FEED + \\\" IN (\\\" + feeds + \\\") AND \\\" + FeedItemSQL.COL_NOTIFIED + \\\" IS 0 AND \\\" + FeedItemSQL.COL_UNREAD + \\\" IS 1\\\",\", \"null, null);\", \"try {\", \"while (c.moveToNext()) {\", \"feedItems.add(new FeedItemSQL(c));\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return feedItems;\", \"}\", \"private static String getFeedsToNotify(Context context) {\", \"String result = null;\", \"Cursor c = context.getContentResolver()\", \".query(FeedSQL.URI_FEEDS, Util.ToStringArray(FeedSQL.COL_ID),\", \"FeedSQL.COL_NOTIFY + \\\" IS 1\\\",\", \"null, null);\", \"try {\", \"while (c.moveToNext()) {\", \"if (result == null)\", \"result = \\\"\\\";\", \"result += \\\"\\\" + Long.toString(c.getLong(0)) + \\\",\\\";\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"if (result != null)\", \"result = result.substring(0, result.length() - 1);\", \"return result;\", \"}\", \"RssNotifications.notify(getContext());\", \"@Override\", \"public void onResume() {\", \"super.onResume();\", \"RssNotifications.notify(this);\", \"}\", \"values.put(FeedSQL.COL_NOTIFY, notify == 1 ? 0 : 1);\"]"}, {"project": "Feeder", "commit_id": "8d3e144c3906fd7b7d2058f917830838afac26f2", "time_stamp": 1419244165, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssDatabaseService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_social_notifications_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_social_notifications_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_social_notifications_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_social_notifications_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_social_notifications_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_social_notifications_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_social_notifications_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_social_notifications_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable/notification_checkmark.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed_fragment.xml"}], "find_interval": null, "la": 260, "ld": 34, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static void SetNotify(Context context, long id, boolean on) {\", \"ContentValues values = new ContentValues();\", \"if (on) {\", \"values.put(FeedItemSQL.COL_NOTIFIED, 1);\", \"context.getContentResolver()\", \".update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_FEED + \\\" IS ? AND \\\" + FeedItemSQL.COL_NOTIFIED + \\\" IS 0\\\",\", \"Util.LongsToStringArray(id));\", \"}\", \"values.clear();\", \"values.put(FeedSQL.COL_NOTIFY, on ? 1 : 0);\", \"context.getContentResolver()\", \".update(FeedSQL.URI_FEEDS, values,\", \"Util.WHEREIDIS,\", \"Util.LongsToStringArray(id));\", \"}\", \"public static void SetNotify(Context context, String tag, boolean on) {\", \"ContentValues values = new ContentValues();\", \"if (on) {\", \"values.put(FeedItemSQL.COL_NOTIFIED, 1);\", \"context.getContentResolver()\", \".update(FeedItemSQL.URI_FEED_ITEMS, values,\", \"FeedItemSQL.COL_TAG + \\\" IS ? AND \\\" + FeedItemSQL.COL_NOTIFIED + \\\" IS 0\\\",\", \"Util.ToStringArray(tag));\", \"}\", \"values.clear();\", \"values.put(FeedSQL.COL_NOTIFY, on ? 1 : 0);\", \"context.getContentResolver()\", \".update(FeedSQL.URI_FEEDS, values,\", \"FeedSQL.COL_TAG + \\\" IS ?\\\",\", \"Util.ToStringArray(tag));\", \"}\", \"public static boolean GetNotify(Context context, long id) {\", \"boolean result = false;\", \"Cursor c = context.getContentResolver().query(FeedSQL.URI_FEEDS,\", \"Util.ToStringArray(FeedSQL.COL_NOTIFY),\", \"Util.WHEREIDIS, Util.LongsToStringArray(id), null);\", \"try {\", \"if (c.moveToFirst()) {\", \"result = (c.getInt(0) == 1);\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return result;\", \"}\", \"public static boolean GetNotify(Context context, String tag) {\", \"boolean result = false;\", \"Cursor c = context.getContentResolver().query(FeedSQL.URI_FEEDS,\", \"Util.ToStringArray(\\\"DISTINCT \\\" + FeedSQL.COL_NOTIFY),\", \"FeedSQL.COL_TAG + \\\" IS ?\\\", Util.ToStringArray(tag), null);\", \"try {\", \"if (c.getCount() == 1 && c.moveToFirst()) {\", \"result = (c.getInt(0) == 1);\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return result;\", \"}\", \"public class RssDatabaseService extends IntentService {\", \"private static final String ACTION_SET_NOTIFY = \\\"com.nononsenseapps.feeder.db.action.SET_NOTIFY\\\";\", \"private static final String ACTION_MARK_FEED_AS_READ = \\\"com.nononsenseapps.feeder.db.action.MARK_FEED_AS_READ\\\";\", \"private static final String ACTION_MARK_ITEM_AS_READ = \\\"com.nononsenseapps.feeder.db.action.MARK_ITEM_AS_READ\\\";\", \"private static final String EXTRA_NOTIFY = \\\"com.nononsenseapps.feeder.db.extra.EXTRA_NOTIFY\\\";\", \"private static final String EXTRA_TAG = \\\"com.nononsenseapps.feeder.db.extra.EXTRA_TAG\\\";\", \"private static final String EXTRA_ID = \\\"com.nononsenseapps.feeder.db.extra.EXTRA_ID\\\";\", \"public RssDatabaseService() {\", \"super(\\\"RssDatabaseService\\\");\", \"}\", \"public static void setNotify(Context context, boolean notify, long id, String tag) {\", \"Intent intent = new Intent(context, RssDatabaseService.class);\", \"intent.setAction(ACTION_SET_NOTIFY);\", \"intent.putExtra(EXTRA_NOTIFY, notify);\", \"intent.putExtra(EXTRA_TAG, tag);\", \"intent.putExtra(EXTRA_ID, id);\", \"context.startService(intent);\", \"}\", \"public static void markFeedAsRead(Context context, long id, String tag) {\", \"Intent intent = new Intent(context, RssDatabaseService.class);\", \"intent.setAction(ACTION_MARK_FEED_AS_READ);\", \"intent.putExtra(EXTRA_TAG, tag);\", \"intent.putExtra(EXTRA_ID, id);\", \"context.startService(intent);\", \"}\", \"public static void markItemAsRead(Context context, long id) {\", \"Intent intent = new Intent(context, RssDatabaseService.class);\", \"intent.setAction(ACTION_MARK_ITEM_AS_READ);\", \"intent.putExtra(EXTRA_ID, id);\", \"context.startService(intent);\", \"}\", \"@Override\", \"protected void onHandleIntent(Intent intent) {\", \"if (intent != null) {\", \"final String action = intent.getAction();\", \"if (ACTION_SET_NOTIFY.equals(action)) {\", \"final boolean notify = intent.getBooleanExtra(EXTRA_NOTIFY, false);\", \"final String tag = intent.getStringExtra(EXTRA_TAG);\", \"final long id = intent.getLongExtra(EXTRA_ID, -1);\", \"if (id > 0) {\", \"RssContentProvider.SetNotify(this, id, notify);\", \"} else {\", \"RssContentProvider.SetNotify(this, tag, notify);\", \"}\", \"} else if (ACTION_MARK_FEED_AS_READ.equals(action)) {\", \"final String tag = intent.getStringExtra(EXTRA_TAG);\", \"final long id = intent.getLongExtra(EXTRA_ID, -1);\", \"if (id > 0) {\", \"RssContentProvider.MarkFeedAsRead(this, id);\", \"} else {\", \"RssContentProvider.MarkItemsAsRead(this, tag);\", \"}\", \"} else if (ACTION_MARK_ITEM_AS_READ.equals(action)) {\", \"final long id = intent.getLongExtra(EXTRA_ID, -1);\", \"if (id > 0) {\", \"RssContentProvider.MarkItemAsRead(this, id);\", \"}\", \"}\", \"}\", \"}\", \"}\", \"private static final int FEED_SETTINGS_LOADER = 3;\", \"private CheckedTextView mNotifyCheck;\", \"getLoaderManager().restartLoader(FEEDITEMS_LOADER, Bundle.EMPTY, this);\", \"getLoaderManager().restartLoader(FEED_LOADER, Bundle.EMPTY, this);\", \"} else {\", \"getLoaderManager().restartLoader(FEED_SETTINGS_LOADER, Bundle.EMPTY, this);\", \"mNotifyCheck = (CheckedTextView) getActivity().findViewById(R.id.notifycheck);\", \"mNotifyCheck.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"notify = mNotifyCheck.isChecked() ? 0 : 1;\", \"mNotifyCheck.setChecked(notify == 1);\", \"setNotifications(notify == 1);\", \"}\", \"});\", \"private void setNotifications(boolean on) {\", \"RssDatabaseService.setNotify(getActivity(), on, this.id, this.tag);\", \"}\", \"RssDatabaseService.markFeedAsRead(getActivity(), this.id, this.tag);\", \"} else if (ID == FEED_SETTINGS_LOADER) {\", \"String where;\", \"String[] whereArgs;\", \"if (id > 0) {\", \"where = Util.WHEREIDIS;\", \"whereArgs = Util.LongsToStringArray(id);\", \"} else {\", \"where = FeedSQL.COL_TAG + \\\" IS ?\\\";\", \"whereArgs = Util.ToStringArray(tag);\", \"}\", \"return new CursorLoader(getActivity(), FeedSQL.URI_FEEDS,\", \"Util.ToStringArray(\\\"DISTINCT \\\" + FeedSQL.COL_NOTIFY),\", \"where, whereArgs, null);\", \"if (cursor.moveToFirst()) {\", \"mNotifyCheck.setChecked(this.notify == 1);\", \"getLoaderManager().destroyLoader(cursorLoader.getId());\", \"} else if (FEED_SETTINGS_LOADER == cursorLoader.getId()) {\", \"if (cursor.getCount() == 1 && cursor.moveToFirst()) {\", \"this.notify = cursor.getInt(0);\", \"} else {\", \"this.notify = 0;\", \"}\", \"mNotifyCheck.setChecked(this.notify == 1);\", \"RssDatabaseService.markItemAsRead(getActivity(), rssItem.id);\"]"}, {"project": "Feeder", "commit_id": "7531d9d1317511c7723ba00c0398fde7b262008e", "time_stamp": 1419246563, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_reader.xml"}], "find_interval": null, "la": 6, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"menuItem.setTitle(onlyUnread ? R.string.show_unread_items : R.string.show_all_items);\", \"} else {\", \"menuItem.setIcon(R.drawable.ic_action_visibility);\", \"} else {\", \"menuItem.setIcon(R.drawable.ic_action_visibility);\", \"menuItem.setTitle(onlyUnread ? R.string.show_unread_items : R.string.show_all_items);\"]"}, {"project": "Feeder", "commit_id": "5369335388aa10a56210c3f2f85c4299d909f186", "time_stamp": 1419246584, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"0345f6370bc3c2287c22db12e7e58fb7d661e7a7\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/padding_header_item.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}], "find_interval": null, "la": 3, "ld": 2, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"548\", \"550\"]}", "rules": null, "clean_lines": "[\"final View v = LayoutInflater.from(parent.getContext())\", \"R.layout.padding_header_item, parent, false);\", \"return new HeaderHolder(v);\"]"}, {"project": "Feeder", "commit_id": "989aa194a50a29f97cb59bc30d97474cde81bf88", "time_stamp": 1419247222, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 13, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"boolean force = false;\", \"if (recyclerView.getAdapter() != null) {\", \"int lastPos = recyclerView.getAdapter().getItemCount() - 1;\", \"if (layoutManager.findLastVisibleItemPosition() == lastPos) {\", \"force = true;\", \"}\", \"}\", \"lastFvi == firstVisibleItem ? 0 : Integer.MAX_VALUE,\", \"force);\", \"private void onMainContentScrolled(int currentY, int deltaY, boolean force) {\", \"autoShowOrHideActionBar(shouldShow | force);\", \"onMainContentScrolled(scrollView.getScrollY(), deltaY, false);\"]"}, {"project": "Feeder", "commit_id": "d4f2c0531f70af75401f79f22701a914d9d524eb", "time_stamp": 1419247424, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}], "find_interval": null, "la": 1, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (id == R.id.action_sync) {\"]"}, {"project": "Feeder", "commit_id": "ddc8d688c53bad4aa25cac89ca3a8f09560234e9", "time_stamp": 1419248083, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssNotifications.java"}], "find_interval": null, "la": 25, "ld": 17, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"NotificationManager nm =\", \"(NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\", \"if (feedItems.isEmpty()) {\", \"nm.cancel(mId);\", \"}\", \"NotificationCompat.Style notStyle;\", \"notStyle = new NotificationCompat.BigTextStyle();\", \"((NotificationCompat.BigTextStyle) notStyle).setBigContentTitle(contentTitle);\", \"contentText = feedItems.get(0).feedtitle + \\\" \\\\u2014 \\\" + feedItems.get(0).plaintitle;\", \"((NotificationCompat.BigTextStyle) notStyle).bigText(contentText);\", \"notStyle = new NotificationCompat.InboxStyle();\", \"((NotificationCompat.InboxStyle) notStyle).setBigContentTitle(contentTitle);\", \"for (FeedItemSQL item : feedItems) {\", \"((NotificationCompat.InboxStyle) notStyle).addLine(item.plaintitle);\", \"contentText += item.feedtitle + \\\" \\\\u2014 \\\" + item.plaintitle + \\\"\\\\n\\\";\", \"}\", \"NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)\", \".setNumber(feedItems.size())\", \".setAutoCancel(true)\", \".setContentText(contentText)\", \"notStyle.setBuilder(mBuilder);\", \"nm.notify(mId, notStyle.build());\"]"}, {"project": "Feeder", "commit_id": "087ee6d44626e443c1ee022f4c85f87c6f863b00", "time_stamp": 1419262956, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"311a4acfb227c91bf6fe4298341b5dcdb017c614\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/runserver.py\": [\"97\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/config-sample.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}, {"type": "add", "modified_path": "server/flaskapp/hashedpassword.py"}, {"type": "add", "modified_path": "server/flaskapp/readconfig.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": 90353, "la": 123, "ld": 28, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "43b3ad8131f482bc25ae40a60a5deecbd8e34159", "time_stamp": 1419344919, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssNotifications.java"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"((NotificationCompat.InboxStyle) notStyle).addLine(item.feedtitle + \\\" \\\\u2014 \\\" + item.plaintitle);\"]"}, {"project": "Feeder", "commit_id": "69493bdc0a1a6d9e000e072ae0119e0f59d37cb0", "time_stamp": 1419346137, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/config-sample.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}, {"type": "modify", "modified_path": "server/flaskapp/readconfig.py"}], "find_interval": null, "la": 43, "ld": 8, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# Generate android hash if stored in plaintext\", \"valid = (userpasshash == password)\", \"from hashlib import sha1\", \"from werkzeug.security import check_password_hash, generate_password_hash\", \"from feeder import gauth\", \"users = conf.get('FEEDER_USERS', {})\", \"print(users)\", \"# Password to try with\", \"password = 'secretpassword'\", \"# Need to use android hash first\", \"bpassword = password.strip().encode('utf-8')\", \"# Then add the salt used by the android client\", \"password = sha1(gauth.__ANDROID_SALT__ + bpassword)\\\\\", \".hexdigest().lower()\", \"username = 'bob'\", \"print(username, password)\", \"# Like in code\", \"if username not in users\", \"# User does not exist\", \"exit(\\\"User does not exist\\\")\", \"valid = False\", \"# Get password\", \"userpass = users[username]\", \"# Stored hashed\", \"if userpass.startswith('pbkdf2:sha1')\", \"'Starts with, check hash'\", \"valid = check_password_hash(userpass, password)\", \"else\", \"'Plain, generate first'\", \"# Generate hash if stored in plaintext\", \"userpasshash = sha1(gauth.__ANDROID_SALT__ + userpass.encode('utf-8')).hexdigest().lower()\", \"#userpasshash = generate_password_hash(userpasshash)\", \"#valid = check_password_hash(userpasshash, password)\", \"valid = userpasshash == password\", \"if valid\", \"print(\\\"valid\\\")\", \"else\", \"print(\\\"Not valid\\\")\"]"}, {"project": "Feeder", "commit_id": "cfb87f725c6bc11dab2649c4875101878ea69cc9", "time_stamp": 1419347815, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"4dec62aa5575cecdfcd7b6fa9a24783d92279625\"]", "fixes": null, "buggy_lines": "{\"server/flaskapp/runsync.py\": [\"13\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/config-sample.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/database.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}, {"type": "modify", "modified_path": "server/flaskapp/runsync.py"}], "find_interval": 6423, "la": 25, "ld": 28, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "839ab228e826732add982d3cf19cbdbed4ca9a87", "time_stamp": 1419348315, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/feeder/read_config.py"}], "find_interval": null, "la": 27, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from yaml import load\", \"from feeder import app\", \"def read_config(filename)\", \"configfile = load_yaml(filename)\", \"for k, v in configfile.items()\", \"if k == 'FEEDER_DATABASE'\", \"v = os.path.abspath(v)\", \"if v.startswith('/')\", \"uri = 'sqlite:///' + v\", \"else\", \"uri = 'sqlite:////' + v\", \"app.config['SQLALCHEMY_DATABASE_URI'] = uri\", \"if k.isupper()\", \"# Uppercase to flask\", \"app.config[k] = v\", \"# Return configfile to interested parties\", \"return configfile\", \"def load_yaml(filename)\", \"'''Read a YAML file'''\", \"with open(filename, 'r') as F\", \"return load(\\\"\\\".join(FILE.readlines()))\"]"}, {"project": "Feeder", "commit_id": "7f4cf349226cf4b7eecd9e2da4afe0585e846867", "time_stamp": 1419348801, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 4, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"else\", \"# Running with uwsgi\", \"configfile = 'config.yaml'\", \"read_config(configfile)\"]"}, {"project": "Feeder", "commit_id": "da0d1333bcf1073cb16b45ff2a927ad0a274504a", "time_stamp": 1419349456, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}], "find_interval": null, "la": 3, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"print(\\\"User not authorized\\\")\", \"else\", \"print(\\\"User authorized:\\\", userid)\"]"}, {"project": "Feeder", "commit_id": "ef4082c2f511146e12a42c7c37a5cd41796303ea", "time_stamp": 1419350556, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/database.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 15, "ld": 20, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"FEEDER_ALLOW_ANY_GOOGLE = False\", \"raise ValueError('No database configured')\", \"else\", \"print('Using database:', app.config['SQLALCHEMY_DATABASE_URI'])\", \"# app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\", \"db = SQLAlchemy(app)\", \"from feeder import app\", \"from .database import db\", \"print(\\\"Getting user\\\")\", \"from .database import db\", \"from feeder import app, read_config\", \"for k, v in read_config(configfile).items()\", \"if k in 'debug,host,port'.split(',')\", \"# Lowercase as kwargs in run\", \"kw[k] = v\"]"}, {"project": "Feeder", "commit_id": "1c54d76950a695c3ec84813ed9e21e91c34393d8", "time_stamp": 1419350790, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 6, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"args = sys.argv[1:]\", \"if '-c' in args\", \"i = args.index('-c')\", \"configfile = args[i + 1]\"]"}, {"project": "Feeder", "commit_id": "5787774e3de510c926f56ef867437d0ee269c4d7", "time_stamp": 1419351171, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}], "find_interval": null, "la": 1, "ld": 9, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"#app.config.from_object(DefaultConfig)\"]"}, {"project": "Feeder", "commit_id": "c204f75f12f3bbf4bb0797cd78fec48f79231350", "time_stamp": 1419352243, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"kw['port'] = int(args[i + 1])\"]"}, {"project": "Feeder", "commit_id": "a1279616ce9685d06d04e658e907ecff2fdd72f2", "time_stamp": 1419352398, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"57dd875d7c4f03ef0336d9fd00cdd9027b13a9b2\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/__init__.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 8, "ld": 4, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/__init__.py\": [\"16\"]}", "rules": null, "clean_lines": "[\"# This configures rest api to run. Do it AFTER config loading\", \"# This configures rest api to run. Do it AFTER config loading\", \"# Convenience for uwsgi\", \"application = app\"]"}, {"project": "Feeder", "commit_id": "311a4acfb227c91bf6fe4298341b5dcdb017c614", "time_stamp": 1419353309, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"087ee6d44626e443c1ee022f4c85f87c6f863b00\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 7, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/runserver.py\": [\"76\"]}", "rules": null, "clean_lines": "[\"from feeder.database import db\", \"# After rest import\", \"ensure_db_exists()\", \"# After rest import\", \"ensure_db_exists()\"]"}, {"project": "Feeder", "commit_id": "4dec62aa5575cecdfcd7b6fa9a24783d92279625", "time_stamp": 1419354238, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"cfb87f725c6bc11dab2649c4875101878ea69cc9\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/runsync.py"}], "find_interval": null, "la": 3, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/runsync.py\": [\"13\"]}", "rules": null, "clean_lines": "[\"from feeder import read_config\", \"# ONly import after config reading\", \"from feeder import sync\"]"}, {"project": "Feeder", "commit_id": "4cb406c3e77d6ecf0856a6d1ebf6a62ed85cb978", "time_stamp": 1419594755, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/requirements.txt"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "4502c7a7501ac448f42c9588fc27b71087f66dbb", "time_stamp": 1419609037, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/docker/Dockerfile"}, {"type": "add", "modified_path": "server/flaskapp/docker/build_docker.sh"}, {"type": "add", "modified_path": "server/flaskapp/docker/run_docker.sh"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "35f2c2110df48743bf4cad05cff08f7f98d82f1a", "time_stamp": 1419638624, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"6c14766429262d9916d5ddf3c4f425f5479cb161\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/model/RssFileHandler.java\": [\"27\", \"29\", \"31\", \"33\", \"35\", \"38\", \"40\", \"41\", \"44\", \"45\", \"47\", \"48\", \"50\", \"53\", \"55\", \"57\", \"58\", \"59\", \"61\", \"62\", \"65\", \"67\", \"68\", \"70\", \"72\", \"73\", \"76\", \"78\", \"79\", \"80\", \"81\", \"82\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"100\", \"101\", \"103\", \"104\", \"105\", \"106\", \"107\", \"108\", \"109\", \"111\", \"112\", \"114\", \"115\", \"116\", \"118\", \"119\", \"121\", \"122\", \"123\", \"125\", \"126\", \"127\", \"128\", \"129\", \"130\", \"131\", \"132\", \"133\", \"134\", \"135\", \"136\", \"138\", \"139\", \"141\", \"142\", \"144\", \"145\", \"147\", \"148\", \"149\", \"150\", \"151\", \"152\", \"153\", \"154\", \"155\", \"157\", \"158\", \"159\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssFileHandler.java"}], "find_interval": 68644, "la": 221, "ld": 30, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "952d3805fca75c251a2d542dd28005dc293c6230", "time_stamp": 1419692477, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"6c14766429262d9916d5ddf3c4f425f5479cb161\", \"ad27c5426e5e03fb1e5f93e52f8d69a191c950ec\"]", "fixes": null, "buggy_lines": "{\"app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java\": [\"48\", \"51\", \"52\", \"54\", \"56\", \"58\", \"61\", \"62\", \"74\", \"87\", \"49\", \"81\", \"82\", \"103\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java\": [\"50\", \"68\", \"70\", \"71\", \"72\", \"73\", \"111\", \"115\", \"100\", \"112\", \"113\", \"117\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java\": [\"26\", \"38\", \"41\", \"32\", \"34\", \"35\", \"45\", \"50\", \"55\", \"77\", \"78\", \"79\", \"81\", \"82\", \"84\", \"85\", \"86\", \"87\", \"88\", \"90\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"100\", \"103\", \"104\", \"106\", \"107\", \"109\", \"110\", \"111\", \"112\", \"113\", \"114\", \"115\", \"116\", \"117\", \"119\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java"}, {"type": "modify", "modified_path": "app/src/main/AndroidManifest.xml"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java"}], "find_interval": 14791, "la": 435, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "6c14766429262d9916d5ddf3c4f425f5479cb161", "time_stamp": 1419707268, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": true, "fix_by": "[\"ad27c5426e5e03fb1e5f93e52f8d69a191c950ec\"]", "fixes": "[\"952d3805fca75c251a2d542dd28005dc293c6230\", \"35f2c2110df48743bf4cad05cff08f7f98d82f1a\"]", "buggy_lines": "{\"app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java\": [\"33\", \"34\", \"35\", \"36\", \"38\", \"39\", \"40\", \"43\", \"44\", \"45\", \"84\", \"105\", \"125\", \"128\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java\": [\"112\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java\": [\"41\", \"42\", \"45\"], \"app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java\": [\"257\", \"258\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java"}, {"type": "delete", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssFileHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/feed.xml"}], "find_interval": 38782528, "la": 221, "ld": 187, "fix_file_num": 4, "bug_fix_files": "{\"app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java\": [\"48\", \"51\", \"52\", \"54\", \"56\", \"58\", \"61\", \"62\", \"74\", \"87\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java\": [\"50\", \"68\", \"70\", \"71\", \"72\", \"73\", \"111\", \"115\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java\": [\"26\", \"38\", \"41\"], \"app/src/main/java/com/nononsenseapps/feeder/model/RssFileHandler.java\": [\"27\", \"29\", \"31\", \"33\", \"35\", \"38\", \"40\", \"41\", \"44\", \"45\", \"47\", \"48\", \"50\", \"53\", \"55\", \"57\", \"58\", \"59\", \"61\", \"62\", \"65\", \"67\", \"68\", \"70\", \"72\", \"73\", \"76\", \"78\", \"79\", \"80\", \"81\", \"82\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"100\", \"101\", \"103\", \"104\", \"105\", \"106\", \"107\", \"108\", \"109\", \"111\", \"112\", \"114\", \"115\", \"116\", \"118\", \"119\", \"121\", \"122\", \"123\", \"125\", \"126\", \"127\", \"128\", \"129\", \"130\", \"131\", \"132\", \"133\", \"134\", \"135\", \"136\", \"138\", \"139\", \"141\", \"142\", \"144\", \"145\", \"147\", \"148\", \"149\", \"150\", \"151\", \"152\", \"153\", \"154\", \"155\", \"157\", \"158\", \"159\"]}", "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "894d3ca2cf79ffbf1622f93309eb035ed947be00", "time_stamp": 1419707283, "is_fix": false, "classification": "Merge", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "eeb546468b443ef52c67d0dc6018f5dd03d20bcf", "time_stamp": 1419724669, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "graphics/Screenshot_2014-12-28-00-43-24.png"}, {"type": "add", "modified_path": "graphics/Screenshot_2014-12-28-00-43-37.png"}, {"type": "add", "modified_path": "graphics/Screenshot_2014-12-28-00-43-46.png"}, {"type": "add", "modified_path": "graphics/Screenshot_2014-12-28-00-44-02.png"}, {"type": "add", "modified_path": "graphics/Screenshot_2014-12-28-00-44-18.png"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "abc26bf71a8c324346e127fdd9b11b1234eedd6f", "time_stamp": 1419724872, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "fb82a0629722f47254799139d5630d7e4d75797e", "time_stamp": 1427317232, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/layout/list_story_item_layout.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed_result.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed_tag.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "7ba1b2bc4e49c017ed93dfba7428a7194443c6ab", "time_stamp": 1427320378, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ImageTextLoader.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/ListStoryItem.java"}], "find_interval": null, "la": 54, "ld": 49, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"final RequestManager g;\", \"g = Glide.with(appContext);\", \"if (shrunk || hasSize) {\", \"Log.d(\\\"JONAS2\\\", \\\"Resizing with library\\\");\", \"b = g.load(source).asBitmap().fitCenter().into(w, h).get();\", \"b = g.load(source).asBitmap().fitCenter().into(maxSize.x, maxSize.y).get();\", \"b = g.load(source).asBitmap().fitCenter().into(maxSize.x, maxSize.y).get();\", \"} catch (InterruptedException | ExecutionException e) {\", \"final Bitmap b = g.load(video.imageurl).asBitmap().fitCenter().into(maxSize.x, maxSize.y).get();\", \"w1 = b.getWidth();\", \"h1 = b.getHeight();\", \"} catch (InterruptedException | ExecutionException e) {\", \"Glide.with(FeedFragment.this).load(rssItem.imageurl).centerCrop().into(imageView);\", \"layoutView(mStoryImage, getRight() - imgWidth, 0, imgWidth, currentTop);//getMeasuredHeightWithMargins(mStoryImage));\"]"}, {"project": "Feeder", "commit_id": "7093613e55d6c18de448e38a814ef02e38450bda", "time_stamp": 1428682816, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderFragment.java"}], "find_interval": null, "la": 16, "ld": 16, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (filename != null) {\", \"}\", \"switch (menuItem.getItemId()) {\", \"case R.id.action_open_in_browser\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(mRssItem.link)));\", \"return true;\", \"case R.id.action_open_enclosure\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(mRssItem.enclosurelink)));\", \"return true;\", \"default\", \"return super.onOptionsItemSelected(menuItem);\"]"}, {"project": "Feeder", "commit_id": "9ba33a9a28d78f7eeb42443fb41b5c19be0699f8", "time_stamp": 1428682831, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/menu/reader.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "71c140ba612129b7d4e349bd4d9158e2eb33adb0", "time_stamp": 1428682877, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/res/menu/contextmenu_feedfragment.xml"}], "find_interval": null, "la": 107, "ld": 9, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private ActionMode mActionMode = null;\", \"private FeedItemSQL mSelectedItem = null;\", \"private ActionMode.Callback mActionModeCallback = new ActionMode.Callback() {\", \"@Override\", \"public boolean onCreateActionMode(ActionMode mode, Menu menu) {\", \"MenuInflater inflater = mode.getMenuInflater();\", \"inflater.inflate(R.menu.contextmenu_feedfragment, menu);\", \"menu.findItem(R.id.action_open_enclosure).setVisible(mSelectedItem.enclosurelink != null);\", \"if (mSelectedItem.enclosurelink != null) {\", \"String filename = mSelectedItem.getEnclosureFilename();\", \"if (filename != null) {\", \"menu.findItem(R.id.action_open_enclosure).setTitle(filename);\", \"}\", \"}\", \"return true;\", \"}\", \"@Override\", \"public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\", \"return false; // Return false if nothing is done\", \"}\", \"@Override\", \"public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\", \"switch (item.getItemId()) {\", \"case R.id.action_open_in_browser\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(mSelectedItem.link)));\", \"mode.finish(); // Action picked, so close the CAB\", \"return true;\", \"case R.id.action_open_enclosure\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(mSelectedItem.enclosurelink)));\", \"mode.finish(); // Action picked, so close the CAB\", \"return true;\", \"default\", \"return false;\", \"}\", \"}\", \"@Override\", \"public void onDestroyActionMode(ActionMode mode) {\", \"mActionMode = null;\", \"mSelectedItem = null;\", \"}\", \"};\", \"if (cursor.getCount() == 1 && cursor.moveToFirst()) {\", \"this.notify = cursor.getInt(0);\", \"} else {\", \"this.notify = 0;\", \"}\", \"implements View.OnClickListener, View.OnLongClickListener, ViewTreeObserver.OnPreDrawListener {\", \"v.setOnLongClickListener(this);\", \"if (mActionMode != null) {\", \"mActionMode.finish();\", \"}\", \"@Override\", \"public boolean onLongClick(View view) {\", \"mSelectedItem = this.rssItem;\", \"if (mActionMode == null) {\", \"mActionMode = getActivity().startActionMode(mActionModeCallback);\", \"view.setActivated(true);\", \"}\", \"mActionMode.setSubtitle(mSelectedItem.title);\", \"mActionMode.setTitle(\\\"Selected\\\");\", \"return true;\", \"}\"]"}, {"project": "Feeder", "commit_id": "aa420fd73ca0b3b675c513e14a3b84e5dd2246c4", "time_stamp": 1430444755, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"71e4d20ea1a59f14447fb9dc2f462bdc9b7cc033\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"525\", \"923\", \"924\"], \"app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java\": [\"65\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"74\", \"75\", \"76\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssDatabaseService.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java"}, {"type": "modify", "modified_path": "app/src/main/res/menu/contextmenu_feedfragment.xml"}], "find_interval": 395015, "la": 418, "ld": 27, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "71e4d20ea1a59f14447fb9dc2f462bdc9b7cc033", "time_stamp": 1430839770, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"aa420fd73ca0b3b675c513e14a3b84e5dd2246c4\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java"}], "find_interval": null, "la": 37, "ld": 16, "fix_file_num": 2, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java\": [\"525\", \"923\", \"924\"], \"app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java\": [\"65\", \"67\", \"68\", \"69\", \"70\", \"71\", \"72\", \"74\", \"75\", \"76\"]}", "rules": null, "clean_lines": "[\"private static final String TAG = \\\"RssContentProvider\\\";\", \"Log.d(TAG, \\\"Notifying change: \\\" + uri.toString());\", \"private static final String TAG = \\\"FeedFragment\\\";\", \"Log.d(TAG, \\\"onLoaderReset FeedItem\\\");\", \"if (!isDetached() && getActivity() != null) {\", \"try {\", \"Glide.with(FeedFragment.this).load(rssItem.imageurl).centerCrop().into(imageView);\", \"} catch (IllegalArgumentException e) {\", \"Log.d(TAG, e.getLocalizedMessage());\", \"}\", \"private static final String TAG = \\\"DeltaCursorLoader\\\";\", \"Log.d(TAG, \\\"loadInBackground\\\");\", \"Cursor oldCursor = mCursor;\", \"mCursor = cursor;\", \"Log.d(TAG, \\\"Time to close...\\\");\", \"if (oldCursor != null && oldCursor != cursor) {\", \"Log.d(TAG, \\\"Closing oldCursor.\\\");\", \"oldCursor.close();\", \"Log.d(TAG, \\\"Cursor was null, returning null\\\");\", \"if (isReset()) {\", \"return;\", \"}\", \"Log.d(TAG, \\\"Delivering result\\\");\", \"} else {\", \"Log.d(TAG, \\\"Not started, so not delivering\\\");\"]"}, {"project": "Feeder", "commit_id": "80fbf6ca3ef9bae739aa7cd73b078e7b8bf652fb", "time_stamp": 1430845795, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/SwipeDismissTouchListener.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/list_story_item_layout.xml"}], "find_interval": null, "la": 314, "ld": 50, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if (position >= mItems.size()) {\", \"return -3;\", \"} else {\", \"return mItems.get(position).id;\", \"}\", \"return 2 + mItems.size();\", \"if (position == 0 || (position - 1) >= mItems.size()) {\", \"holder.resetView();\", \"holder.fillTitle();\", \"public final View view;\", \"this.view = v;\", \"v.setOnTouchListener(new SwipeDismissTouchListener(v, null, new SwipeDismissTouchListener.DismissCallbacks() {\", \"@Override\", \"public boolean canDismiss(Object token) {\", \"return rssItem != null;\", \"}\", \"@Override\", \"public void onDismiss(View view, Object token) {\", \"rssItem.setUnread(!rssItem.isUnread());\", \"if (!PrefUtils.isShowOnlyUnread(getActivity())) {\", \"fillTitle();\", \"resetView();\", \"} else {\", \"mItems.remove(rssItem);\", \"}\", \"if (rssItem.isUnread()) {\", \"RssDatabaseService.markItemAsUnread(getActivity(), rssItem.id);\", \"} else {\", \"RssDatabaseService.markItemAsRead(getActivity(), rssItem.id);\", \"}\", \"}\", \"}));\", \"}\", \"public void resetView() {\", \"view.setAlpha(1.0f);\", \"view.setTranslationX(0.0f);\", \"}\", \"public void fillTitle() {\", \"if (rssItem.plaintitle == null) {\", \"titleTextView.setVisibility(View.GONE);\", \"} else {\", \"titleTextView.setVisibility(View.VISIBLE);\", \"temps = (rssItem.plainsnippet == null || rssItem.plainsnippet.isEmpty()) ?\", \"rssItem.plaintitle\", \"rssItem.plaintitle + \\\" \\\\u2014 \\\" + rssItem.plainsnippet + \\\"\\\\u2026\\\";\", \"Spannable textSpan = new SpannableString(temps);\", \"textSpan.setSpan(new ForegroundColorSpan(readTextColor),\", \"rssItem.plaintitle.length(), temps.length(),\", \"Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"textSpan.setSpan(new ForegroundColorSpan(rssItem.isUnread() ?\", \"unreadTextColor\", \"readTextColor),\", \"0, rssItem.plaintitle.length(),\", \"Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\", \"titleTextView.setText(textSpan);\", \"}\", \"public class SwipeDismissTouchListener implements View.OnTouchListener {\", \"private int mSlop;\", \"private int mMinFlingVelocity;\", \"private int mMaxFlingVelocity;\", \"private long mAnimationTime;\", \"private View mView;\", \"private DismissCallbacks mCallbacks;\", \"private int mViewWidth = 1; // 1 and not 0 to prevent dividing by zero\", \"private float mDownX;\", \"private float mDownY;\", \"private boolean mSwiping;\", \"private int mSwipingSlop;\", \"private Object mToken;\", \"private VelocityTracker mVelocityTracker;\", \"private float mTranslationX;\", \"public interface DismissCallbacks {\", \"boolean canDismiss(Object token);\", \"void onDismiss(View view, Object token);\", \"}\", \"public SwipeDismissTouchListener(View view, Object token, DismissCallbacks callbacks) {\", \"ViewConfiguration vc = ViewConfiguration.get(view.getContext());\", \"mSlop = vc.getScaledTouchSlop();\", \"mMinFlingVelocity = vc.getScaledMinimumFlingVelocity() * 16;\", \"mMaxFlingVelocity = vc.getScaledMaximumFlingVelocity();\", \"mAnimationTime = view.getContext().getResources().getInteger(\", \"android.R.integer.config_shortAnimTime);\", \"mView = view;\", \"mToken = token;\", \"mCallbacks = callbacks;\", \"}\", \"@Override\", \"public boolean onTouch(View view, MotionEvent motionEvent) {\", \"motionEvent.offsetLocation(mTranslationX, 0);\", \"if (mViewWidth < 2) {\", \"mViewWidth = mView.getWidth();\", \"}\", \"switch (motionEvent.getActionMasked()) {\", \"case MotionEvent.ACTION_DOWN: {\", \"mDownX = motionEvent.getRawX();\", \"mDownY = motionEvent.getRawY();\", \"if (mCallbacks.canDismiss(mToken)) {\", \"mVelocityTracker = VelocityTracker.obtain();\", \"mVelocityTracker.addMovement(motionEvent);\", \"}\", \"return false;\", \"}\", \"case MotionEvent.ACTION_UP: {\", \"if (mVelocityTracker == null) {\", \"break;\", \"}\", \"float deltaX = motionEvent.getRawX() - mDownX;\", \"mVelocityTracker.addMovement(motionEvent);\", \"mVelocityTracker.computeCurrentVelocity(1000);\", \"float velocityX = mVelocityTracker.getXVelocity();\", \"float absVelocityX = Math.abs(velocityX);\", \"float absVelocityY = Math.abs(mVelocityTracker.getYVelocity());\", \"boolean dismiss = false;\", \"boolean dismissRight = false;\", \"if (Math.abs(deltaX) > mViewWidth / 2 && mSwiping) {\", \"dismiss = true;\", \"dismissRight = deltaX > 0;\", \"} else if (mMinFlingVelocity <= absVelocityX && absVelocityX <= mMaxFlingVelocity\", \"&& absVelocityY < absVelocityX\", \"&& absVelocityY < absVelocityX && mSwiping) {\", \"dismiss = (velocityX < 0) == (deltaX < 0);\", \"dismissRight = mVelocityTracker.getXVelocity() > 0;\", \"}\", \"if (dismiss) {\", \"mView.animate()\", \".translationX(dismissRight ? mViewWidth : -mViewWidth)\", \".alpha(0)\", \".setDuration(mAnimationTime)\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"performDismiss();\", \"}\", \"});\", \"} else if (mSwiping) {\", \"mView.animate()\", \".translationX(0)\", \".alpha(1)\", \".setDuration(mAnimationTime)\", \".setListener(null);\", \"}\", \"mVelocityTracker.recycle();\", \"mVelocityTracker = null;\", \"mTranslationX = 0;\", \"mDownX = 0;\", \"mDownY = 0;\", \"mSwiping = false;\", \"break;\", \"}\", \"case MotionEvent.ACTION_CANCEL: {\", \"if (mVelocityTracker == null) {\", \"break;\", \"}\", \"mView.animate()\", \".translationX(0)\", \".alpha(1)\", \".setDuration(mAnimationTime)\", \".setListener(null);\", \"mVelocityTracker.recycle();\", \"mVelocityTracker = null;\", \"mTranslationX = 0;\", \"mDownX = 0;\", \"mDownY = 0;\", \"mSwiping = false;\", \"break;\", \"}\", \"case MotionEvent.ACTION_MOVE: {\", \"if (mVelocityTracker == null) {\", \"break;\", \"}\", \"mVelocityTracker.addMovement(motionEvent);\", \"float deltaX = motionEvent.getRawX() - mDownX;\", \"float deltaY = motionEvent.getRawY() - mDownY;\", \"if (Math.abs(deltaX) > mSlop && Math.abs(deltaY) < Math.abs(deltaX) / 2) {\", \"mSwiping = true;\", \"mSwipingSlop = (deltaX > 0 ? mSlop : -mSlop);\", \"mView.getParent().requestDisallowInterceptTouchEvent(true);\", \"MotionEvent cancelEvent = MotionEvent.obtain(motionEvent);\", \"cancelEvent.setAction(MotionEvent.ACTION_CANCEL |\", \"(motionEvent.getActionIndex() <<\", \"MotionEvent.ACTION_POINTER_INDEX_SHIFT));\", \"mView.onTouchEvent(cancelEvent);\", \"cancelEvent.recycle();\", \"}\", \"if (mSwiping) {\", \"mTranslationX = deltaX;\", \"mView.setTranslationX(deltaX - mSwipingSlop);\", \"mView.setAlpha(Math.max(0f, Math.min(1f,\", \"1f - 2f * Math.abs(deltaX) / mViewWidth)));\", \"return true;\", \"}\", \"break;\", \"}\", \"}\", \"return false;\", \"}\", \"private void performDismiss() {\", \"mCallbacks.onDismiss(mView, mToken);\", \"}\", \"}\"]"}, {"project": "Feeder", "commit_id": "668452f9c6f3eb4c0994299a545369b37b6afb18", "time_stamp": 1430847105, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/SwipeDismissTouchListener.java"}], "find_interval": null, "la": 13, "ld": 11, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"return a.isUnread() == b.isUnread() &&\", \"for (FeedItemSQL item : map.keySet()) {\", \"for (FeedItemSQL item : oldItemMap.values()) {\", \"return 2 + mItems.size();\", \"view.clearAnimation();\", \"private final FastOutLinearInInterpolator mInterpolator;\", \"mInterpolator = new FastOutLinearInInterpolator();\", \"mView.setAlpha(mInterpolator.getInterpolation(1f - 1f * Math.abs(deltaX) / mViewWidth));\"]"}, {"project": "Feeder", "commit_id": "06f1085e655309f78606c98384007bcd4b8a4529", "time_stamp": 1430904435, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/cleaner.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 7, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# Set original json representation on item also\", \"feeditem.json = json.dumps(item)\", \"json = Column(Text)\", \"'read': FieldBool(default=False),\", \"'json': fields.String\"]"}, {"project": "Feeder", "commit_id": "a466df2d1470c55dc9374e7922958292b13138c5", "time_stamp": 1430907398, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 12, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private static final int DATABASE_VERSION = 4;\", \"sqLiteDatabase.execSQL(\\\"ALTER TABLE FeedItem ADD COLUMN json TEXT;\\\");\", \"public static final String COL_JSON = \\\"json\\\";\", \"COL_NOTIFIED,\", \"COL_JSON};\", \"COL_JSON + \\\" TEXT,\\\" \", \"public String json = null;\", \"this.json = cursor.getString(15);\", \"Util.PutNullable(values, COL_JSON, json);\", \".withValue(FeedItemSQL.COL_JSON, item.json)\", \"public String json;\"]"}, {"project": "Feeder", "commit_id": "ee3ec7c172f216ca2bcfd7b68e0d58c8dd835c3f", "time_stamp": 1430916304, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 20, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from datetime import datetime, timedelta\", \"# First clear out old items\", \"delete_old_items(feed.id)\", \"def delete_old_items(feed_id, days=14)\", \"'''\", \"Clear out old items so the database doesn't grow too much.\", \"By default, items are deleted when they are 14 days old.\", \"Args\", \"feed_id - The feed to clear for\", \"days - By default items older than [14] days are deleted\", \"'''\", \"dt = datetime.utcnow() - timedelta(days=days)\", \"FeedItem.query.filter(FeedItem.timestamp < dt,\", \"FeedItem.feed_id == feed_id).delete()\", \"db.session.commit()\"]"}, {"project": "Feeder", "commit_id": "e09c6fdb6298c2baa0f90fb11a6583de0c2a4cad", "time_stamp": 1430918938, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "45f1f840d6ce6cc02db13c16efeab5a4ee286e9f", "time_stamp": 1430918967, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 68, "ld": 10, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private static final String TAG = \\\"FeedItemSQL\\\";\", \"private JSONObject jsonobject = null;\", \"public JSONObject getJson() {\", \"if (this.json == null) {\", \"return null;\", \"}\", \"if (this.jsonobject == null) {\", \"try {\", \"this.jsonobject = new JSONObject(this.json);\", \"} catch (JSONException e) {\", \"Log.d(TAG, e.getLocalizedMessage());\", \"}\", \"}\", \"return this.jsonobject;\", \"}\", \"public String getTorrentMagnetURI() {\", \"JSONObject json = getJson();\", \"if (json == null) {\", \"return null;\", \"}\", \"if (json.has(\\\"torrent_magneturi\\\")) {\", \"try {\", \"return json.getString(\\\"torrent_magneturi\\\");\", \"} catch (JSONException e) {\", \"Log.d(TAG, e.getLocalizedMessage());\", \"return null;\", \"}\", \"} else {\", \"return null;\", \"}\", \"}\", \"boolean empty = mAdapter.getItemCount() <= 2;\", \"titleText.append(\\\" \\\\u2014 \\\");\", \"String magnet = holder.rssItem.getTorrentMagnetURI();\", \"if (magnet != null) {\", \"titleText.append(magnet);\", \"} else if (holder.rssItem.enclosurelink != null) {\", \"titleText.append(holder.rssItem.getEnclosureFilename());\", \"titleText.append(holder.rssItem.getDomain());\", \"String magnet = rssItem.getTorrentMagnetURI();\", \"if (magnet != null) {\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(magnet)));\", \"} else {\", \"startActivity(new Intent(Intent.ACTION_VIEW,\", \"Uri.parse(rssItem.enclosurelink != null ?\", \"rssItem.enclosurelink\", \"rssItem.link)));\", \"}\"]"}, {"project": "Feeder", "commit_id": "bf454e49095493bba310af2394aa65c4f581433c", "time_stamp": 1430919529, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 37, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"return getJSONString(\\\"torrent_magneturi\\\");\", \"}\", \"public String getTorrentSeeds() {\", \"return getJSONString(\\\"torrent_seeds\\\");\", \"}\", \"public String getTorrentPeers() {\", \"return getJSONString(\\\"torrent_peers\\\");\", \"}\", \"public String getTorrentVerified() {\", \"return getJSONString(\\\"torrent_verified\\\");\", \"}\", \"protected String getJSONString(final String name) {\", \"if (json.has(name)) {\", \"return json.getString(name);\", \"boolean needDash = false;\", \"String seeds = holder.rssItem.getTorrentSeeds();\", \"if (seeds != null) {\", \"titleText.append(\\\"S(\\\").append(seeds).append(\\\") \\\");\", \"needDash = true;\", \"}\", \"String peers = holder.rssItem.getTorrentPeers();\", \"if (peers != null) {\", \"titleText.append(\\\"P(\\\").append(peers).append(\\\") \\\");\", \"needDash = true;\", \"}\", \"String verified = holder.rssItem.getTorrentVerified();\", \"if (verified != null) {\", \"titleText.append(\\\"V(\\\").append(verified).append(\\\") \\\");\", \"needDash = true;\", \"}\", \"if (needDash) {\", \"titleText.append(\\\"\\\\u2014 \\\");\", \"}\", \"titleText.append(\\\"magnet\\\");\"]"}, {"project": "Feeder", "commit_id": "1b61a4392f841151fcd99e2e1d114811af2a295f", "time_stamp": 1430920380, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java"}], "find_interval": null, "la": 2, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"item.getJson();\"]"}, {"project": "Feeder", "commit_id": "96335a8c084e5469dfd7f1d6fc42a897afc08566", "time_stamp": 1431430752, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/sync_progress_indicator.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 100, "ld": 35, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"listView.addOnScrollListener(new RecyclerView.OnScrollListener() {\", \"if (id == R.id.action_add) {\", \"private RecyclerView mRecyclerView;\", \"private SwipeRefreshLayout mSwipeRefreshLayout;\", \"private final BroadcastReceiver mSyncReceiver;\", \"mSyncReceiver = new BroadcastReceiver() {\", \"@Override\", \"public void onReceive(Context context, Intent intent) {\", \"if (RssSyncAdapter.SYNC_BROADCAST.equals(intent.getAction())) {\", \"onSyncBroadcast(intent.getBooleanExtra(RssSyncAdapter.SYNC_BROADCAST_IS_ACTIVE, false));\", \"}\", \"}\", \"};\", \"mRecyclerView = (RecyclerView) rootView.findViewById(android.R.id.list);\", \"mSwipeRefreshLayout = (SwipeRefreshLayout) rootView.findViewById(R.id.swiperefresh);\", \"final int toolbarHeight = getResources().getDimensionPixelOffset(R.dimen.toolbar_height);\", \"mSwipeRefreshLayout.setProgressViewOffset(true, toolbarHeight, Math.round(1.5f * toolbarHeight));\", \"mSwipeRefreshLayout.setColorSchemeResources(\", \"R.color.refresh_progress_1,\", \"R.color.refresh_progress_2,\", \"R.color.refresh_progress_3);\", \"mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\", \"@Override\", \"public void onRefresh() {\", \"boolean syncing = syncOrConfig();\", \"if (!syncing) {\", \"mSwipeRefreshLayout.setRefreshing(false);\", \"}\", \"}\", \"});\", \"public boolean syncOrConfig() {\", \"if (null == AuthHelper.getSavedAccountName(getActivity())) {\", \"DialogFragment dialog = new AccountDialog();\", \"dialog.show(getFragmentManager(), \\\"account_dialog\\\");\", \"return false;\", \"} else {\", \"RssContentProvider.RequestSync(getActivity());\", \"return true;\", \"}\", \"}\", \"private void onSyncBroadcast(boolean syncing) {\", \"if (mSwipeRefreshLayout.isRefreshing() != syncing) {\", \"mSwipeRefreshLayout.setRefreshing(syncing);\", \"}\", \"}\", \"ActionBar ab = ((BaseActivity) getActivity()).getSupportActionBar();\", \"if (ab != null) {\", \"ab.setTitle(title);\", \"}\", \"LocalBroadcastManager.getInstance(getActivity()).registerReceiver(mSyncReceiver, new IntentFilter(RssSyncAdapter.SYNC_BROADCAST));\", \"}\", \"@Override\", \"public void onPause() {\", \"LocalBroadcastManager.getInstance(getActivity()).unregisterReceiver(mSyncReceiver);\", \"mSwipeRefreshLayout.setRefreshing(false);\", \"super.onPause();\", \"if (id == R.id.action_sync) {\", \"mSwipeRefreshLayout.setRefreshing(true);\", \"boolean syncing = syncOrConfig();\", \"if (mSwipeRefreshLayout.isRefreshing() != syncing) {\", \"mSwipeRefreshLayout.setRefreshing(syncing);\", \"}\", \"return true;\", \"} else if (id == R.id.action_edit_feed && this.id > 0) {\", \"mSwipeRefreshLayout.setVisibility(empty ? View.GONE : View.VISIBLE);\"]"}, {"project": "Feeder", "commit_id": "60af6724c158327b7ea5da05e59ff6190e6e9f3a", "time_stamp": 1431437986, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_navigation_expand_less.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_navigation_expand_more.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_navigation_expand_less.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_navigation_expand_more.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_navigation_expand_less.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_navigation_expand_more.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_navigation_expand_less.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_navigation_expand_more.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxxhdpi/ic_navigation_expand_less.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxxhdpi/ic_navigation_expand_more.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable/feed_group_indicator.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/tinted_expand_less.xml"}, {"type": "add", "modified_path": "app/src/main/res/drawable/tinted_expand_more.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/toolbar_actionbar.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "121a1bdb338762c099e6812f0c41835164da1643", "time_stamp": 1431438245, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "9f296567ce5725f561d66f28ec997849187d15ef", "time_stamp": 1431439213, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/LPreviewUtilsBase.java"}], "find_interval": null, "la": 9, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"ActionBar ab = getSupportActionBar();\", \"if (ab != null) {\", \"ab.setDisplayHomeAsUpEnabled(true);\", \"ab.setHomeButtonEnabled(true);\", \"}\", \"R.string.navigation_drawer_open,\"]"}, {"project": "Feeder", "commit_id": "860ec9de8692f272e8ebf4aaf3bca0e9355730b7", "time_stamp": 1431439722, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}], "find_interval": null, "la": 26, "ld": 11, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"switch (id) {\", \"case android.R.id.home\", \"if (mShouldFinishBack) {\", \"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\", \"finishAfterTransition();\", \"} else {\", \"finish();\", \"}\", \"} else {\", \"Intent intent = new Intent(this, FeedActivity.class);\", \"intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\", \"startActivity(intent);\", \"finish();\", \"}\", \"return true;\", \"default\", \"return super.onOptionsItemSelected(item);\", \"private static final String TAG = \\\"ReaderActivity\\\";\", \"ActionBar ab = getSupportActionBar();\", \"if (ab != null) {\", \"ab.setDisplayHomeAsUpEnabled(true);\", \"ab.setHomeButtonEnabled(true);\", \"ab.setDisplayShowTitleEnabled(false);\", \"}\"]"}, {"project": "Feeder", "commit_id": "bbf004cb8f8ca415002ee2a332b43092d5157b86", "time_stamp": 1431442153, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_reader.xml"}], "find_interval": null, "la": 6, "ld": 3, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"view.setTransitionName(\\\"shareditem\\\");\", \"ActivityOptionsCompat options = ActivityOptionsCompat.makeSceneTransitionAnimation(getActivity(), view, \\\"shareditem\\\");\"]"}, {"project": "Feeder", "commit_id": "35be26d18a27d0ebc5bfc821986bd04adfe02168", "time_stamp": 1431447349, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/SwipeDismissTouchListener.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/list_story_item.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/colors.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 114, "ld": 16, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private final View bgFrame;\", \"private final View checkLeft;\", \"private final View checkRight;\", \"private final View checkBg;\", \"checkBg = v.findViewById(R.id.check_bg);\", \"checkLeft = v.findViewById(R.id.check_left);\", \"checkRight = v.findViewById(R.id.check_right);\", \"bgFrame = v.findViewById(R.id.swiping_item);\", \"this.view = v;\", \"v.setOnClickListener(this);\", \"v.setOnLongClickListener(this);\", \"@Override\", \"public void onSwipeStarted(boolean goingRight) {\", \"mSwipeRefreshLayout.setEnabled(false);\", \"TypedValue typedValue = new TypedValue();\", \"getActivity().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\", \"bgFrame.setBackgroundColor(typedValue.data);\", \"checkBg.setVisibility(View.VISIBLE);\", \"if (goingRight) {\", \"checkLeft.setVisibility(View.VISIBLE);\", \"} else {\", \"checkRight.setVisibility(View.VISIBLE);\", \"}\", \"}\", \"@Override\", \"public void onSwipeCancelled() {\", \"mSwipeRefreshLayout.setEnabled(true);\", \"checkBg.setVisibility(View.INVISIBLE);\", \"checkLeft.setVisibility(View.INVISIBLE);\", \"checkRight.setVisibility(View.INVISIBLE);\", \"bgFrame.setBackground(null);\", \"}\", \"@Override\", \"public View getSwipingView() {\", \"return bgFrame;\", \"}\", \"checkBg.setVisibility(View.INVISIBLE);\", \"checkLeft.setVisibility(View.INVISIBLE);\", \"checkRight.setVisibility(View.INVISIBLE);\", \"bgFrame.clearAnimation();\", \"bgFrame.setAlpha(1.0f);\", \"bgFrame.setTranslationX(0.0f);\", \"bgFrame.setBackground(null);\", \"private final View mSwipingView;\", \"private boolean notNotifiedSwipeStart = true;\", \"void onSwipeStarted(boolean goingRight);\", \"void onSwipeCancelled();\", \"View getSwipingView();\", \"mSwipingView = callbacks.getSwipingView();\", \"mSwipingView.animate()\", \"mSwipingView.animate()\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"mCallbacks.onSwipeCancelled();\", \"}\", \"});\", \"notNotifiedSwipeStart = true;\", \"mSwipingView.animate()\", \".setListener(new AnimatorListenerAdapter() {\", \"@Override\", \"public void onAnimationEnd(Animator animation) {\", \"mCallbacks.onSwipeCancelled();\", \"}\", \"});\", \"notNotifiedSwipeStart = true;\", \"if (notNotifiedSwipeStart) {\", \"notNotifiedSwipeStart = false;\", \"mCallbacks.onSwipeStarted(deltaX > 0);\", \"}\", \"mSwipingView.setTranslationX(deltaX - mSwipingSlop);\"]"}, {"project": "Feeder", "commit_id": "d5e2358aa0c94339083bcf6477b60c85cdda26e3", "time_stamp": 1431449333, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/PrefUtils.java"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_communication_invert_colors_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-hdpi/ic_action_communication_invert_colors_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_communication_invert_colors_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-mdpi/ic_action_communication_invert_colors_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_communication_invert_colors_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xhdpi/ic_action_communication_invert_colors_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_communication_invert_colors_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxhdpi/ic_action_communication_invert_colors_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxxhdpi/ic_action_communication_invert_colors_off.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable-xxxhdpi/ic_action_communication_invert_colors_on.png"}, {"type": "add", "modified_path": "app/src/main/res/drawable/nightmode_checkmark.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/attrs.xml"}, {"type": "modify", "modified_path": "app/src/main/res/values/styles.xml"}], "find_interval": null, "la": 56, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"protected void setNightBackground() {\", \"TypedValue typedValue = new TypedValue();\", \"if (PrefUtils.isNightMode(this)) {\", \"getTheme().resolveAttribute(R.attr.nightBGColor, typedValue, true);\", \"} else {\", \"getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\", \"}\", \"getWindow().setBackgroundDrawable(new ColorDrawable(typedValue.data));\", \"}\", \"setNightBackground();\", \"final CheckedTextView nightCheck = (CheckedTextView) findViewById(R.id.nightcheck);\", \"nightCheck.setChecked(PrefUtils.isNightMode(this));\", \"nightCheck.setOnClickListener(new View.OnClickListener() {\", \"@Override\", \"public void onClick(View v) {\", \"nightCheck.toggle();\", \"PrefUtils.setNightMode(FeedActivity.this, nightCheck.isChecked());\", \"setNightBackground();\", \"}\", \"});\", \"if (PrefUtils.isNightMode(getActivity())) {\", \"getActivity().getTheme().resolveAttribute(R.attr.nightBGColor, typedValue, true);\", \"} else {\", \"getActivity().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\", \"}\", \"public static final String PREF_NIGHT_MODE = \\\"pref_night_mode\\\";\", \"public static boolean isNightMode(final Context context) {\", \"return sp(context).getBoolean(PREF_NIGHT_MODE, false);\", \"}\", \"public static void setNightMode(final Context context, final boolean value) {\", \"sp(context).edit().putBoolean(PREF_NIGHT_MODE, value).apply();\", \"}\"]"}, {"project": "Feeder", "commit_id": "81e8389ba63c95974b30c706e3e3a7b2e84974a0", "time_stamp": 1431457790, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/ReaderActivity.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_reader.xml"}, {"type": "delete", "modified_path": "app/src/main/res/transition-v21/shared_element.xml"}, {"type": "delete", "modified_path": "app/src/main/res/transition-v21/window_enter_exit.xml"}], "find_interval": null, "la": 4, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"startActivity(i);\"]"}, {"project": "Feeder", "commit_id": "e71cad208c868d957efdc382dc1271a38f93a35b", "time_stamp": 1431512985, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 9, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# First clear out old items\", \"delete_old_items()\", \"def delete_old_items(days=14)\", \"After this a 'vacuum' is run which removes excess database\", \"pages.\", \"FeedItem.query.filter(FeedItem.timestamp < dt).delete()\", \"db.engine.execute(\\\"vacuum;\\\")\"]"}, {"project": "Feeder", "commit_id": "243bca43b7f4cf23105db7ab417ca6d927ca04fd", "time_stamp": 1431513204, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 4, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"try\", \"print(\\\"No new items, ignoring {}\\\".format(f.title))\", \"except\", \"print(\\\"No new items, ignoring title which I can't print\\\")\"]"}, {"project": "Feeder", "commit_id": "173e1c3fbe77bfa9b81bff38a953300d79ffee90", "time_stamp": 1431513352, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 4, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"try\", \"print(\\\"No new items in {}\\\".format(feed.title))\", \"except\", \"print(\\\"No new items in erroneous title\\\")\"]"}, {"project": "Feeder", "commit_id": "14ad839dccf431042556f5b3888fea856ef21833", "time_stamp": 1431533255, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/createdb.py"}], "find_interval": null, "la": 18, "ld": 10, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"Usage\", \"python createdb.py -c /path/to/config.yaml\", \"Creates the database whose location is specified by the config file.\", \"See config-sample.yaml for details.\", \"from feeder import read_config\", \"if __name__ == '__main__'\", \"if len(sys.argv) != 3 or sys.argv[1] != '-c'\", \"exit(__doc__)\", \"configfile = sys.argv[2]\", \"read_config(configfile)\", \"from feeder.database import db\", \"db.create_all()\", \"exit(\\\"Database created successfully\\\")\"]"}, {"project": "Feeder", "commit_id": "7fef64969810704405a4671fd1b77392c32536c0", "time_stamp": 1431533261, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}], "find_interval": null, "la": 6, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"email = Column(String, nullable=False, unique=True, index=True)\", \"link = Column(String, nullable=False, unique=True, index=True)\", \"timestamp = Column(DateTime, nullable=False, index=True)\", \"timestamp = Column(DateTime, nullable=False, index=True)\", \"link = Column(String, nullable=False, index=True)\", \"timestamp = Column(DateTime, nullable=False, index=True)\"]"}, {"project": "Feeder", "commit_id": "23b12cedde8da077111f9a78c86aa24f6e92e978", "time_stamp": 1431557068, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/db-exec.py"}], "find_interval": null, "la": 31, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"'''\", \"Usage\", \"python db-exec.py -c /path/to/config.yaml\", \"Executes SQL against the database whose location is specified by the\", \"config file.\", \"See config-sample.yaml for details.\", \"'''\", \"from feeder import read_config\", \"if __name__ == '__main__'\", \"if len(sys.argv) != 3 or sys.argv[1] != '-c'\", \"exit(__doc__)\", \"configfile = sys.argv[2]\", \"read_config(configfile)\", \"from feeder.database import db\", \"# Use db.engine.execute(\\\"\\\")\", \"db.engine.execute(\\\"CREATE INDEX ix_feeds_timestamp ON feeds (timestamp);\\\")\", \"db.engine.execute(\\\"CREATE UNIQUE INDEX ix_feeds_link ON feeds (link);\\\")\", \"db.engine.execute(\\\"CREATE UNIQUE INDEX ix_users_email ON users (email);\\\")\", \"db.engine.execute(\\\"CREATE INDEX ix_userdeletions_timestamp ON userdeletions (timestamp);\\\")\", \"db.engine.execute(\\\"CREATE INDEX ix_feeditems_link ON feeditems (link);\\\")\", \"db.engine.execute(\\\"CREATE INDEX ix_feeditems_timestamp ON feeditems (timestamp);\\\")\"]"}, {"project": "Feeder", "commit_id": "0a361473cd6ca91a25456c454926d677101a00f3", "time_stamp": 1431902779, "is_fix": false, "classification": "None", "linked": false, "contains_bug": true, "fix_by": "[\"4836520ab798e878c37e1e97aa3d47db90c2ce45\", \"ad27c5426e5e03fb1e5f93e52f8d69a191c950ec\"]", "fixes": null, "buggy_lines": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java\": [\"696\", \"697\", \"698\", \"699\", \"700\", \"701\", \"703\", \"706\", \"708\", \"709\", \"711\", \"712\", \"715\", \"716\", \"717\", \"718\", \"720\", \"721\", \"724\", \"575\", \"662\", \"752\", \"754\"]}", "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ExpandableSortedList.java"}, {"type": "delete", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/TaggedFeedsAdapter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/DeltaCursorLoader.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/FeedDeltaCursorLoader.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/util/FeedItemDeltaCursorLoader.java"}, {"type": "delete", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/views/FlingingRecyclerView.java"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/view_feed_child.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/view_feed_tag.xml"}], "find_interval": 12431639, "la": 861, "ld": 740, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}, {"project": "Feeder", "commit_id": "156188830352a77541f277ac95564dd5da0a118e", "time_stamp": 1431903611, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/ic_action_communication_invert_colors_off.zip"}, {"type": "add", "modified_path": "app/src/main/ic_action_communication_invert_colors_on.zip"}, {"type": "add", "modified_path": "app/src/main/ic_navigation_expand_less.zip"}, {"type": "add", "modified_path": "app/src/main/ic_navigation_expand_more.zip"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/ExpandableSortedList.java"}], "find_interval": null, "la": 10, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"boolean notify = true;\", \"notify = false;\", \"if (notify) {\", \"mCallback.onChanged(super.indexOf(parent), 1);\", \"}\", \"} else {\", \"mCallback.onChanged(super.indexOf(parent), 1);\"]"}, {"project": "Feeder", "commit_id": "7a63a2fe00b7034a9f799d080aafc80e5c896451", "time_stamp": 1431943104, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 4, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"fh.unreadCount.setVisibility(fh.item.unreadCount > 0 ? View.VISIBLE : View.GONE);\", \"int uc = mItems.getTagUnreadCount(wrap);\", \"th.unreadCount.setText(Integer.toString(uc));\", \"th.unreadCount.setVisibility(uc > 0 ? View.VISIBLE : View.GONE);\"]"}, {"project": "Feeder", "commit_id": "74c19fceae432376ab457f3048459dfca00244df", "time_stamp": 1431943174, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 2, "ld": 2, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"fh.unreadCount.setVisibility(fh.item.unreadCount > 0 ? View.VISIBLE : View.INVISIBLE);\", \"th.unreadCount.setVisibility(uc > 0 ? View.VISIBLE : View.INVISIBLE);\"]"}, {"project": "Feeder", "commit_id": "dbb39d4479781ee398f9f07bb74183878859e09e", "time_stamp": 1433286200, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}, {"type": "delete", "modified_path": "app/src/main/res/anim/floating_button_state_list_anim.xml"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-v21/floating_add_button_ripple_background_off.xml"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-v21/floating_add_button_ripple_background_on.xml"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-w600dp-xxhdpi/add_schedule_fab_unchecked_pressed.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_default.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_focused.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable-xxhdpi/add_schedule_fab_unchecked_pressed.png"}, {"type": "delete", "modified_path": "app/src/main/res/drawable/add_schedule_fab_background.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout-sw600dp/include_snack_fca.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout-sw600dp/include_snackbar.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/activity_feed.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/fragment_feed.xml"}, {"type": "add", "modified_path": "app/src/main/res/layout/include_activity_feed_main.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/include_floating_add_button.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/include_floating_checkall_button.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/include_snack_fca.xml"}, {"type": "delete", "modified_path": "app/src/main/res/layout/include_snackbar.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/navdrawer_for_ab_overlay.xml"}, {"type": "modify", "modified_path": "app/src/main/res/layout/padding_header_item.xml"}, {"type": "delete", "modified_path": "app/src/main/res/mipmap-xxxxhdpi/ic_launcher.png"}, {"type": "modify", "modified_path": "app/src/main/res/values/dimens.xml"}, {"type": "modify", "modified_path": "build.gradle"}], "find_interval": null, "la": 18, "ld": 40, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"mDrawerLayout.openDrawer(GravityCompat.START);\", \"mDrawerLayout.openDrawer(GravityCompat.START);\", \"mDrawerLayout.isDrawerOpen(GravityCompat.START);\", \"mDrawerLayout.closeDrawers();//GravityCompat.START);\", \"mDrawerLayout.closeDrawer(GravityCompat.START);\", \"final int totalToolbarHeight = getResources().getDimensionPixelOffset(R.dimen.total_toolbar_height);\", \"mSwipeRefreshLayout.setProgressViewOffset(false, toolbarHeight, Math.round(1.5f * totalToolbarHeight));\", \"mCheckAllButton = rootView.findViewById(R.id.checkall_button);\"]"}, {"project": "Feeder", "commit_id": "42f79d1c1d419de97b12928e13e871ada6d2d8ef", "time_stamp": 1433632923, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/config-test.yaml"}, {"type": "add", "modified_path": "server/flaskapp/migrate_to_neo.py"}], "find_interval": null, "la": 56, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"'''\", \"Usage\", \"python program -c /path/to/config.yaml\", \"'''\", \"from feeder import read_config\", \"from py2neo import Graph\", \"def presetup(graph)\", \"feed_unique = \\\"CREATE CONSTRAINT ON (feed:Feed) ASSERT feed.link IS UNIQUE\\\"\", \"#feed_index\", \"def migrate_feed(graph, feed)\", \"cph = \\\"\\\"\\\"MERGE (f:Feed {{ link: {link},\", \"title: {title},\", \"description: {description},\", \"timestamp: {timestamp}\", \"{nullables} }})\\\"\\\"\\\"\", \"nullables = ''\", \"if feed.published is not None\", \"nullables += ', published: {}'.format(json.dumps(int(feed.published.timestamp())))\", \"if feed.etag is not None\", \"nullables += ', etag: {}'.format(json.dumps(feed.etag))\", \"if feed.modified is not None\", \"nullables += ', modified: {}'.format(json.dumps(feed.modified))\", \"code = cph.format(link=json.dumps(feed.link),\", \"title=json.dumps(feed.title),\", \"description=json.dumps(feed.description),\", \"timestamp=json.dumps(int(feed.timestamp.timestamp())),\", \"nullables=nullables)\", \"graph.cypher.execute(code)\", \"if __name__ == \\\"__main__\\\"\", \"if len(sys.argv) != 3 or sys.argv[1] != '-c'\", \"exit(__doc__)\", \"graph = Graph('http://neo4j:neo@localhost:7474/db/data/')\", \"presetup(graph)\", \"configfile = sys.argv[2]\", \"read_config(configfile)\", \"from feeder.models import FeedItem, Feed, UserFeed\", \"for feed in Feed.query.all()\", \"migrate_feed(graph, feed)\"]"}, {"project": "Feeder", "commit_id": "68c69a228a574b59d009c676c47022de1e56c08b", "time_stamp": 1433636985, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/migrate_to_neo.py"}], "find_interval": null, "la": 103, "ld": 4, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from datetime import datetime\", \"graph.cypher.execute(\\\"CREATE CONSTRAINT ON (feed:Feed) ASSERT feed.link IS UNIQUE\\\")\", \"#graph.cypher.execute(\\\"CREATE CONSTRAINT ON (item:Item) ASSERT item.link IS UNIQUE\\\")\", \"graph.cypher.execute(\\\"CREATE CONSTRAINT ON (user:User) ASSERT user.email IS UNIQUE\\\")\", \"def migrate_feeditem(graph, f, i)\", \"cph = \\\"\\\"\\\"MERGE (i:Item {{ link: {link},\", \"title: {title},\", \"description: {description},\", \"title_stripped: {title_stripped},\", \"snippet: {snippet},\", \"timestamp: {timestamp}\", \"{nullables} }})\\\"\\\"\\\"\", \"nullables = ''\", \"if i.published is not None\", \"nullables += \\\", published: {}\\\".format(json.dumps(int(i.published.timestamp())))\", \"if i.author is not None\", \"nullables += \\\", author: {}\\\".format(json.dumps(i.author))\", \"if i.comments is not None\", \"nullables += \\\", comments: {}\\\".format(json.dumps(i.comments))\", \"if i.enclosure is not None\", \"nullables += \\\", enclosure: {}\\\".format(json.dumps(i.enclosure))\", \"if i.image is not None\", \"nullables += \\\", image: {}\\\".format(json.dumps(i.image))\", \"# Add for real database\", \"#if i.json is not None\", \"#    nullables += \\\", json: {}\\\".format(json.dumps(i.json))\", \"code = cph.format(link=json.dumps(i.link),\", \"title=json.dumps(i.title),\", \"description=json.dumps(i.description),\", \"timestamp=json.dumps(int(i.timestamp.timestamp())),\", \"title_stripped=json.dumps(i.title_stripped),\", \"snippet=json.dumps(i.snippet),\", \"nullables=nullables)\", \"graph.cypher.execute(code)\", \"# Relation\", \"rel = \\\"\\\"\\\"MATCH (i:Item {{ link: {il} }}), (f:Feed {{link: {fl} }})\", \"CREATE (i)-[:IN]->(f)\\\"\\\"\\\".format(il=json.dumps(i.link),\", \"fl=json.dumps(f.link))\", \"graph.cypher.execute(rel)\", \"def migrate_user(graph, u)\", \"cph = \\\"\\\"\\\"MERGE (u:User {{ email: {email} {nullable} }})\\\"\\\"\\\"\", \"nullable = ''\", \"if u.passwordhash is not None\", \"nullable = ',passwordhash: {pwhash}'.format(pwhash=json.dumps(u.passwordhash))\", \"graph.cypher.execute(cph.format(email=json.dumps(u.email), nullable=nullable))\", \"def migrate_userfeed(graph, u, fl)\", \"# Relation\", \"rel = \\\"\\\"\\\"MATCH (u:User {{ email: {email} }}), (f:Feed {{link: {fl} }})\", \"CREATE (u)-[:SUBSCRIBES {{ timestamp: {ts} }}]->(f)\\\"\\\"\\\"\", \"graph.cypher.execute(rel.format(email=json.dumps(u.email),\", \"fl=json.dumps(fl),\", \"ts=json.dumps(int(datetime.utcnow().timestamp()))))\", \"def migrate_userdeletion(graph, u, fl)\", \"#Relation\", \"rel = \\\"\\\"\\\"MATCH (u:User {{ email: {email} }}), (f:Feed {{link: {fl} }})\", \"CREATE (u)-[:UNSUBSCRIBED {{ timestamp: {ts} }}]->(f)\\\"\\\"\\\"\", \"graph.cypher.execute(rel.format(email=json.dumps(u.email),\", \"fl=json.dumps(fl),\", \"ts=json.dumps(int(datetime.utcnow().timestamp()))))\", \"from feeder.models import FeedItem, Feed, UserFeed, User, UserDeletion\", \"#for i, feed in enumerate(Feed.query.all())\", \"#print(\\\"{} Starting {}\\\".format(i, feed.title))\", \"#migrate_feed(graph, feed)\", \"#for item in feed.items\", \"#migrate_feeditem(graph, feed, item)\", \"for user in User.query.all()\", \"print(\\\"User\\\")\", \"migrate_user(graph, user)\", \"for feed in user.feeds.all()\", \"print(\\\"UserFeed\\\")\", \"migrate_userfeed(graph, user, feed.link)\", \"for feed in UserDeletion.query.filter(UserDeletion.user_id==user.id).all()\", \"print(\\\"UserDel\\\")\", \"migrate_userdeletion(graph, user, feed.link)\"]"}, {"project": "Feeder", "commit_id": "656c015d0b9734744e0974b922c471d4f561218f", "time_stamp": 1433637474, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/migrate_to_neo.py"}], "find_interval": null, "la": 10, "ld": 8, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def migrate_userfeed(graph, u, f)\", \"# Subscription\", \"cph = \\\"\\\"\\\"MATCH (u:User {{ email: {email} }}), (f:Feed {{link: {fl} }})\", \"CREATE (sub:Subscription {{ usertitle: {title}, timestamp: {ts} }})\", \"CREATE (u)-[:HAS]->(sub)-[:TO]->(f)\\\"\\\"\\\"\", \"graph.cypher.execute(cph.format(email=json.dumps(u.email),\", \"fl=json.dumps(f.link),\", \"title=json.dumps(f.title),\", \"migrate_userfeed(graph, user, feed)\"]"}, {"project": "Feeder", "commit_id": "85d3308b80a9b283b6fbb94e94c61c7976933b1f", "time_stamp": 1433863974, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/neo4j-community-2.2.2/conf/neo4j-server.properties"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "b8643a55f8cd7aee268472216037f0ede5e4504f", "time_stamp": 1433864023, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "rename", "modified_path": "server/flaskapp/neo4j-community-2.2.2/conf/neo4j-server.properties", "current_path": "server/flaskapp/neo4j-community-2.2.2/conf/neo4j-testserver.properties"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "710d57a36307ff9ef7df8935784d61064d919d51", "time_stamp": 1433864212, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/Makefile"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "f5490bf3e00f8054047add6a7170702787688b40", "time_stamp": 1433864236, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/aggregator/__init__.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/cyphers.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/models.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/__init__.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/__main__.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/conftest.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/test_0_pre.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/test_cyphers.py"}], "find_interval": null, "la": 499, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"\\\"\\\"\\\"\", \"Cypher queries to be used with Neo4j.\", \"\\\"\\\"\\\"\", \"def escapedict(*args, **kwargs)\", \"if len(args) > 1\", \"return [escapedict(d) for d in args]\", \"elif len(args) == 1\", \"kwargs = args[0]\", \"return {k: json.dumps(v) for k, v in kwargs.items()}\", \"def escaped(f)\", \"'''Annotation which pushes every argument through json.dumps'''\", \"def inner(*args, **kwargs)\", \"args = [json.dumps(x) for x in args]\", \"kwargs = {k: json.dumps(v) for k, v in kwargs.items()}\", \"return f(*args, **kwargs)\", \"return inner\", \"@escaped\", \"def merge_user(email, pwhash)\", \"cph = \\\"\\\\n\\\".join((\\\"MERGE (u:User {{ email: {email} }})\\\",\", \"\\\"ON CREATE SET u.passwordhash = {pwhash}\\\",\", \"\\\"return u\\\"))\", \"return cph.format(email=email, pwhash=pwhash)\", \"@escaped\", \"def get_user(email)\", \"return \\\"\\\"\\\"MATCH (u:User {{ email: {} }})\", \"RETURN u\\\"\\\"\\\".format(email)\", \"@escaped\", \"def unsubscribe(email, link)\", \"s = \\\"\\\"\\\"\\\\\", \"MATCH (u:User {{ email: {ml} }}), (f:Feed {{link: {fl} }})\", \"CREATE UNIQUE (u)-[:UNSUBSCRIBED {{ timestamp: timestamp() }}]->(f)\", \"WITH u, f\", \"OPTIONAL MATCH (u)-[s:SUBSCRIBES]->(f)\", \"DELETE s\\\"\\\"\\\".format(ml=email, fl=link)\", \"return s\", \"@escaped\", \"def subscribe(email, link, usertitle, usertag)\", \"'''\", \"Might create a new feed, hence merge.\", \"'''\", \"s = \\\"\\\"\\\"\\\\\", \"MATCH (u:User {{ email: {ml} }})\", \"MERGE (f:Feed {{ link: {fl} }})\", \"ON CREATE SET f.timestamp = timestamp()\", \"MERGE (u)-[s:SUBSCRIBES]->(f)\", \"SET s.timestamp = timestamp(), s.usertitle = {usertitle}, \\\\\", \"s.usertag = {usertag}\", \"WITH u, f, s\", \"OPTIONAL MATCH (u)-[us:UNSUBSCRIBED]->(f)\", \"DELETE us\", \"RETURN s as subscription\", \"\\\"\\\"\\\".format(ml=email, fl=link, usertitle=usertitle, usertag=usertag)\", \"return s\", \"@escaped\", \"def get_user_feeds(email)\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (:User {{ email: {email} }})-[:SUBSCRIBES]->(feed:Feed)\", \"RETURN feed\", \"\\\"\\\"\\\"\", \"return cph.format(email=email)\", \"@escaped\", \"def get_users_new_feeditems(email, lastsync)\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (:User {{ email: {email} }})-[s:SUBSCRIBES]->(feed:Feed)\", \"WHERE s.timestamp > {lastsync} OR feed.timestamp > {lastsync}\", \"WITH feed\", \"OPTIONAL MATCH (feed)<-[:IN]-(item:Item)\", \"WHERE item.timestamp > {lastsync}\", \"RETURN feed, COLLECT(item) as items\", \"\\\"\\\"\\\"\", \"return cph.format(email=email, lastsync=lastsync)\", \"def get_subscribed_feeds()\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (:User)-[:SUBSCRIBES]->(feed:Feed)\", \"RETURN DISTINCT feed\", \"\\\"\\\"\\\"\", \"return cph\", \"def on_synced(feed, ts, items)\", \"'''\", \"Feed will always exist.\", \"Items might exist, and they require guid to be present.\", \"'''\", \"feed = escapedict(feed)\", \"items = [escapedict(i) for i in items]\", \"s = \\\"\\\"\\\"\\\\\", \"MERGE (f:Feed {{link: {link} }})\", \"ON MATCH SET f.timestamp = {ts}, f.title = {title}, \\\\\", \"f.description = {description}, f.published = {published}, f.etag = {etag}, \\\\\", \"f.modified = {modified}\\\\\", \"\\\"\\\"\\\".format(ts=ts, link=feed['link'], title=feed['title'],\", \"description=feed['description'],\", \"published=feed['published'],\", \"etag=feed['etag'], modified=feed['modified'])\", \"# Every item might exist, but always update\", \"for i in items\", \"s += \\\"\\\"\\\"\", \"WITH f\", \"MERGE (i:Item {{ guid: {guid} }} )\", \"SET i.link = {link}, i.title = {title}, i.description = {description}, \\\\\", \"i.title_stripped = {title_stripped}, i.snippet = {snippet}, \\\\\", \"i.timestamp = {ts}, i.published = {published}, i.author = {author}, \\\\\", \"i.comments = {comments}, i.enclosure = {enclosure}, i.image = {image}\", \"CREATE UNIQUE (i)-[:IN]->(f)\", \"\\\"\\\"\\\".format(ts=ts,\", \"guid=i['guid'],\", \"link=i['link'],\", \"title=i['title'],\", \"description=i['description'],\", \"title_stripped=i['title_stripped'],\", \"snippet=i['snippet'],\", \"published=i['published'],\", \"author=i['author'],\", \"comments=i['comments'],\", \"enclosure=i['enclosure'],\", \"image=i['image'])\", \"return s\", \"# -*- coding: utf-8 -*-\", \"def make_item(timestamp, guid, link, title, description, title_stripped,\", \"snippet, published, author=None, comments=None,\", \"enclosure=None, image=None)\", \"return dict(timestamp=timestamp, guid=guid, link=link, title=title,\", \"description=description, title_stripped=title_stripped,\", \"snippet=snippet, published=published, author=author,\", \"comments=comments, enclosure=enclosure, image=image)\", \"def make_feed(timestamp, link, title, description, published,\", \"etag=None, modified=None)\", \"return dict(timestamp=timestamp, link=link, title=title,\", \"description=description, published=published,\", \"etag=etag, modified=modified)\", \"if __name__ == '__main__'\", \"# Call tests and exit with correct code\", \"sys.exit(pytest.main([\\\"--pyargs\\\", \\\"aggregator.tests\\\"] + sys.argv[1:]))\", \"# -*- coding: utf-8 -*-\", \"from py2neo import Graph\", \"@pytest.fixture(scope='module')\", \"def graph(request)\", \"return Graph(\\\"http://localhost:7575/db/data\\\")\", \"# -*- coding: utf-8 -*-\", \"def test_can_connect(graph)\", \"assert graph.neo4j_version\", \"def test_delete_all(graph)\", \"graph.delete_all()\", \"assert graph.order == 0\", \"assert graph.size == 0\", \"# -*- coding: utf-8 -*-\", \"\\\"\\\"\\\"\", \"Test the database operations.\", \"\\\"\\\"\\\"\", \"from time import time\", \"from ..cyphers import *\", \"from ..models import make_item, make_feed\", \"_bob = \\\"bob@bobs.com\\\"\", \"_frank = \\\"frank@bobs.com\\\"\", \"_feed1_link = 'http://site.com/rss'\", \"_feed2_link = 'http://another.site.com/rss'\", \"def test_escapedict()\", \"# One dict as arg\", \"res = escapedict(dict(a='a', b='b'))\", \"assert res['a'] == '\\\"a\\\"'\", \"assert res['b'] == '\\\"b\\\"'\", \"# One dict as kwargs\", \"res = escapedict(a='a', b='b')\", \"assert res['a'] == '\\\"a\\\"'\", \"assert res['b'] == '\\\"b\\\"'\", \"# Several dicts\", \"res = escapedict(dict(a='a', b='b'),\", \"dict(c='c', d='d'))\", \"assert len(res) == 2\", \"assert res[0]['a'] == '\\\"a\\\"'\", \"assert res[0]['b'] == '\\\"b\\\"'\", \"assert res[1]['c'] == '\\\"c\\\"'\", \"assert res[1]['d'] == '\\\"d\\\"'\", \"def test_escaped()\", \"@escaped\", \"def mytest(arg)\", \"return arg\", \"assert '\\\"bob\\\"' == mytest('bob')\", \"assert 'null' == mytest(None)\", \"def test_getuser_notregistered(graph)\", \"user = graph.cypher.execute_one(get_user('nothere@invisible.com'))\", \"assert user is None\", \"def test_adduser(graph)\", \"'''\", \"A user account is required for everything else.\", \"'''\", \"user = graph.cypher.execute_one(merge_user(_bob, None))\", \"assert user is not None\", \"assert user['email'] == _bob\", \"assert user['passwordhash'] is None\", \"def test_getuser_bob(graph)\", \"user = graph.cypher.execute_one(get_user(_bob))\", \"assert user is not None\", \"assert user['email'] == _bob\", \"assert user['passwordhash'] is None\", \"def test_adduser_with_password(graph)\", \"'''\", \"A user account is required for everything else.\", \"'''\", \"pwhash = 'ab292asva23'\", \"user = graph.cypher.execute_one(merge_user(_frank, pwhash))\", \"assert user is not None\", \"assert user['email'] == _frank\", \"assert user['passwordhash'] == pwhash\", \"def test_getuser_frank(graph)\", \"user = graph.cypher.execute_one(get_user(_frank))\", \"assert user is not None\", \"assert user['email'] == _frank\", \"assert user['passwordhash'] is not None\", \"def test_unsubscribe_nonexisting(graph)\", \"res = graph.cypher.execute(unsubscribe(_bob, \\\"http://somelink.com/rss\\\"))\", \"assert len(res) == 0\", \"def test_subscribe(graph)\", \"'''\", \"Subscription is done before caching.\", \"'''\", \"# Getting user's feeds should return nothing yet\", \"res = graph.cypher.execute(get_user_feeds(_bob))\", \"assert len(res) == 0\", \"# Subscribe\", \"res = graph.cypher.execute(subscribe(_bob, _feed1_link, None, None))\", \"assert len(res) == 1\", \"sub = res[0]['subscription']\", \"assert sub['timestamp'] > 0\", \"assert sub['usertitle'] is None\", \"assert sub['usertag'] is None\", \"# Getting user's feeds should return a single item\", \"res = graph.cypher.execute(get_user_feeds(_bob))\", \"assert len(res) == 1\", \"# Re-subscribe\", \"res = graph.cypher.execute(subscribe(_bob, _feed1_link,\", \"'mytitle', 'mytag'))\", \"assert len(res) == 1\", \"sub2 = res[0]['subscription']\", \"assert sub2['timestamp'] >= sub['timestamp']\", \"assert sub2['usertitle'] == 'mytitle'\", \"assert sub2['usertag'] == 'mytag'\", \"# Getting user's feeds should return a single item still\", \"res = graph.cypher.execute(get_user_feeds(_bob))\", \"assert len(res) == 1\", \"# Getting all feeds and items should only be one\", \"res = graph.cypher.execute(get_users_new_feeditems(_bob, 0))\", \"print(res)\", \"assert len(res) == 1\", \"assert res[0]['feed']['link'] == _feed1_link\", \"# Subscribe Frank\", \"res = graph.cypher.execute(subscribe(_frank, _feed1_link, None, None))\", \"assert len(res) == 1\", \"sub = res[0]['subscription']\", \"assert sub['timestamp'] > 0\", \"assert sub['usertitle'] is None\", \"assert sub['usertag'] is None\", \"res = graph.cypher.execute(subscribe(_frank, _feed2_link, None, None))\", \"assert len(res) == 1\", \"sub = res[0]['subscription']\", \"assert sub['timestamp'] > 0\", \"assert sub['usertitle'] is None\", \"assert sub['usertag'] is None\", \"# Getting all feeds and items should be two\", \"res = graph.cypher.execute(get_users_new_feeditems(_frank, 0))\", \"print(res)\", \"assert len(res) == 2\", \"# Order is not fixed\", \"assert res[0]['feed']['link'] in [_feed1_link, _feed2_link]\", \"assert res[1]['feed']['link'] in [_feed1_link, _feed2_link]\", \"def test_get_subscribed_feeds(graph)\", \"res = graph.cypher.execute(get_subscribed_feeds())\", \"assert len(res) == 2\", \"# Should be 1 if Frank unsubscribes to two\", \"graph.cypher.execute(unsubscribe(_frank, _feed2_link))\", \"res = graph.cypher.execute(get_subscribed_feeds())\", \"assert len(res) == 1\", \"# Resubscribe\", \"graph.cypher.execute(subscribe(_frank, _feed2_link, None, None))\", \"def test_synced_none(graph)\", \"# Sync returned no items\", \"ts = int(time())\", \"items = []\", \"f = make_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"def test_synced_one(graph)\", \"# Sync returned one item\", \"ts = int(time())\", \"items = []\", \"for i in range(1)\", \"si = str(i)\", \"items.append(make_item(ts, 'guid' + si,\", \"_feed1_link + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"ts - (1+i)))\", \"f = make_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"# Get all feeds and items\", \"res = graph.cypher.execute(get_users_new_feeditems(_frank, 0))\", \"# Two feeds\", \"assert len(res) == 2\", \"for r in res\", \"# Feed and items\", \"assert len(r) == 2\", \"assert r['feed'] is not None\", \"assert r['items'] is not None\", \"feed = r['feed']\", \"items = r['items']\", \"if feed['link'] == _feed1_link\", \"# First feed has ONE item\", \"assert len(items) == 1\", \"else\", \"# Second feed has no items\", \"assert len(items) == 0\", \"def test_synced_many(graph)\", \"# Sync return some new items\", \"ts = int(time())\", \"items = []\", \"count = 10\", \"f = make_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"for i in range(count - 4)\", \"si = str(i)\", \"its = ts - (1 + i)\", \"items.append(make_item(its,\", \"'guid' + si,\", \"_feed1_link + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"# These are old items\", \"graph.cypher.execute(on_synced(f, ts - 100, items))\", \"items = []\", \"for i in range(count - 4, count)\", \"si = str(i)\", \"its = ts - (1 + i)\", \"items.append(make_item(its,\", \"'guid' + si,\", \"_feed1_link + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"# Newest items\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"# Get all feeds and items\", \"res = graph.cypher.execute(get_users_new_feeditems(_frank, 0))\", \"# Two feeds\", \"assert len(res) == 2\", \"for r in res\", \"# Feed and items\", \"assert len(r) == 2\", \"assert r['feed'] is not None\", \"assert r['items'] is not None\", \"feed = r['feed']\", \"items = r['items']\", \"if feed['link'] == _feed1_link\", \"# First feed has X items\", \"assert len(items) == count\", \"else\", \"# Second feed has no items\", \"assert len(items) == 0\", \"# Now filter items by timestamp\", \"# Query should only return 4 items now\", \"lastsync = ts - 50\", \"print(\\\"lastsync\\\", lastsync)\", \"# Get all feeds and items\", \"res = graph.cypher.execute(get_users_new_feeditems(_frank, lastsync))\", \"# Two feeds\", \"assert len(res) == 2\", \"for r in res\", \"# Feed and items\", \"assert len(r) == 2\", \"assert r['feed'] is not None\", \"assert r['items'] is not None\", \"feed = r['feed']\", \"items = r['items']\", \"if feed['link'] == _feed1_link\", \"# First feed has X items\", \"print([x['timestamp'] for x in items])\", \"assert len(items) == 4\", \"for i in items\", \"assert i['timestamp'] > lastsync\", \"else\", \"# Second feed has no items\", \"assert len(items) == 0\"]"}, {"project": "Feeder", "commit_id": "0a5e52359f3083fa95633c33e435feb4260d68b5", "time_stamp": 1433865692, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/cyphers.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/tests/test_cyphers.py"}], "find_interval": null, "la": 30, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def cleanup_items()\", \"# No need to keep very old items, so clear them out\", \"# I want to remove items which are older than 2 weeks\", \"# IF they are not part of the newest 50 items\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (f:Feed)<-[:IN]-(i:Item)\", \"WITH i\", \"ORDER BY i.timestamp DESC\", \"SKIP 100\", \"OPTIONAL MATCH (i)\", \"WHERE i.timestamp < (timestamp() - 1209600)\", \"DELETE i\", \"\\\"\\\"\\\"\", \"return cph\", \"def test_cleanup(graph)\", \"# No need to keep very old items, so clear them out\", \"# I want to remove items which are older than X\", \"# IF they are not part of the newest Y items\", \"graph.cypher.execute(cleanup_items())\", \"print(\\\"TODO check\\\")\", \"assert 0\", \"def test_milliseconds(graph)\", \"print(\\\"Neo timestamp uses milliseconds and python uses seconds\\\")\", \"assert 0\"]"}, {"project": "Feeder", "commit_id": "d0e21b2110ed396eee49afc05c623cf1b6c5e378", "time_stamp": 1433888925, "is_fix": false, "classification": "Perfective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/cyphers.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/tests/test_cyphers.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/util.py"}], "find_interval": null, "la": 149, "ld": 23, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"@escaped\", \"def get_users_new_unsubscribes(email, lastsync)\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (:User {{ email: {email} }})-[s:UNSUBSCRIBED]->(feed:Feed)\", \"WHERE s.timestamp > {lastsync}\", \"RETURN feed\\\"\\\"\\\"\", \"return cph.format(email=email, lastsync=lastsync)\", \"@escaped\", \"def cleanup_items(link)\", \"# IF they are not part of the newest X items\", \"MATCH (f:Feed {{ link: {link} }})--(i:Item)\", \"MATCH (i)\", \"WHERE i.timestamp < (timestamp() - 1209600000)\", \"OPTIONAL MATCH (i)-[r]-()\", \"DELETE i, r\", \"RETURN COUNT(i) as deleted\", \"return cph.format(link=link)\", \"from ..util import timestamp\", \"_feed3_link = 'http://yetonemore.site.com/rss'\", \"ts = timestamp()\", \"ts = timestamp()\", \"ts = timestamp()\", \"its = ts - 1000 * (1 + i)\", \"graph.cypher.execute(on_synced(f, ts - 50000, items))\", \"# And then the user also unsubscribes to feed 3!\", \"graph.cypher.execute(subscribe(_frank, _feed3_link, None, None))\", \"graph.cypher.execute(unsubscribe(_frank, _feed3_link))\", \"# Which also got some items\", \"f = make_feed(ts, _feed3_link, 'Feed3', 'Feed3 desc', ts)\", \"items = []\", \"for i in range(7)\", \"si = str(i)\", \"its = ts - 1000*(1 + i)\", \"items.append(make_item(its,\", \"'f3_guid' + si,\", \"_feed3_link + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"elif feed['link'] == _feed2_link\", \"else\", \"# Third feed is an unsubscription\", \"assert len(items) == 0\", \"assert 0\", \"lastsync = ts - 50000\", \"# And then we have one unsubscription\", \"res = graph.cypher.execute(get_users_new_unsubscribes(_frank, lastsync))\", \"assert len(res) == 1\", \"assert res[0]['feed']['link'] == _feed3_link\", \"# First, no items to delete\", \"flink = 'http://cleanup.com/rss'\", \"res = graph.cypher.execute(cleanup_items(flink))\", \"print(res)\", \"assert len(res) == 1\", \"assert res[0]['deleted'] == 0\", \"ts = timestamp() - (365 * 24 * 3600 * 1000)\", \"f = make_feed(ts, flink, 'FeedCleanup', 'Feed desc', ts)\", \"# Every item is old enough to be targeted for termination\", \"# But keep 100 of them\", \"items = []\", \"count = 138\", \"for i in range(count)\", \"si = str(i)\", \"its = ts\", \"items.append(make_item(its,\", \"'fclean_guid' + si,\", \"flink + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"# Now clean up should delete past 100 first items\", \"res = graph.cypher.execute(cleanup_items(flink))\", \"print(res)\", \"assert len(res) == 1\", \"assert res[0]['deleted'] == (count - 100)\", \"# Add some items which are 'too new'\", \"ts = timestamp() - (3 * 24 * 3600 * 1000)\", \"items = []\", \"countnew = 23\", \"for i in range(count, count + countnew)\", \"si = str(i)\", \"its = ts\", \"items.append(make_item(its,\", \"'fclean2_guid' + si,\", \"flink + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"# Now clean up should delete more old items\", \"res = graph.cypher.execute(cleanup_items(flink))\", \"print(res)\", \"assert len(res) == 1\", \"assert res[0]['deleted'] == countnew\", \"# Now add even more too new items\", \"items = []\", \"countlast = 150\", \"for i in range(countlast)\", \"si = str(i)\", \"its = ts\", \"items.append(make_item(its,\", \"'fclean3_guid' + si,\", \"flink + '/item/' + si,\", \"'title' + si,\", \"'descrip' + si,\", \"'titlestrip' + si,\", \"'snippet' + si,\", \"its))\", \"graph.cypher.execute(on_synced(f, ts, items))\", \"# Now clean up should delete more old items\", \"res = graph.cypher.execute(cleanup_items(flink))\", \"print(res)\", \"assert len(res) == 1\", \"# Deletes last of old items\", \"assert res[0]['deleted'] == (100 - countnew)\", \"# -*- coding: utf-8 -*-\", \"from time import time\", \"def timestamp()\", \"'''\", \"timestamp() -> integer number\", \"Returns current time in milliseconds since the Epoch.\", \"'''\", \"return int(1000 * time())\"]"}, {"project": "Feeder", "commit_id": "466a020454e98e8d2cea73095617dc1843ddd56d", "time_stamp": 1434634973, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/__init__.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/cleaner.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/cyphers.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/database.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/gauth.py"}, {"type": "delete", "modified_path": "server/flaskapp/aggregator/models.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/pytest.ini"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/read_config.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/rest.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/sync.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/feeds.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/tests/test_cyphers.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/test_sync.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/test_util.py"}, {"type": "add", "modified_path": "server/flaskapp/aggregator/tests/testfeed.xml"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/util.py"}, {"type": "modify", "modified_path": "server/flaskapp/config-sample.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/config-test.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/migrate_to_neo.py"}, {"type": "modify", "modified_path": "server/flaskapp/runserver.py"}], "find_interval": null, "la": 1281, "ld": 97, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# -*- coding: utf-8 -*-\", \"'''\", \"Feeder web app\", \"Configuration file can be set with environment variable FEEDER_CONFIG\", \"'''\", \"from flask import Flask\", \"app = Flask(__name__)\", \"# Load defaults\", \"#app.config.from_object(DefaultConfig)\", \"# read_config\", \"from aggregator.read_config import read_config\", \"# -*- coding: utf-8 -*-\", \"from .util import parse_timestamp, datetuple_to_timestamp, escaped\", \"# Productive patterns\", \"PATTERN_IMG_URL = re.compile(r\\\"(&lt;|<)img.*?src=(\\\\\\\"|')(.*?)(\\\\\\\"|')\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"# Bloat patterns\", \"PATTERN_FEEDFLARE = re.compile(r\\\"(<|&lt;)div\\\\s+?class=('|\\\\\\\")feedflare('|\\\\\\\").*?/div(>|&gt;)\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_FEEDSPORTAL = re.compile(r\\\"(<|&lt;)a((?!/a).)*feedsportal.*?/a(>|gt;)\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_LINKED_ZEROIMAGES = \\\\\", \"re.compile(r\\\"(<|&lt;)a((?!/a).)*width=('|\\\\\\\")1('|\\\\\\\")((?!/a).)*/a(>|&gt;)\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_ZEROIMAGES = \\\\\", \"re.compile(r\\\"(<|&lt;)img((?!/((>|&gt;)|img)).)*width=\\\\\\\\?('|\\\\\\\")1\\\\\\\\?('|\\\\\\\").*?/(img)?(>|&gt;)\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_PARAGRAPH_NEWLINE = \\\\\", \"re.compile(r\\\"((<|&lt;)/?p/?(>|&gt;))(\\\\s*(<|&lt;)/?br/?(>|&gt;))+\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_MULTIPLE_NEWLINES = \\\\\", \"re.compile(r\\\"(((<|&lt;)/?br/?(>|&gt;))\\\\s*){2,}\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_EMPTY_PARAGRAPHS = \\\\\", \"re.compile(r\\\"(((<|&lt;)(p)(>|&gt;))\\\\s*((<|&lt;)/p(>|&gt;))|(<|&lt;)p/(>|&gt;))\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"PATTERN_EMPTY_DIVS = \\\\\", \"re.compile(r\\\"<div[^>]*>\\\\s*</div>\\\",\", \"re.IGNORECASE | re.DOTALL)\", \"def get_clean_entry(item, timestamp)\", \"\\\"\\\"\\\"\", \"Convert an RSS-Item from FeedParser into\", \"a dictionary suitable for insertion into the database.\", \"\\\"\\\"\\\"\", \"# Some feeds use content, some description.\", \"# Take the longest.\", \"d = item.get(\\\"description\\\", \\\"\\\")\", \"try\", \"c = item.get(\\\"content\\\", None)\", \"# Can be many content, with different types\", \"# This might fail for some\", \"c = c[0].value\", \"except\", \"c = \\\"\\\"\", \"# Use d\", \"if len(c) > len(d)\", \"d = c\", \"clean_description = strip_bloat(d)\", \"e = [e.href for e in item.get(\\\"enclosures\\\", [])]\", \"if len(e) > 0\", \"enclosure = e[0]\", \"else\", \"enclosure = None\", \"published = parse_timestamp(item.get(\\\"published\\\", None))\", \"if published is None\", \"published = timestamp\", \"guid = item.get(\\\"id\\\", item.link)\", \"return make_item(timestamp=timestamp, guid=guid, link=item.link,\", \"title=item.title, description=clean_description,\", \"title_stripped=get_snippet(item.title),\", \"snippet=get_snippet(clean_description),\", \"published=published, author=item.get(\\\"author\\\", None),\", \"comments=item.get(\\\"comments\\\", None),\", \"enclosure=enclosure, image=get_image(clean_description),\", \"json=item)\", \"def get_snippet(text, maxlen=120)\", \"\\\"\\\"\\\"\", \"Returns a stripped version of text which will\", \"not exceed maxlen in length and which is unescaped\", \"Example\", \">>> get_snippet(\\\"I &amp; <i>you</i> are <i>very silly</i>.\\\", maxlen=10)\", \"'I & you ar'\", \"\\\"\\\"\\\"\", \"#return s[:maxlen-1] + \\\"\\\\u2026\\\"\", \"return unescape(strip_tags(text))[:maxlen]\", \"def unescape(text)\", \"\\\"\\\"\\\"\", \"Unescapes HTML-escaped text.\", \"Examples\", \">>> unescape(\\\"&lt; &gt;\\\")\", \"'< >'\", \">>> unescape(\\\"&quot;\\\")\", \"'\\\"'\", \">>> unescape(\\\"&apos;\\\")\", \"\\\"'\\\"\", \">>> unescape(\\\"&#8217;\\\")\", \"'\\u2019'\", \">>> unescape(\\\"&amp;\\\")\", \"'&'\", \"\\\"\\\"\\\"\", \"text = html.unescape(text)\", \"return text\", \"def get_image(text)\", \"'''\", \"Returns the first image referenced in the document.\", \"None if no images could be found.\", \"'''\", \"imgs = get_images(text)\", \"if imgs is None or len(imgs) == 0\", \"return None\", \"else\", \"return imgs[0]\", \"def get_images(text)\", \"\\\"\\\"\\\"\", \"Find and return the first image url in the document.\", \"None if nothing could be found.\", \"Examples\", \">>> get_images(\\\"No image here\\\")\", \"[]\", \">>> get_images(\\\"Here's one: <img src='url'/>\\\")\", \"['url']\", \">>> get_images(\\\"one: <img src='url1'/>, two: <img width='10' src='url2' height='50'/>\\\")\", \"['url1', 'url2']\", \">>> get_images(\\\"Silly urls: <img src='bob&amp;jones'\\\")\", \"['bob&jones']\", \"\\\"\\\"\\\"\", \"images = []\", \"for m in PATTERN_IMG_URL.finditer(text)\", \"# Do this somewhere else perhaps. Sweclockers has stupid image urls.\", \"images.append(m.group(3).replace(\\\"&amp;\\\", \\\"&\\\"))\", \"return images\", \"def strip_tags(text)\", \"\\\"\\\"\\\"\", \"Strips all html formatting from a string.\", \"Example\", \">>> strip_tags(\\\"An <tag>example text</tag> with tag.\\\")\", \"'An example text with tag.'\", \"\\\"\\\"\\\"\", \"# Remove all tags\", \"text = re.sub(r\\\"<[^>]*>\\\", \\\"\\\", text)\", \"# This might have introduced extra spaces, reduce to one\", \"text = re.sub(r\\\"\\\\s+\\\", \\\" \\\", text)\", \"return text\", \"def strip_bloat(text)\", \"\\\"\\\"\\\"\", \"Removes bloat, such as 1-pixel images, feedflare,\", \"share shit, etc, from the string.\", \"Examples\", \"Too many newlines\", \">>> strip_bloat('<br/>\\\\\\\\n<br/>')\", \"'<br/>'\", \">>> strip_bloat('<br>\\\\\\\\n<br>\\\\\\\\n<br>')\", \"'<br/>'\", \">>> strip_bloat('<p>\\\\\\\\n<br>')\", \"'<p>'\", \">>> strip_bloat('<p> \\\\\\\\n </p>')\", \"''\", \"Feedflare\", \">>> strip_bloat('<div class=\\\"feedflare\\\">\\\\\\\\nblabla</div>')\", \"''\", \">>> strip_bloat(\\\"<div class='feedflare'>\\\\\\\\nblabla</div>\\\")\", \"''\", \"Feedsportal links\", \">>> strip_bloat('<a href=\\\"http://feedsportal.com\\\">\\\\\\\\nbla</a>')\", \"''\", \"Zero size images\", \">>> strip_bloat('<img width=\\\"1\\\" src=\\\"bla\\\"/>')\", \"''\", \">>> strip_bloat('<img src=\\\"bla\\\" width=\\\"1\\\">blaa</img>')\", \"''\", \">>> strip_bloat('<img height=\\\\\\\"1\\\\\\\" src=\\\\\\\"http://feeds.feedburner.com/~r/cornubot/~4/-BDe1lEL8ys\\\\\\\" width=\\\\\\\"1\\\\\\\" />')\", \"''\", \"\\\"\\\"\\\"\", \"text = PATTERN_FEEDFLARE.sub(\\\"\\\", text)\", \"text = PATTERN_FEEDSPORTAL.sub(\\\"\\\", text)\", \"text = PATTERN_LINKED_ZEROIMAGES.sub(\\\"\\\", text)\", \"text = PATTERN_ZEROIMAGES.sub(\\\"\\\", text)\", \"text = PATTERN_MULTIPLE_NEWLINES.sub(\\\"<br/>\\\", text)\", \"text = PATTERN_PARAGRAPH_NEWLINE.sub(\\\"<p>\\\", text)\", \"# Take these last\", \"text = PATTERN_EMPTY_PARAGRAPHS.sub(\\\"\\\", text)\", \"text = PATTERN_EMPTY_DIVS.sub(\\\"\\\", text)\", \"return text\", \"@escaped\", \"def make_item(timestamp, guid, link, title, description, title_stripped,\", \"snippet, published, author=None, comments=None,\", \"enclosure=None, image=None, json=None)\", \"\\\"\\\"\\\"\", \"Easy way to get final result, if your arguments are well formed.\", \"\\\"\\\"\\\"\", \"return dict(timestamp=timestamp, guid=guid, link=link, title=title,\", \"description=description, title_stripped=title_stripped,\", \"snippet=snippet, published=published, author=author,\", \"comments=comments, enclosure=enclosure, image=image,\", \"json=json)\", \"@escaped\", \"def make_feed(timestamp, link, title, description, published,\", \"etag=None, modified=None)\", \"\\\"\\\"\\\"\", \"Easy way to get final result, if your arguments are well formed.\", \"\\\"\\\"\\\"\", \"return dict(timestamp=timestamp, link=link, title=title,\", \"description=description, published=published,\", \"etag=etag, modified=modified)\", \"from .util import escaped, escapedict\", \"\\\"return u as user\\\"))\", \"RETURN u as user\\\"\\\"\\\".format(email)\", \"RETURN f as feed, s as subscription\", \"@escaped\", \"def get_feed_and_items(link, limit)\", \"cph = \\\"\\\"\\\"\\\\\", \"MATCH (feed:Feed {{link: {link}}})\", \"WITH feed\", \"OPTIONAL MATCH (feed)<-[:IN]-(item:Item)\", \"WITH feed, item\", \"ORDER BY item.published DESC\", \"LIMIT {limit}\", \"RETURN feed, COLLECT(item) as items\", \"\\\"\\\"\\\"\", \"return cph.format(link=link, limit=limit)\", \"MERGE (f)<-[:IN]-(i:Item {{ guid: {guid} }} )\", \"# -*- coding: utf-8 -*-\", \"'''\", \"Wrappers for databases\", \"'''\", \"#from flask import app as current_app\", \"from aggregator import app as current_app\", \"from py2neo import Graph\", \"from .cyphers import (get_subscribed_feeds, cleanup_items,\", \"on_synced, merge_user, subscribe,\", \"get_user, get_users_new_feeditems,\", \"get_users_new_unsubscribes,\", \"get_feed_and_items, unsubscribe)\", \"_db = None\", \"def get_database()\", \"'''\", \"Gets a database object singleton\", \"'''\", \"global _db\", \"if _db is None\", \"_db = GraphDB(url=current_app.config.get('FEEDER_NEO_URL', None))\", \"return _db\", \"class GraphDB(object)\", \"def __init__(self, url=None, graph=None)\", \"# Connect to neo\", \"if graph is None\", \"self.graph = Graph() if url is None else Graph(url)\", \"else\", \"self.graph = graph\", \"def merge_user(self, email, pwhash=None)\", \"res = self.graph.cypher.execute(merge_user(email, pwhash))\", \"return res[0]['user']\", \"def get_user(self, email)\", \"res = self.graph.cypher.execute(get_user(email))\", \"return res[0]['user']\", \"def subscribe(self, email, link, usertitle=None, usertag=None)\", \"res = self.graph.cypher.execute(subscribe(email, link,\", \"usertitle, usertag))\", \"return res[0]['feed'], res[0]['subscription']\", \"def unsubscribe(self, email, link)\", \"self.graph.cypher.execute(unsubscribe(email, link))\", \"def get_subscribed_feeds(self)\", \"res = self.graph.cypher.execute(get_subscribed_feeds())\", \"return [r['feed'] for r in res]\", \"def cleanup_items(self, link)\", \"self.graph.cypher.execute(cleanup_items(link))\", \"def on_synced(self, feed, timestamp, items)\", \"self.graph.cypher.execute(on_synced(feed, timestamp, items))\", \"def get_feed_and_items(self, link, limit=10)\", \"res = self.graph.cypher.execute(get_feed_and_items(link, limit))\", \"return res[0]['feed'], res[0]['items']\", \"def get_users_new_feeditems(self, email, lastsync=None)\", \"if lastsync is None\", \"lastsync = 0\", \"res = self.graph.cypher.execute(get_users_new_feeditems(email,\", \"lastsync))\", \"return res\", \"def get_users_new_unsubscribes(self, email, lastsync=None)\", \"if lastsync is None\", \"lastsync = 0\", \"res = self.graph.cypher.execute(get_users_new_unsubscribes(email,\", \"lastsync))\", \"return res\", \"# -*- coding: utf-8 -*-\", \"\\\"\\\"\\\"\", \"Handles validating client bearer tokens, or\", \"that the user/password is correct.\", \"\\\"\\\"\\\"\", \"from flask import request, abort, current_app\", \"from httplib2 import Http\", \"from .database import get_database\", \"from hashlib import sha1\", \"from werkzeug.security import check_password_hash, generate_password_hash\", \"# This is not the salt used to store passwords\", \"# This is only the salt used by the android client\", \"# Used when setting up new users\", \"__ANDROID_SALT__ = b'4fb3a4355d7bfed240015f8e51e7b42f3455c17e'\", \"db = get_database()\", \"def validate_token(access_token)\", \"'''Verifies that an access-token is valid and\", \"meant for this app.\", \"Returns None on fail, and an e-mail on success'''\", \"h = Http()\", \"resp, cont = h.request(\\\"https://www.googleapis.com/oauth2/v2/userinfo\\\",\", \"headers={'Host': 'www.googleapis.com',\", \"'Authorization': access_token})\", \"if not resp['status'] == '200'\", \"return None\", \"try\", \"data = json.loads(cont)\", \"except TypeError\", \"# httplib2 returns byte objects\", \"data = json.loads(cont.decode())\", \"email = data['email']\", \"users = current_app.config.get('FEEDER_USERS', {})\", \"if current_app.config.get('FEEDER_ALLOW_ANY_GOOGLE', False)\", \"return email\", \"elif email in users\", \"return email\", \"else\", \"return None\", \"def validate_userpass(credentials)\", \"'''\", \"Validate the username/password provided.\", \"Returns None failure, and a username on success\", \"'''\", \"# Get the BASE64 encoded username:password\", \"enc_userpass = credentials.replace('Basic ', '')\", \"# Decode BASE64 from bytes string\", \"userpass = base64.b64decode(enc_userpass.encode('UTF-8'))\", \"# Need to change back to String\", \"userpass = userpass.decode('UTF-8')\", \"try\", \"username, password = userpass.split(':')\", \"# Enforce lowercase on password hash\", \"password = password.lower()\", \"# Check validity of username password\", \"users = current_app.config.get('FEEDER_USERS', {})\", \"#user = get_user(username, allow_creation=False)\", \"#if user is None or user.passwordhash is None\", \"if username not in users\", \"# User does not exist\", \"return None\", \"valid = False\", \"# Get password\", \"userpass = users[username]\", \"# Stored hashed\", \"if userpass.startswith('pbkdf2:sha1')\", \"valid = check_password_hash(userpass, password)\", \"else\", \"# Generate android hash if stored in plaintext\", \"userpasshash = sha1(__ANDROID_SALT__ + userpass.encode('utf-8')).hexdigest().lower()\", \"valid = (userpasshash == password)\", \"if valid\", \"return username\", \"else\", \"None\", \"except\", \"# invalid user/pass\", \"return None\", \"# Must be invalid...\", \"return None\", \"def is_basic(credentials)\", \"'''Returns True if credentials are of username:password type'''\", \"return credentials.startswith('Basic ')\", \"def authorized(fn)\", \"\\\"\\\"\\\"Decorator that checks that requests\", \"contain an id-token in the request header.\", \"userid will be None if the\", \"authentication failed, and have an id otherwise.\", \"Usage\", \"@app.route(\\\"/\\\")\", \"@authorized\", \"def secured_root(userid=None)\", \"pass\", \"\\\"\\\"\\\"\", \"def _wrap(*args, **kwargs)\", \"if 'Authorization' not in request.headers\", \"# Unauthorized\", \"abort(401)\", \"return None\", \"userid = None\", \"credentials = request.headers['Authorization']\", \"if (is_basic(credentials) and\", \"current_app.config['FEEDER_ALLOW_USERPASS'])\", \"userid = validate_userpass(credentials)\", \"elif (not is_basic(credentials) and\", \"current_app.config['FEEDER_ALLOW_GOOGLE'])\", \"userid = validate_token(credentials)\", \"if userid is None\", \"# Unauthorized\", \"abort(401)\", \"return None\", \"else\", \"# Make sure a user object exists in database\", \"db.merge_user(userid)\", \"return fn(userid=userid, *args, **kwargs)\", \"return _wrap\", \"# -*- coding: utf-8 -*-\", \"from yaml import load\", \"from aggregator import app\", \"def read_config(filename)\", \"configfile = load_yaml(filename)\", \"for k, v in configfile.items()\", \"if k.isupper()\", \"# Uppercase to flask\", \"app.config[k] = v\", \"# Return configfile to interested parties\", \"return configfile\", \"def load_yaml(filename)\", \"'''Read a YAML file'''\", \"with open(filename, 'r') as F\", \"return load(\\\"\\\".join(FILE.readlines()))\", \"# -*- coding: utf-8 -*-\", \"'''\", \"The REST-API of Feeder\", \"'''\", \"from aggregator import app\", \"from flask.ext.restful import (Resource, Api, reqparse, fields,\", \"marshal_with)\", \"from .util import (parse_timestamp, timestamp, format_timestamp,\", \"feed_to_dict, feeditem_to_dict)\", \"from .sync import cache_feed\", \"from .gauth import authorized\", \"from .database import get_database\", \"# Configure some logging\", \"file_handler = logging.FileHandler('rest.log')\", \"app.logger.addHandler(file_handler)\", \"app.logger.setLevel(logging.INFO)\", \"# Want a boolean class\", \"class FieldBool(fields.Raw)\", \"def format(self, value)\", \"if value\", \"return 'true'\", \"else\", \"return 'false'\", \"# Parse dates properly\", \"class FieldDateTime(fields.Raw)\", \"def format(self, value)\", \"if value is None\", \"return None\", \"return format_timestamp(value)\", \"# Fetch the database\", \"db = get_database()\", \"# Set up the REST AP\", \"api = Api(app)\", \"# Set up argument parsers\", \"## Listing feeds\", \"getparser = reqparse.RequestParser()\", \"getparser.add_argument('min_timestamp', type=str, required=False,\", \"help='Timestamp to filter on (only newer)')\", \"getparser.add_argument('link', type=str, required=False, action='append',\", \"help='Url(s) to limit query for')\", \"## Adding feed\", \"postparser = reqparse.RequestParser()\", \"postparser.add_argument('link', type=str, required=True,\", \"help='URL to the feed')\", \"postparser.add_argument('title', type=str, required=False,\", \"help='Title of feed')\", \"postparser.add_argument('tag', type=str, required=False,\", \"help='Tag to categorize feed under')\", \"## Deleting a feed\", \"deleteparser = reqparse.RequestParser()\", \"deleteparser.add_argument('link', type=str, required=True,\", \"help='URL of the feed to delete')\", \"# Set up return value mashers\", \"## Get\", \"### Single feed item\", \"feeditem_fields = {\", \"'guid': fields.String,\", \"'title': fields.String,\", \"'description': fields.String,\", \"'link': fields.String,\", \"'title_stripped': fields.String,\", \"'snippet': fields.String,\", \"'published': FieldDateTime,\", \"'author': fields.String,\", \"'comments': fields.String,\", \"'enclosure': fields.String,\", \"'tags': fields.List(fields.String),\", \"'image': fields.String,\", \"'read': FieldBool(default=False),\", \"'json': fields.String\", \"}\", \"### Single feed with a possible list of items\", \"feed_fields = {\", \"'link': fields.String,\", \"'title': fields.String,\", \"'description': fields.String,\", \"'published': FieldDateTime,\", \"'tag': fields.String,\", \"'timestamp': FieldDateTime,\", \"'items': fields.List(fields.Nested(feeditem_fields))\", \"}\", \"### Single delete\", \"delete_fields = {\", \"'link': fields.String,\", \"'timestamp': FieldDateTime\", \"}\", \"### Response with list of feeds, and list of deletes\", \"feeds_response = {\", \"'feeds': fields.List(fields.Nested(feed_fields)),\", \"'deletes': fields.List(fields.Nested(delete_fields))\", \"}\", \"def log_errors(f)\", \"'''Log errors in the wrapped function and re-raise them.'''\", \"def wrapped_f(*args, **kwargs)\", \"try\", \"return f(*args, **kwargs)\", \"except Exception as e\", \"print(e)\", \"app.logger.error(str(e))\", \"raise e\", \"return wrapped_f\", \"class Feeds(Resource)\", \"'''\", \"This class is the entire REST-interface for dealing with feeds.\", \"'''\", \"@log_errors\", \"@marshal_with(feeds_response)\", \"@authorized\", \"def get(self, userid)\", \"'''Return all feeds'''\", \"args = getparser.parse_args()\", \"# Timestamp is optional\", \"ts = None\", \"if args['min_timestamp'] is not None\", \"ts = parse_timestamp(args['min_timestamp'])\", \"# Fetch new items\", \"res = db.get_users_new_feeditems(userid, ts)\", \"feeds = []\", \"for r in res\", \"feed = r['feed']\", \"# Set items on feed for json conversion\", \"feed['items'] = r['items']\", \"# Add to list\", \"feeds.append(feed)\", \"# Fetch unsubscriptions if we have a timestamp\", \"deletes = []\", \"if ts is not None\", \"for r in db.get_users_new_unsubscribes(userid, ts)\", \"deletes.append(r['feed'])\", \"return {\\\"feeds\\\": feeds, \\\"deletes\\\": deletes}\", \"@log_errors\", \"@marshal_with(feed_fields)\", \"@authorized\", \"def post(self, userid)\", \"'''Add new/Edit feed'''\", \"args = postparser.parse_args()\", \"feed, sub = db.subscribe(userid, args.link,\", \"args.title, args.tag)\", \"cache_feed(db, feed)\", \"feed, items = db.get_feed_and_items(args.link, limit=10)\", \"feed = feed_to_dict(feed)\", \"# Set on feed for JSON return\", \"# Change from node to dict...\", \"feed['items'] = [feeditem_to_dict(i) for i in items]\", \"# Set user title on feed\", \"if sub['usertitle']\", \"feed['title'] = sub['usertitle']\", \"if sub['usertag']\", \"feed['tag'] = sub['usertag']\", \"# Return feed\", \"return feed\", \"class FeedsDeleter(Resource)\", \"@log_errors\", \"@authorized\", \"def post(self, userid)\", \"'''Delete a feed'''\", \"args = deleteparser.parse_args()\", \"db.unsubscribe(userid, args.link)\", \"return None, 204\", \"class PingResponder(Resource)\", \"'''\", \"A method that allows the app to query if the server is alive.\", \"'''\", \"@log_errors\", \"def get(self)\", \"return {}, 200\", \"# Connect with API URLs\", \"api.add_resource(Feeds, '/feeds')\", \"api.add_resource(FeedsDeleter, '/feeds/delete')\", \"api.add_resource(PingResponder, '/ping')\", \"# -*- coding: utf-8 -*-\", \"'''\", \"This file handles syncing the actual RSS/Atom feeds.\", \"'''\", \"from .util import timestamp, datetuple_to_timestamp\", \"from .database import get_database\", \"from .cleaner import get_clean_entry\", \"# Don't remove embedded videos\", \"fp._HTMLSanitizer.acceptable_elements = \\\\\", \"set(list(fp._HTMLSanitizer.acceptable_elements) + ['object',\", \"'embed',\", \"'iframe'])\", \"def cache_all_feeds()\", \"'''\", \"Download all feeds in database\", \"'''\", \"db = get_database()\", \"for feed in db.get_subscribed_feeds()\", \"cache_feed(db, feed)\", \"db.cleanup_items(feed['link'])\", \"def cache_feed(db, feed)\", \"'''\", \"Download one specified feed\", \"'''\", \"url = feed['link']\", \"if \\\"://\\\" not in url\", \"url = \\\"http://\\\" + url\", \"# Download and parse feed\", \"rss = fp.parse(url, etag=feed['etag'], modified=feed['modified'])\", \"# Feed might consider itself to be under a different link\", \"# Keep existing for identification purposes\", \"rss.feed.link = feed['link']\", \"parse_feed(db, rss)\", \"def parse_feed(db, rss)\", \"'''\", \"Given a parsed rss object, cache the items.\", \"'''\", \"# The feed object\", \"f = rss.feed\", \"# Title is a required attribute\", \"if not hasattr(f, \\\"title\\\")\", \"try\", \"print(rss.debug_message)\", \"except\", \"pass\", \"print(\\\"No title, exiting...\\\")\", \"return\", \"# Need current timestamp\", \"ts = timestamp()\", \"# Update feed\", \"feed = {}\", \"feed['link'] = f.link\", \"feed['title'] = f.title\", \"feed['description'] = f.get(\\\"description\\\", \\\"\\\")\", \"feed['published'] = datetuple_to_timestamp(f.get(\\\"published_parsed\\\",\", \"None))\", \"if feed['published'] is None\", \"feed['published'] = ts\", \"feed['etag'] = rss.get(\\\"etag\\\", None)\", \"feed['modified'] = rss.get(\\\"modified\\\", None)\", \"feeditems = []\", \"for item in rss.entries\", \"feeditem = get_clean_entry(item, timestamp=ts)\", \"feeditems.append(feeditem)\", \"db.on_synced(feed, ts, feeditems)\", \"print(\\\"Cached:\\\", feed['title'], \\\"(\\\", len(feeditems), \\\")\\\")\", \"# -*- coding: utf-8 -*-\", \"testfeed_link = \\\"http://cowboyprogrammer.org/\\\"\", \"testfeed = \\\"\\\"\\\"\", \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"<rss xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\", \"xmlns:content=\\\"http://purl.org/rss/1.0/modules/content/\\\"\", \"xmlns:atom=\\\"http://www.w3.org/2005/Atom\\\" version=\\\"2.0\\\"\", \"xmlns:media=\\\"http://search.yahoo.com/mrss/\\\"><channel>\", \"<title>Cowboy Programmer</title>\", \"<description>Ramblings about stuff.</description>\", \"<link>http://cowboyprogrammer.org/</link>\", \"<generator>Ghost 0.6</generator>\", \"<lastBuildDate>Tue, 19 May 2015 10:30:24 GMT</lastBuildDate>\", \"<atom:link href=\\\"http://cowboyprogrammer.org/rss/\\\" rel=\\\"self\\\"\", \"type=\\\"application/rss+xml\\\"/>\", \"<ttl>60</ttl>\", \"<item>\", \"<title>Title1</title>\", \"<description>This is the text in the first item.</description>\", \"<link>http://cowboyprogrammer.org/encrypt-a-btrfs-raid5-array-in-place/</link>\", \"<guid isPermaLink=\\\"false\\\">3e8eef45-56e1-4fad-8998-7811a7d4eac8</guid>\", \"<category><![CDATA[linux]]></category>\", \"<category><![CDATA[btrfs]]></category>\", \"<category><![CDATA[encryption]]></category>\", \"<category><![CDATA[security]]></category>\", \"<dc:creator><![CDATA[Jonas Kalderstam]]></dc:creator>\", \"<pubDate>Thu, 01 Jan 2015 17:40:28 GMT</pubDate>\", \"</item>\", \"<item>\", \"<title><![CDATA[Making an RSS reader app with no GUID]]></title>\", \"<description><![CDATA[This is the text in the second item.]]></description>\", \"<link>http://cowboyprogrammer.org/making-an-rss-reader-app/</link>\", \"<category><![CDATA[android]]></category>\", \"<category><![CDATA[programming]]></category>\", \"<category><![CDATA[tutorials]]></category>\", \"<dc:creator><![CDATA[Jonas Kalderstam]]></dc:creator>\", \"<pubDate>Thu, 28 Aug 2014 13:56:30 GMT</pubDate>\", \"</item>\", \"</channel></rss>\", \"\\\"\\\"\\\"\", \"testfeed_updated = \\\"\\\"\\\"\", \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"<rss xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\", \"xmlns:content=\\\"http://purl.org/rss/1.0/modules/content/\\\"\", \"xmlns:atom=\\\"http://www.w3.org/2005/Atom\\\" version=\\\"2.0\\\"\", \"xmlns:media=\\\"http://search.yahoo.com/mrss/\\\"><channel>\", \"<title>Cowboy Programmer</title>\", \"<description>Ramblings about stuff.</description>\", \"<link>http://cowboyprogrammer.org/</link>\", \"<generator>Ghost 0.6</generator>\", \"<lastBuildDate>Tue, 19 May 2015 10:30:24 GMT</lastBuildDate>\", \"<atom:link href=\\\"http://cowboyprogrammer.org/rss/\\\" rel=\\\"self\\\"\", \"type=\\\"application/rss+xml\\\"/>\", \"<ttl>60</ttl>\", \"<item>\", \"<title>Title new</title>\", \"<description>This is the text in the new item.</description>\", \"<link>http://cowboyprogrammer.org/new-item/</link>\", \"<guid isPermaLink=\\\"false\\\">abc123</guid>\", \"<pubDate>Thu, 06 Jan 2015 17:40:28 GMT</pubDate>\", \"</item>\", \"<item>\", \"<title>Title1 Updated</title>\", \"<description>This is the text in the first item.</description>\", \"<link>http://cowboyprogrammer.org/updated-link-for-first</link>\", \"<guid isPermaLink=\\\"false\\\">3e8eef45-56e1-4fad-8998-7811a7d4eac8</guid>\", \"<category><![CDATA[linux]]></category>\", \"<category><![CDATA[btrfs]]></category>\", \"<category><![CDATA[encryption]]></category>\", \"<category><![CDATA[security]]></category>\", \"<dc:creator><![CDATA[Jonas Kalderstam]]></dc:creator>\", \"<pubDate>Thu, 03 Jan 2015 17:40:28 GMT</pubDate>\", \"</item>\", \"<item>\", \"<title><![CDATA[Making an RSS reader app with no GUID]]></title>\", \"<description><![CDATA[This is the text in the second item.]]></description>\", \"<link>http://cowboyprogrammer.org/making-an-rss-reader-app/</link>\", \"<category><![CDATA[android]]></category>\", \"<category><![CDATA[programming]]></category>\", \"<category><![CDATA[tutorials]]></category>\", \"<dc:creator><![CDATA[Jonas Kalderstam]]></dc:creator>\", \"<pubDate>Thu, 28 Aug 2014 13:56:30 GMT</pubDate>\", \"</item>\", \"</channel></rss>\", \"\\\"\\\"\\\"\", \"feed = res[0]['feed']\", \"assert feed['link'] == _feed1_link\", \"def test_get_feed_and_items(graph)\", \"lim = 3\", \"res = graph.cypher.execute(get_feed_and_items(_feed1_link, lim))\", \"assert len(res) == 1\", \"assert res[0]['feed'] is not None\", \"assert res[0]['items'] is not None\", \"assert res[0]['feed']['link'] == _feed1_link\", \"assert res[0]['feed']['title'] is not None\", \"items = res[0]['items']\", \"assert len(items) == lim\", \"def test_guid_conflict(graph)\", \"# Two items in two different feeds having the same guid\", \"# must be possible\", \"ts = timestamp()\", \"guid = 'guid123adfkilbvjqeo'\", \"f1 = make_feed(ts, \\\"http://feedfirst.com/rss\\\", 'FeedA', 'FeedA', ts)\", \"items1 = [make_item(ts,\", \"guid,\", \"f1['link'] + '/item/',\", \"'titleA',\", \"'descrip',\", \"'titlestrip',\", \"'snippet',\", \"ts)]\", \"# Save first\", \"graph.cypher.execute(on_synced(f1, ts, items1))\", \"f2 = make_feed(ts, \\\"http://feedsecond.com/rss\\\", 'FeedB', 'FeedB', ts)\", \"items2 = [make_item(ts,\", \"guid,\", \"f2['link'] + '/item/',\", \"'titleB',\", \"'descrip',\", \"'titlestrip',\", \"'snippet',\", \"ts)]\", \"# Save second\", \"graph.cypher.execute(on_synced(f2, ts, items2))\", \"res = graph.cypher.execute(\\\"MATCH (i:Item {{ guid: {} }})\\\\n\\\".format(json.dumps(guid)) \", \"\\\"RETURN COUNT(i) as count\\\")\", \"assert len(res) == 1\", \"assert res[0]['count'] == 2\", \"# -*- coding: utf-8 -*-\", \"from ..sync import parse_feed as cache_feed\", \"from ..database import GraphDB\", \"from .feeds import testfeed, testfeed_link, testfeed_updated\", \"def test_cache_feed(graph)\", \"# Local rss file\", \"db = GraphDB(graph=graph)\", \"# Make sure user exists\", \"email = 'bob@bob.com'\", \"db.merge_user(email)\", \"# First subscribe\", \"db.subscribe(email, testfeed_link)\", \"rss = fp.parse(testfeed)\", \"cache_feed(db, rss)\", \"res = graph.cypher.execute(\\\"MATCH (:Feed {{link: {} }})<-[:IN]-(item:Item)\\\\nRETURN COUNT(item) as count\\\".format(json.dumps(testfeed_link)))\", \"assert len(res) == 1\", \"assert res[0]['count'] == 2\", \"# Make sure feed stuff are correct\", \"res = graph.cypher.execute(\\\"MATCH (feed:Feed {{link: {} }})\\\\nRETURN feed\\\".format(json.dumps(testfeed_link)))\", \"f = res[0]['feed']\", \"print(rss.feed)\", \"print(f)\", \"assert f['title'] == \\\"Cowboy Programmer\\\"\", \"assert f['description'] == \\\"Ramblings about stuff.\\\"\", \"# Sync again should make no difference, as the guids are the same\", \"cache_feed(db, rss)\", \"res = graph.cypher.execute(\\\"MATCH (:Feed {{link: {} }})<-[:IN]-(item:Item)\\\\nRETURN COUNT(item) as count\\\".format(json.dumps(testfeed_link)))\", \"assert len(res) == 1\", \"assert res[0]['count'] == 2\", \"def test_cache_updated(graph)\", \"db = GraphDB(graph=graph)\", \"rss = fp.parse(testfeed_updated)\", \"cache_feed(db, rss)\", \"res = graph.cypher.execute(\\\"MATCH (:Feed {{link: {} }})<-[:IN]-(item:Item)\\\\nRETURN COUNT(item) as count\\\".format(json.dumps(testfeed_link)))\", \"assert len(res) == 1\", \"# There is one new item, and one item was updated\", \"assert res[0]['count'] == 3\", \"from ..util import escaped, escapedict\", \"def test_escapedict()\", \"# One dict as arg\", \"res = escapedict(dict(a='a', b='b'))\", \"assert res['a'] == '\\\"a\\\"'\", \"assert res['b'] == '\\\"b\\\"'\", \"# One dict as kwargs\", \"res = escapedict(a='a', b='b')\", \"assert res['a'] == '\\\"a\\\"'\", \"assert res['b'] == '\\\"b\\\"'\", \"# Several dicts\", \"res = escapedict(dict(a='a', b='b'),\", \"dict(c='c', d='d'))\", \"assert len(res) == 2\", \"assert res[0]['a'] == '\\\"a\\\"'\", \"assert res[0]['b'] == '\\\"b\\\"'\", \"assert res[1]['c'] == '\\\"c\\\"'\", \"assert res[1]['d'] == '\\\"d\\\"'\", \"def test_escaped()\", \"@escaped\", \"def mytest(arg)\", \"return arg\", \"assert '\\\"bob\\\"' == mytest('bob')\", \"assert 'null' == mytest(None)\", \"from datetime import datetime, timezone\", \"def unescapedict(*args, **kwargs)\", \"'''\", \"Reverse escaping done by escapedict.\", \"Example, a single dictionary object\", \">>> unescapedict({'a': '\\\"a\\\"'})\", \"{'a': 'a'}\", \"Example, keyword arguments\", \">>> unescapedict(a='\\\"a\\\"')\", \"{'a': 'a'}\", \"Example, several dictionaries\", \">>> unescapedict({'a': '\\\"a\\\"'}, {'b': '\\\"b\\\"'})\", \"[{'a': 'a'}, {'b': 'b'}]\", \"Things that breaks json decoding are passed through\", \">>> unescapedict(a='http://test.com')\", \"{'a': 'http://test.com'}\", \"'''\", \"if len(args) > 1\", \"return [unescapedict(d) for d in args]\", \"elif len(args) == 1\", \"kwargs = args[0]\", \"res = {}\", \"for k, v in kwargs.items()\", \"try\", \"res[k] = json.loads(v)\", \"except\", \"res[k] = v\", \"return res\", \"def escapedict(*args, **kwargs)\", \"'''\", \"Push every item in a dictionary through json.dumps\", \"Example, a single dictionary object\", \">>> escapedict(dict(a='a'))\", \"{'a': '\\\"a\\\"'}\", \"Example, keyword arguments\", \">>> escapedict(a='a')\", \"{'a': '\\\"a\\\"'}\", \"Example, several dictionaries\", \">>> escapedict(dict(a='a'), dict(b='b'))\", \"[{'a': '\\\"a\\\"'}, {'b': '\\\"b\\\"'}]\", \"'''\", \"if len(args) > 1\", \"return [escapedict(d) for d in args]\", \"elif len(args) == 1\", \"kwargs = args[0]\", \"return {k: json.dumps(v) for k, v in kwargs.items()}\", \"def escaped(f)\", \"'''Annotation which pushes every argument through json.dumps'''\", \"def inner(*args, **kwargs)\", \"args = [json.dumps(x) for x in args]\", \"kwargs = {k: json.dumps(v) for k, v in kwargs.items()}\", \"return f(*args, **kwargs)\", \"return inner\", \"def datetuple_to_timestamp(tup)\", \"'''\", \"Convert a Python date tuple, as returned by feedparser's published_parsed,\", \"to a timestamp (milliseconds since the epoch). If None, returns None.\", \"Example\", \">>> datetuple_to_timestamp(None)\", \">>> datetuple_to_timestamp((2009, 3, 23, 12, 6, 34, 0, 82, 0))\", \"1237809994000\", \"'''\", \"if tup is None\", \"return None\", \"return int(1000 * datetime(tzinfo=timezone.utc,\", \"def parse_timestamp(timestamp)\", \"'''Parses a timestamp string and returns a timestamp in milliseconds\", \"since the epochs. Supports several formats, examples\", \"In second precision, format common in RSS feeds\", \">>> parse_timestamp(\\\"2013-09-29T13:21:42\\\")\", \"1380460902000\", \"Or in fractional second precision (shown in microseconds)\", \">>> parse_timestamp(\\\"2013-09-29T13:21:42.123456\\\")\", \"1380460902123\", \"With timezone specified\", \">>> parse_timestamp(\\\"2013-09-29T13:21:42Z\\\")\", \"1380460902000\", \">>> parse_timestamp(\\\"2013-09-29T13:21:42+0200\\\")\", \"1380453702000\", \"Formats common in Atom feeds\", \">>> parse_timestamp(\\\"Fri, 05 Sep 2014 12:55:00 +0200\\\")\", \"1409914500000\", \">>> parse_timestamp(\\\"Fri, 23 May 2014 10:56:50 GMT\\\")\", \"1400842610000\", \">>> parse_timestamp(\\\"Fri 23 May 2014 10:56:50 -0200\\\")\", \"1400849810000\", \"Returns None on failure to parse\", \">>> parse_timestamp(\\\"2013-09-22\\\")\", \">>> parse_timestamp(None)\", \"'''\", \"result = None\", \"if timestamp is None\", \"return None\", \"formats = ['%Y-%m-%dT%H:%M:%S',\", \"'%Y-%m-%dT%H:%M:%SZ',\", \"'%Y-%m-%dT%H:%M:%S%z',\", \"'%Y-%m-%dT%H:%M:%S.%f',\", \"'%Y-%m-%dT%H:%M:%S.%fZ',\", \"'%Y-%m-%dT%H:%M:%S.%f%z',\", \"'%a, %d %b %Y %H:%M:%S',\", \"'%a %d %b %Y %H:%M:%S',\", \"'%a, %d %b %Y %H:%M:%S %z',\", \"'%a %d %b %Y %H:%M:%S %z',\", \"'%a, %d %b %Y %H:%M:%S %Z',\", \"'%a %d %b %Y %H:%M:%S %Z']\", \"for fmt in formats\", \"if result is not None\", \"break\", \"try\", \"result = datetime.strptime(timestamp,\", \"fmt)\", \"if (result.tzinfo is not None\", \"and result.tzinfo.utcoffset(result) is not None)\", \"# If timezone is specified, convert to UTC\", \"result = result.astimezone(timezone.utc)\", \"else\", \"# Otherwise assume UTC\", \"result = result.replace(tzinfo=timezone.utc)\", \"# Finally, convert to timestamp\", \"result = int(1000 * result.timestamp())\", \"except ValueError\", \"result = None\", \"return result\", \"def format_timestamp(ts)\", \"'''Converts a timestamp integer (milliseconds) to a\", \"timestamp string in the format (in UTC)\", \"2013-09-23T23:23:12.123456+00:00\", \"Examples\", \">>> format_timestamp(None)\", \">>> format_timestamp(1237809994123)\", \"'2009-03-23T12:06:34.122999+00:00'\", \"'''\", \"if ts is None\", \"return ts\", \"ts = int(ts) / 1000\", \"dt = datetime.utcfromtimestamp(ts)\", \"dt = dt.replace(tzinfo=timezone.utc)\", \"return dt.isoformat()\", \"def feed_to_dict(feed)\", \"'''\", \"Convert a Node object to normal dict.\", \"Unescapes values.\", \"'''\", \"d = dict(timestamp=feed['timestamp'],\", \"link=feed['link'],\", \"title=feed['title'],\", \"description=feed['description'],\", \"published=feed['published'],\", \"etag=feed['etag'],\", \"modified=feed['modified'])\", \"return unescapedict(d)\", \"def feeditem_to_dict(item)\", \"'''\", \"Convert a Node object to normal dict.\", \"Unescapes values.\", \"'''\", \"d = dict(timestamp=item['timestamp'],\", \"guid=item['guid'],\", \"link=item['link'],\", \"title=item['title'],\", \"description=item['description'],\", \"title_stripped=item['title_stripped'],\", \"snippet=item['snippet'],\", \"published=item['published'],\", \"author=item['author'],\", \"comments=item['comments'],\", \"enclosure=item['enclosure'],\", \"image=item['image'])\", \"return unescapedict(d)\", \"if __name__ == \\\"__main__\\\"\", \"doctest.testmod()\", \"CREATE UNIQUE (u)-[:SUBSCRIBES {{ usertitle: {title}, timestamp: {ts} }}]->(f)\\\"\\\"\\\"\", \"from aggregator import app, read_config\", \"print(\\\"Running now\\\")\"]"}, {"project": "Feeder", "commit_id": "b7173ec200c120f4106d34e9078d9168b948b1a0", "time_stamp": 1434636204, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/database.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/rest.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/sync.py"}, {"type": "modify", "modified_path": "server/flaskapp/runsync.py"}], "find_interval": null, "la": 14, "ld": 14, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def get_database(url=None)\", \"if url is None\", \"from aggregator import app\", \"url = app.config.get('FEEDER_NEO_URL', None)\", \"_db = GraphDB(url=url)\", \"feed = feed_to_dict(r['feed'])\", \"feed['items'] = [feeditem_to_dict(i) for i in r['items']]\", \"deletes.append(feed_to_dict(r['feed']))\", \"print(\\\"Ignored:\\\", f.link, rss.debug_message)\", \"print(\\\"Ignored:\\\", f.link)\", \"# This happens when server reports no new items\", \"print(\\\"Cached:\\\", feed.link, \\\"(\\\", len(feeditems), \\\")\\\")\", \"from aggregator import read_config, sync\"]"}, {"project": "Feeder", "commit_id": "db1bf2b782a922c63ebe7d0a31c85b96fa62be21", "time_stamp": 1434636797, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/cleaner.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/sync.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/tests/test_cyphers.py"}], "find_interval": null, "la": 32, "ld": 23, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def make_item(*args, **kwargs)\", \"return make_unescaped_item(*args, **kwargs)\", \"def make_unescaped_item(timestamp, guid, link, title, description,\", \"title_stripped, snippet, published, author=None,\", \"comments=None, enclosure=None, image=None, json=None)\", \"def make_feed(*args, **kwargs)\", \"return make_unescaped_feed(*args, **kwargs)\", \"def make_unescaped_feed(timestamp, link, title, description, published,\", \"etag=None, modified=None)\", \"# on_synced will escape items, so they must not be escaped beforehand.\", \"print(\\\"Cached:\\\", feed['link'], \\\"(\\\", len(feeditems), \\\")\\\")\", \"from ..cleaner import make_unescaped_item, make_unescaped_feed\", \"f = make_unescaped_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"items.append(make_unescaped_item(ts, 'guid' + si,\", \"f = make_unescaped_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"f = make_unescaped_feed(ts, _feed1_link, 'Feed1', 'Feed1 desc', ts)\", \"items.append(make_unescaped_item(its,\", \"items.append(make_unescaped_item(its,\", \"f = make_unescaped_feed(ts, _feed3_link, 'Feed3', 'Feed3 desc', ts)\", \"items.append(make_unescaped_item(its,\", \"f = make_unescaped_feed(ts, flink, 'FeedCleanup', 'Feed desc', ts)\", \"items.append(make_unescaped_item(its,\", \"items.append(make_unescaped_item(its,\", \"items.append(make_unescaped_item(its,\", \"f1 = make_unescaped_feed(ts, \\\"http://feedfirst.com/rss\\\", 'FeedA', 'FeedA', ts)\", \"items1 = [make_unescaped_item(ts,\", \"f2 = make_unescaped_feed(ts, \\\"http://feedsecond.com/rss\\\", 'FeedB', 'FeedB', ts)\", \"items2 = [make_unescaped_item(ts,\"]"}, {"project": "Feeder", "commit_id": "e2e60bdf75e27b93bcca692600b87eba1c40a284", "time_stamp": 1434705426, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/migrate_to_neo.py"}], "find_interval": null, "la": 49, "ld": 113, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"from aggregator.database import get_database\", \"from aggregator.util import timestamp, escapedict\", \"def presetup(db)\", \"db.graph.cypher.execute(\\\"CREATE CONSTRAINT ON (feed:Feed) ASSERT feed.link IS UNIQUE\\\")\", \"db.graph.cypher.execute(\\\"CREATE CONSTRAINT ON (user:User) ASSERT user.email IS UNIQUE\\\")\", \"def migrate_feeditems(db, feed)\", \"# Make feed\", \"ts = int(1000 * feed.timestamp.timestamp())\", \"df = dict(timestamp=ts,\", \"link=feed.link,\", \"title=feed.title,\", \"description=feed.description,\", \"published=int(1000 * feed.published.timestamp()) if feed.published else ts,\", \"etag=feed.etag,\", \"modified=feed.modified)\", \"items = []\", \"for item in feed.items\", \"its = int(1000 * item.timestamp.timestamp())\", \"ips = int(1000 * item.published.timestamp()) if item.published else its\", \"guid = item.guid if item.guid else item.link\", \"di = dict(timestamp=its,\", \"guid=guid,\", \"link=item.link,\", \"title=item.title,\", \"description=item.description,\", \"title_stripped=item.title_stripped,\", \"snippet=item.snippet,\", \"published=ips,\", \"author=item.author,\", \"comments=item.comments,\", \"enclosure=item.enclosure,\", \"image=item.image)\", \"items.append(di)\", \"db.on_synced(df, ts, items)\", \"def migrate_user(db, u)\", \"db.merge_user(u.email, u.passwordhash)\", \"def migrate_userfeed(db, u, f)\", \"db.subscribe(u.email, f.link, f.title, f.tag)\", \"def migrate_userdeletion(db, u, fl)\", \"db.unsubscribe(u.email, fl)\", \"db = get_database('http://localhost:7575/db/data/')\", \"presetup(db)\", \"migrate_user(db, user)\", \"migrate_userfeed(db, user, feed)\", \"print(\\\"FeedItems\\\")\", \"feed = feed.feed\", \"migrate_feeditems(db, feed, feed.items)\", \"migrate_userdeletion(db, user, feed.link)\"]"}, {"project": "Feeder", "commit_id": "10ad332c9835852510061adac4fca2aff5d4e61c", "time_stamp": 1434706580, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/aggregator/cyphers.py"}, {"type": "modify", "modified_path": "server/flaskapp/aggregator/database.py"}], "find_interval": null, "la": 13, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"def feed_constraints()\", \"return \\\"CREATE CONSTRAINT ON (feed:Feed) ASSERT feed.link IS UNIQUE\\\"\", \"def user_constraints()\", \"return  \\\"CREATE CONSTRAINT ON (user:User) ASSERT user.email IS UNIQUE\\\"\", \"get_feed_and_items, unsubscribe,\", \"feed_constraints, user_constraints)\", \"# Make sure we have constraints\", \"self.graph.cypher.execute(feed_constraints())\", \"self.graph.cypher.execute(user_constraints())\"]"}, {"project": "Feeder", "commit_id": "3321e5f56ea0e641e5ceeb289ecb82ff58455d7a", "time_stamp": 1434706597, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/config-test.yaml"}, {"type": "modify", "modified_path": "server/flaskapp/migrate_to_neo.py"}, {"type": "modify", "modified_path": "server/flaskapp/requirements.txt"}], "find_interval": null, "la": 6, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"guid = item.link\", \"print(\\\"User:\\\", user.email)\", \"print(\\\"UserFeed:\\\", feed.title)\", \"print(\\\"FeedItems:\\\", len(feed.feed.items.all()))\", \"migrate_feeditems(db, feed)\", \"print(\\\"UserDel:\\\", feed.link)\"]"}, {"project": "Feeder", "commit_id": "40c01f8f9498c3c05088da726005574bfadd5c43", "time_stamp": 1441541271, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedFragment.java"}], "find_interval": null, "la": 5, "ld": 8, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String QUERY_PARAM_LIMIT = \\\"QUERY_PARAM_LIMIT\\\";\", \"sortOrder, uri.getQueryParameter(QUERY_PARAM_LIMIT));\", \"return new FeedItemDeltaCursorLoader(getActivity(),\", \"FeedItemSQL.URI_FEED_ITEMS.buildUpon()\", \".appendQueryParameter(RssContentProvider.QUERY_PARAM_LIMIT, \\\"50\\\").build(),\"]"}, {"project": "Feeder", "commit_id": "18c294e4ac9e872d118c6ab220f23dc8b5af5510", "time_stamp": 1444311484, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 6, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"# You should timeout if server is not responding.\", \"# In seconds but feedparser takes about 5x longer before returning.\", \"socket.setdefaulttimeout(1.0)\"]"}, {"project": "Feeder", "commit_id": "4836520ab798e878c37e1e97aa3d47db90c2ce45", "time_stamp": 1444334418, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"0a361473cd6ca91a25456c454926d677101a00f3\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 70, "ld": 24, "fix_file_num": 1, "bug_fix_files": "{\"app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java\": [\"697\", \"698\", \"699\", \"700\", \"701\", \"702\", \"704\", \"707\", \"709\", \"710\", \"712\", \"713\", \"716\", \"717\", \"718\", \"719\", \"721\", \"722\", \"725\"]}", "rules": null, "clean_lines": "[\"@Override\", \"public String toString() {\", \"if (isTag) {\", \"return \\\"Tag: \\\" + tag;\", \"} else {\", \"return \\\"Item: \\\" + item.title + \\\" (\\\" + tag + \\\")\\\";\", \"}\", \"}\", \"private final String TAG = FeedsAdapter.class.getSimpleName();\", \"if (getItemLevel(o1) != getItemLevel(o2)) {\", \"int result;\", \"if (getItemLevel(o1) < getItemLevel(o2)) {\", \"result = compare(o1, getParentOf(o2));\", \"if (result == 0) {\", \"result = -1;\", \"}\", \"result = compare(getParentOf(o1), o2);\", \"if (result == 0) {\", \"result = 1;\", \"}\", \"return result;\", \"} // Same level guaranteed now\", \"else if (o1.isTag != o2.isTag) {\", \"if (o1.isTag) {\", \"}\", \"} // Both tags, or both not\", \"else if (o1.isTag) {\", \"return mCollator.compare(o1.tag, o2.tag);\", \"} // Make sure they have the same parent\", \"else {\", \"FeedWrapper p1 = getParentOf(o1);\", \"FeedWrapper p2 = getParentOf(o2);\", \"if (p1 == null && p2 == null ||\", \"p1 != null && p1.equals(p2)) {\", \"return mCollator.compare(o1.item.title, o2.item.title);\", \"try {\", \"return compare(p1, p2);\", \"} catch (NullPointerException e) {\", \"Log.e(TAG, \\\"\\\" + e);\", \"return 0;\", \"}\"]"}, {"project": "Feeder", "commit_id": "d7d963ea6464f861bcc42bffaeb0f21c288c557a", "time_stamp": 1444410546, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}], "find_interval": null, "la": 26, "ld": 22, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"private boolean sameParent(FeedWrapper o1, FeedWrapper o2) {\", \"try {\", \"return getParentOf(o1).equals(getParentOf(o2));\", \"} catch (NullPointerException e) {\", \"return getParentOf(o1) == null && getParentOf(o2) == null;\", \"}\", \"}\", \"public FeedWrapper getParentOf(FeedWrapper item) {\", \"if (item.isTag || item.item.tag == null || item.item.tag.isEmpty()) {\", \"return new FeedWrapper(item.tag);\", \"} // Only compare with same parent\", \"else if (!sameParent(o1, o2)) {\", \"try {\", \"return compare(getParentOf(o1), getParentOf(o2));\", \"} catch (NullPointerException e) {\", \"return 0;\", \"}\", \"}\", \"} // Both items here with same parent\", \"return mCollator.compare(o1.item.title, o2.item.title);\"]"}, {"project": "Feeder", "commit_id": "55e2c3d170df06711f629c39e7055df1ec0127dc", "time_stamp": 1451922304, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "delete", "modified_path": "server/flaskapp/docker/build_docker.sh"}, {"type": "delete", "modified_path": "server/flaskapp/docker/run_docker.sh"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 4, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"try\", \"print(\\\"Cached:\\\", feed.title)\", \"except\", \"print(\\\"Cached something with a weird title I can't print\\\")\"]"}, {"project": "Feeder", "commit_id": "4d6d6de07a78dc6e6c21731d99f324bf2f912d79", "time_stamp": 1451922319, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/docker/Dockerfile"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "10af8af9d4180201674141bbd8f75104bbdc2fb3", "time_stamp": 1451922338, "is_fix": false, "classification": "Non Functional", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/docker/run.sh"}, {"type": "add", "modified_path": "server/flaskapp/docker/sync.sh"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "05ae5d60b892c750732588ef76ad6e05c851f120", "time_stamp": 1451923494, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "server/flaskapp/docker/README.md"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "0b96d618308b91e773c97c2da4faed1b11f88297", "time_stamp": 1452252762, "is_fix": false, "classification": "Preventative", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/gauth.py"}], "find_interval": null, "la": 5, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"if not valid\", \"# Try really plain text\", \"valid = (userpass == password)\"]"}, {"project": "Feeder", "commit_id": "0bc15e84a42ce89ceaeb86325f0c1b52bb877740", "time_stamp": 1452253470, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"feb9e823ad2931e16a62bf5e4931054dbbd99e43\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}], "find_interval": null, "la": 1, "ld": 1, "fix_file_num": 1, "bug_fix_files": "{\"server/flaskapp/feeder/rest.py\": [\"197\"]}", "rules": null, "clean_lines": "[\"userfeed.title = args.title or feed.title\"]"}, {"project": "Feeder", "commit_id": "80b072f46c9e93382feada7d6b2b0f894aa56828", "time_stamp": 1452253556, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "server/flaskapp/feeder/models.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/rest.py"}, {"type": "modify", "modified_path": "server/flaskapp/feeder/sync.py"}], "find_interval": null, "la": 6, "ld": 1, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"guid = Column(String, nullable=False, index=True)\", \"'guid': fields.String,\", \"# Guid is exists, otherwise link\", \"guid = item.get(\\\"id\\\", item.link)\", \"FeedItem.guid == guid).\", \"feeditem.guid = guid\"]"}, {"project": "Feeder", "commit_id": "623253512406cc3ac5c377e481956b80516a709b", "time_stamp": 1452254607, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedItemSQL.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncHelper.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/apis/BackendAPIClient.java"}], "find_interval": null, "la": 64, "ld": 6, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public static final String COL_GUID = \\\"guid\\\";\", \"COL_JSON, COL_GUID};\", \"+ COL_GUID + \\\" TEXT NOT NULL,\\\"\", \"\\\" UNIQUE(\\\" + COL_GUID + \\\",\\\" + COL_FEED + \\\") ON CONFLICT \\\" \", \"\\\"IGNORE\\\"\", \"public String guid = null;\", \"this.guid = cursor.getString(16);\", \"Util.PutNullable(values, COL_GUID, guid);\", \"itemOp.withValue(FeedItemSQL.COL_GUID, item.guid)\", \".withValue(FeedItemSQL.COL_LINK, item.link)\", \"public String guid;\"]"}, {"project": "Feeder", "commit_id": "38051be70dd74cf725d70c27eeb78df3b1af4cde", "time_stamp": 1452438683, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/Cleanup.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/DatabaseHandler.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/RssContentProvider.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/RssSyncAdapter.java"}], "find_interval": null, "la": 211, "ld": 7, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[\"public class Cleanup {\", \"private static final String TAG = \\\"Feeder.Cleanup\\\";\", \"public static void prune(final Context context) throws RemoteException, OperationApplicationException {\", \"final ArrayList<ContentProviderOperation> operations =\", \"new ArrayList<ContentProviderOperation>();\", \"List<Long> feedIds = getAllFeedIds(context);\", \"for (long feedId : feedIds) {\", \"for (long itemId : getItemsToDelete(context, feedId)) {\", \"addDelete(itemId, operations);\", \"}\", \"}\", \"if (!operations.isEmpty()) {\", \"Log.d(TAG, \\\"Prune \\\" + operations.size() + \\\" feed items.\\\");\", \"context.getContentResolver()\", \".applyBatch(RssContentProvider.AUTHORITY, operations);\", \"}\", \"}\", \"private static void addDelete(final long itemId, final ArrayList<ContentProviderOperation> operations) {\", \"operations.add(ContentProviderOperation\", \".newDelete(Uri\", \".withAppendedPath(FeedItemSQL.URI_FEED_ITEMS, Long.toString(itemId)))\", \".build());\", \"}\", \"private static\", \"@NonNull\", \"List<Long> getItemsToDelete(final Context context, final long listId) {\", \"final ArrayList<Long> result = new ArrayList<>();\", \"Cursor cursor = null;\", \"try {\", \"cursor = context.getContentResolver().query(FeedItemSQL.URI_FEED_ITEMS.buildUpon()\", \".appendQueryParameter(RssContentProvider.QUERY_PARAM_SKIP, \\\"50\\\").build(),\", \"new String[]{FeedItemSQL.COL_ID},\", \"FeedItemSQL.COL_FEED + \\\" IS ? \\\",\", \"new String[]{Long.toString(listId)},\", \"FeedItemSQL.COL_PUBDATE + \\\" DESC\\\");\", \"while (cursor != null && cursor.moveToNext()) {\", \"result.add(cursor.getLong(0));\", \"}\", \"} finally {\", \"if (cursor != null) {\", \"cursor.close();\", \"}\", \"}\", \"return result;\", \"}\", \"private static\", \"@NonNull\", \"List<Long> getAllFeedIds(final Context context) {\", \"final ArrayList<Long> result = new ArrayList<>();\", \"Cursor cursor = null;\", \"try {\", \"cursor = context.getContentResolver().query(FeedSQL.URI_FEEDS, new String[]{FeedSQL.COL_ID},\", \"null, null, null);\", \"while (cursor != null && cursor.moveToNext()) {\", \"result.add(cursor.getLong(0));\", \"}\", \"} finally {\", \"if (cursor != null) {\", \"cursor.close();\", \"}\", \"}\", \"return result;\", \"}\", \"}\", \"public static final String QUERY_PARAM_SKIP = \\\"QUERY_PARAM_SKIP\\\";\", \"SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();\", \"queryBuilder.setTables(table);\", \"String query = queryBuilder.buildQuery(projection, selection,null, null, sortOrder, null);\", \"query += getLimitString(uri);\", \".rawQuery(query, selectionArgs);\", \"private String getLimitString(Uri uri) {\", \"String offset = uri.getQueryParameter(QUERY_PARAM_SKIP);\", \"if (offset == null) {\", \"offset = \\\"-1\\\";\", \"}\", \"String limit = uri.getQueryParameter(QUERY_PARAM_LIMIT);\", \"if (limit == null) {\", \"limit = \\\"-1\\\";\", \"}\", \"return String.format(\\\" LIMIT %s,%s\\\", offset, limit);\", \"}\", \"Cleanup.prune(getContext());\"]"}, {"project": "Feeder", "commit_id": "ad27c5426e5e03fb1e5f93e52f8d69a191c950ec", "time_stamp": 1458489796, "is_fix": true, "classification": "Corrective", "linked": false, "contains_bug": false, "fix_by": null, "fixes": "[\"6c14766429262d9916d5ddf3c4f425f5479cb161\", \"952d3805fca75c251a2d542dd28005dc293c6230\", \"0a361473cd6ca91a25456c454926d677101a00f3\"]", "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": "app/build.gradle"}, {"type": "modify", "modified_path": "app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/db/FeedSQL.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/function/Function.java"}, {"type": "add", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/function/Supplier.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java"}, {"type": "modify", "modified_path": "app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java"}, {"type": "add", "modified_path": "app/src/test/java/com/nononsenseapps/feeder/model/OPMLWriterTest.java"}], "find_interval": null, "la": 300, "ld": 85, "fix_file_num": 5, "bug_fix_files": "{\"app/src/androidTest/java/com/nononsenseapps/feeder/OPMLTest.java\": [\"33\", \"34\", \"35\", \"36\", \"38\", \"39\", \"40\", \"43\", \"44\", \"45\", \"81\", \"84\", \"105\", \"125\", \"128\", \"195\", \"196\", \"227\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLParser.java\": [\"100\", \"112\", \"113\", \"114\", \"120\"], \"app/src/main/java/com/nononsenseapps/feeder/model/OPMLWriter.java\": [\"35\", \"37\", \"38\", \"41\", \"42\", \"45\", \"52\", \"57\", \"62\", \"84\", \"85\", \"86\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"97\", \"98\", \"99\", \"100\", \"101\", \"102\", \"103\", \"104\", \"105\", \"107\", \"110\", \"111\", \"113\", \"114\", \"116\", \"117\", \"118\", \"119\", \"120\", \"121\", \"122\", \"123\", \"124\", \"126\"], \"app/src/main/java/com/nononsenseapps/feeder/ui/BaseActivity.java\": [\"591\", \"689\", \"803\", \"805\"], \"app/src/main/java/com/nononsenseapps/feeder/ui/FeedActivity.java\": [\"246\", \"247\"]}", "rules": null, "clean_lines": "[\"\\\"    <outline title=\\\\\\\"&quot;0&quot;\\\\\\\" text=\\\\\\\"&quot;0&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain0.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"    <outline title=\\\\\\\"&quot;3&quot;\\\\\\\" text=\\\\\\\"&quot;3&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain3.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"    <outline title=\\\\\\\"&quot;6&quot;\\\\\\\" text=\\\\\\\"&quot;6&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain6.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"    <outline title=\\\\\\\"&quot;9&quot;\\\\\\\" text=\\\\\\\"&quot;9&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain9.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;1&quot;\\\\\\\" text=\\\\\\\"&quot;1&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain1.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;4&quot;\\\\\\\" text=\\\\\\\"&quot;4&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain4.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;7&quot;\\\\\\\" text=\\\\\\\"&quot;7&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain7.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;2&quot;\\\\\\\" text=\\\\\\\"&quot;2&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain2.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;5&quot;\\\\\\\" text=\\\\\\\"&quot;5&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain5.com/rss.xml\\\\\\\"/>\\\",\", \"\\\"      <outline title=\\\\\\\"&quot;8&quot;\\\\\\\" text=\\\\\\\"&quot;8&quot;\\\\\\\" type=\\\\\\\"rss\\\\\\\" xmlUrl=\\\\\\\"http://somedomain8.com/rss.xml\\\\\\\"/>\\\",\", \"private final String fmtTitle = \\\"\\\\\\\"%d\\\\\\\"\\\";\", \"int i = Integer.parseInt(feed.title.replaceAll(\\\"\\\\\\\"\\\", \\\"\\\"));\", \"assertEquals( \\\"\\\\\\\"\\\" + Integer.toString(i) + \\\"\\\\\\\"\\\", feed.title);\", \"feednew.title = String.format(fmtTitle, 20);\", \"int i = Integer.parseInt(feed.title.replaceAll(\\\"\\\\\\\"\\\", \\\"\\\"));\", \"assertEquals(\\\"\\\\\\\"\\\" + Integer.toString(i) + \\\"\\\\\\\"\\\", feed.title);\", \"OPMLWriter writer = new OPMLWriter();\", \"writer.writeFile(path.getAbsolutePath(),\", \"new Supplier<Iterable<String>>() {\", \"@Override\", \"public Iterable<String> get() {\", \"ArrayList<String> tags = new ArrayList<>();\", \"Cursor c = context.getContentResolver()\", \".query(FeedSQL.URI_TAGSWITHCOUNTS,\", \"Util.ToStringArray(FeedSQL.COL_TAG), null, null,\", \"null);\", \"try {\", \"while (c.moveToNext()) {\", \"tags.add(c.getString(0));\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return tags;\", \"}\", \"},\", \"new Function<String, Iterable<FeedSQL>>() {\", \"@Override\", \"public Iterable<FeedSQL> apply(String tag) {\", \"ArrayList<FeedSQL> feeds = new ArrayList<>();\", \"final String where = FeedSQL.COL_TAG + \\\" IS ?\\\";\", \"final String[] args = Util.ToStringArray(tag == null ? \\\"\\\": tag);\", \"Cursor c = context.getContentResolver()\", \".query(FeedSQL.URI_FEEDS, FeedSQL.FIELDS,\", \"where, args, null);\", \"try {\", \"while (c.moveToNext()) {\", \"feeds.add(new FeedSQL(c));\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return feeds;\", \"}\", \"});\", \"feed.title = String.format(fmtTitle, i);\", \"public FeedSQL withUnreadCount(int count) {\", \"this.unreadCount = count;\", \"return this;\", \"}\", \"public FeedSQL withNotify(int flag) {\", \"this.notify = flag;\", \"return this;\", \"}\", \"public FeedSQL withTimestamp(String timestamp) {\", \"this.timestamp = timestamp;\", \"return this;\", \"}\", \"public FeedSQL withTag(String tag) {\", \"this.tag = tag;\", \"return this;\", \"}\", \"public FeedSQL withUrl(String url) {\", \"this.url = url;\", \"return this;\", \"}\", \"public FeedSQL withTitle(String title) {\", \"this.title = title;\", \"return this;\", \"}\", \"public FeedSQL withId(long id) {\", \"this.id = id;\", \"return this;\", \"}\", \"public interface Function<T, R> {\", \"R apply(T input);\", \"}\", \"public interface Supplier<T> {\", \"T get();\", \"}\", \"public void startElement(final String uri, final String localName, final String qName,\", \"final Attributes attr) throws SAXException {\", \"FeedSQL feed = getFeed(mContext, attr.getValue(\\\"xmlurl\\\"))\", \".withTitle(unescape(attr.getValue(\\\"title\\\")))\", \".withTag(mCurrentTag);\", \"mCurrentTag = unescape(attr.getValue(\\\"title\\\"));\", \"public OPMLWriter() {\", \"public void writeFile(final String path,\", \"Supplier<Iterable<String>> tagSupplier,\", \"Function<String, Iterable<FeedSQL>> feedsWithTag)\", \"throws FileNotFoundException {\", \"writeOutputStream(new FileOutputStream(path), tagSupplier, feedsWithTag);\", \"public void writeOutputStream(final OutputStream os,\", \"Supplier<Iterable<String>> tagSupplier,\", \"Function<String, Iterable<FeedSQL>> feedsWithTag) {\", \"for (String tag : tagSupplier.get()) {\", \"for (FeedSQL feed: feedsWithTag.apply(tag)) {\", \"bf.write(String.format(FEEDFMT, escape(feed.title), escape(feed.url)));\", \"static String escape(final String s) {\", \"return s.replaceAll(\\\"&\\\", \\\"&amp;\\\")\", \".replaceAll(\\\"\\\\\\\"\\\", \\\"&quot;\\\")\", \".replaceAll(\\\"'\\\", \\\"&apos;\\\")\", \".replaceAll(\\\"<\\\", \\\"&lt;\\\")\", \".replaceAll(\\\">\\\", \\\"&gt;\\\");\", \"static String unescape(final String s) {\", \"return s.replaceAll(\\\"&quot;\\\", \\\"\\\\\\\"\\\")\", \".replaceAll(\\\"&apos;\\\", \\\"'\\\")\", \".replaceAll(\\\"&lt;\\\", \\\"<\\\")\", \".replaceAll(\\\"&gt;\\\", \\\">\\\")\", \".replaceAll(\\\"&amp;\\\", \\\"&\\\");\", \"return new FeedDeltaCursorLoader(this, FeedSQL.URI_FEEDSWITHCOUNTS,\", \"FeedSQL.FIELDS_VIEWCOUNT, null, null, null);\", \"mItems = new ExpandableSortedList<>(\", \"FeedWrapper.class, new ExpandableSortedList.ExpandableCallback<FeedWrapper>() {\", \"return oldItem.tag.equals(newItem.tag) &&\", \"mItems.getTagUnreadCount(oldItem) ==\", \"mItems.getTagUnreadCount(newItem);\", \"return oldItem.item.title.equals(newItem.item.title) &&\", \"oldItem.item.unreadCount == newItem.item.unreadCount;\", \"OPMLWriter writer = new OPMLWriter();\", \"writer.writeOutputStream(os,\", \"new Supplier<Iterable<String>>() {\", \"@Override\", \"public Iterable<String> get() {\", \"ArrayList<String> tags = new ArrayList<>();\", \"Cursor c = FeedActivity.this.getContentResolver()\", \".query(FeedSQL.URI_TAGSWITHCOUNTS,\", \"Util.ToStringArray(FeedSQL.COL_TAG), null, null,\", \"null);\", \"try {\", \"while (c.moveToNext()) {\", \"tags.add(c.getString(0));\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return tags;\", \"}\", \"},\", \"new Function<String, Iterable<FeedSQL>>() {\", \"@Override\", \"public Iterable<FeedSQL> apply(String tag) {\", \"ArrayList<FeedSQL> feeds = new ArrayList<>();\", \"final String where = FeedSQL.COL_TAG + \\\" IS ?\\\";\", \"final String[] args = Util.ToStringArray(tag == null ? \\\"\\\": tag);\", \"Cursor c = FeedActivity.this.getContentResolver()\", \".query(FeedSQL.URI_FEEDS, FeedSQL.FIELDS,\", \"where, args, null);\", \"try {\", \"while (c.moveToNext()) {\", \"feeds.add(new FeedSQL(c));\", \"}\", \"} finally {\", \"if (c != null) {\", \"c.close();\", \"}\", \"}\", \"return feeds;\", \"}\", \"}\", \");\", \"public class OPMLWriterTest {\", \"OPMLWriter writer = new OPMLWriter();\", \"@Test\", \"public void escapeAndUnescape() throws Exception {\", \"final String original = \\\"A \\\\\\\"feeditem\\\\\\\" with id '9' > 0 & < 10\\\";\", \"String escaped = OPMLWriter.escape(original);\", \"String unescaped = OPMLWriter.unescape(escaped);\", \"assertEquals(original, unescaped);\", \"assertEquals(escaped, OPMLWriter.escape(unescaped));\", \"assertEquals(original, OPMLWriter.unescape(escaped));\", \"}\", \"@Test\", \"public void shouldEscapeStrings() throws Exception {\", \"ByteArrayOutputStream bos = new ByteArrayOutputStream();\", \"writer.writeOutputStream(bos,\", \"new Supplier<Iterable<String>>() {\", \"@Override\", \"public Iterable<String> get() {\", \"return Collections.singletonList(\\\"quoted \\\\\\\"tag\\\\\\\"\\\");\", \"}\", \"},\", \"new Function<String, Iterable<FeedSQL>>() {\", \"@Override\", \"public Iterable<FeedSQL> apply(String tag) {\", \"ArrayList<FeedSQL> result = new ArrayList<>();\", \"result.add(new FeedSQL()\", \".withId(1L)\", \".withNotify(0)\", \".withTag(tag)\", \".withTitle(\\\"A \\\\\\\"feeditem\\\\\\\" with id '9' > 0 & < 10\\\")\", \".withUnreadCount(2)\", \".withUrl(\\\"http://somedomain.com/rss.xml?format=feed&type=rss\\\"));\", \"return result;\", \"}\", \"});\", \"String output = new String(bos.toByteArray());\", \"assertEquals(expected, output);\", \"}\", \"static final String expected = \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\n\\\" \", \"\\\"<opml version=\\\\\\\"1.1\\\\\\\">\\\\n\\\" \", \"\\\"  <head>\\\\n\\\" \", \"\\\"    <title>Feeder</title>\\\\n\\\" \", \"\\\"  </head>\\\\n\\\" \", \"\\\"  <body>\\\\n\\\" \", \"\\\"    <outline title=\\\\\\\"quoted &quot;tag&quot;\\\\\\\" text=\\\\\\\"quoted &quot;tag&quot;\\\\\\\">\\\\n\\\" \", \"\\\"      <outline title=\\\\\\\"A &quot;feeditem&quot; with id &apos;9&apos; &gt; 0 \\\" \", \"\\\"&amp; &lt; 10\\\\\\\" text=\\\\\\\"A &quot;feeditem&quot; with id &apos;9&apos; &gt; 0 &amp;\\\" \", \"\\\" &lt; 10\\\\\\\" type=\\\\\\\"rss\\\\\\\" \\\" \", \"\\\"xmlUrl=\\\\\\\"http://somedomain.com/rss.xml?format=feed&amp;type=rss\\\\\\\"/>\\\\n\\\" \", \"\\\"    </outline>\\\\n\\\" \", \"\\\"  </body>\\\\n\\\" \", \"\\\"</opml>\\\";\", \"}\"]"}, {"project": "Feeder", "commit_id": "de4009697aab14b1c9a671459f8f509b936aca7a", "time_stamp": 1469357741, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "add", "modified_path": ".drone.yml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "d901038abf8aac58e163f9b78062b82e0abb270a", "time_stamp": 1469357955, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": ".drone.yml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "c9b8ec60cd885f28f9f31093ddf8e688867958df", "time_stamp": 1469358395, "is_fix": false, "classification": "None", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": ".drone.yml"}, {"type": "modify", "modified_path": "server/flaskapp/requirements.txt"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "a4f0e76e9437de869b472713e914c5f309adbfec", "time_stamp": 1469358745, "is_fix": false, "classification": "Feature Addition", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [{"type": "modify", "modified_path": ".drone.yml"}], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": "[]"}, {"project": "Feeder", "commit_id": "12a9e84471f7ba819277064bf5591c434622c383", "time_stamp": 1469361162, "is_fix": false, "classification": "Merge", "linked": false, "contains_bug": false, "fix_by": null, "fixes": null, "buggy_lines": null, "block": 0, "critical": 0, "major": 0, "block_total": 0, "critical_total": 0, "major_total": 0, "file_name_stat": [], "find_interval": null, "la": 0, "ld": 0, "fix_file_num": 0, "bug_fix_files": null, "rules": null, "clean_lines": null}]