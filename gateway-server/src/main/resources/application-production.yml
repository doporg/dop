server:
  port: 8888
spring:
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  application:
    name: gateway-server
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://172.29.7.157:3306/db_dop_gateway?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    username: dop
    password: Dop_mysql_12345
    driver-class-name: com.mysql.cj.jdbc.Driver
    max-active: 10
    max-idle: 5
    min-idle: 5
    initial-size: 5
    max-wait: 10000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  zipkin:
    base-url: http://zipkin-server:9000
  sleuth:
    sampler:
      percentage: 1.0

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS: true
spring.jackson.serialization.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: false

project:
  groupId: @project.groupId@
  artifactId: @project.artifactId@
  version: @project.version@
  name: @project.name@
  description: @project.description@
  url: @project.url@
swagger.enable: true
eureka:
  instance:
    appname: ${spring.application.name}
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
    prefer-ip-address: true
    #续约更新时间间隔
    lease-renewal-interval-in-seconds: 5
    #续约到期时间
    lease-expiration-duration-in-seconds: 10
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
    registry-fetch-interval-seconds: 5 #定时刷新本地缓存
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 15000000
zuul:
  host:
    socket-timeout-millis: 15000000
    connect-timeout-millis: 15000000
  ignored-headers: Access-Control-Allow-Credentials, Access-Control-Allow-Origin
ribbon:
  ReadTimeout: 15000000
  ConnectTimeout: 15000000
  ServerListRefreshInterval: 2000
  #正常上线下线客户端最大感知时间：eureka.client.registryFetchIntervalSeconds+ribbon. ServerListRefreshInterval = 7秒
  #异常下线客户端最大感知时间：
  #2*eureka.instance.leaseExpirationDurationInSeconds+
  #eureka.server.evictionIntervalTimerInMs+
  #eureka.client.registryFetchIntervalSeconds+
  #ribbon. ServerListRefreshInterval = 32
logging.path: ./logs/${spring.application.name}

# oauth2
gateway:
  oauth:
    AES:
      clientKey: IVgXZ_LavzG4ySKsxcqJC1tiGZia2xjhyzDz_tTCjU7-W5P5Xc9yqyevX-ro_qiW
      tokenKey: APbCXRbW7Rw6JAX03GJiHKgTM5UMUQyXXhWpnPbjgIEjBnURgLCbes3ty1x_vJU7HQ==
  jwt:
    secret: ANBgkqhkiG9w0BAQEDANBgkqhkiG9w0BAQE